!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
10	lib/views/text/index.js	/^    colWidths: [10, 10, 10, 15, 10, 40]$/;"	r
10	lib/views/text/index.js	/^    colWidths: [10, 10, 40]$/;"	r
10	lib/views/text/index.js	/^    colWidths: [30, 10, 40]$/;"	r
10	lib/views/text/index.js	/^    colWidths: [40, 10, 20]$/;"	r
30	lib/views/text/index.js	/^    colWidths: [10, 30, 10, 10, 15]$/;"	r
40	lib/views/text/index.js	/^    colWidths: [10, 40, 40]$/;"	r
6868	lib/processes/supervisor.js	/^          \/\/ start each process with its own debugger on ports 5858, 6868, 7878, 8888, 9898 etc$/;"	r
8	lib/views/text/index.js	/^    colWidths: [8, 8, 10, 10]$/;"	r
Account	test/fixtures/incoming_payments.js	/^    Account: 'rscJF4TWS2jBe43MvUomTtCcyrbtTRMSNr',$/;"	r
BASIC_AUTH	config-example.json	/^  "BASIC_AUTH": false,$/;"	f
BasicStrategy	lib/http/passport_auth.js	/^var BasicStrategy = require('passport-http').BasicStrategy;$/;"	r
Bridge	lib/data/models/bridges.js	/^var Bridge = database.define('bridges', {$/;"	r
Bridge	lib/http/controllers/resources/bridges.js	/^var Bridge = require(__dirname+'\/..\/..\/..\/..\/lib\/data').models.bridges;$/;"	r
BridgePaymentLink	lib/host_meta/bridge_payment_link.js	/^function BridgePaymentLink(options) {$/;"	r
BridgePaymentStatusLink	lib/host_meta/bridge_payment_status_link.js	/^function BridgePaymentStatusLink(options) {$/;"	r
BridgeQuoteLink	lib/host_meta/bridge_quote_link.js	/^function BridgeQuoteLink(options) {$/;"	r
COLD_WALLET	config-example.json	/^  "COLD_WALLET": "r4gzWvzzJS2xLuga9bBc3XmzRMPH3VvxXg",$/;"	f
CURRENCIES	config-example.json	/^  "CURRENCIES": {},$/;"	f
Chance	lib/cli/db_ripple_tx_seed.js	/^var Chance = require('chance');$/;"	r
Chance	test/utils/db_ripple_seed.js	/^var Chance               = require('chance');$/;"	r
Class	processes/deposits.js	/^    Class: gatewayd.data.models.externalTransactions,$/;"	r
Class	processes/outgoing.js	/^    Class: gatewayd.data.models.rippleTransactions,$/;"	r
Class	processes/policy_engine.js	/^  Class: gatewayd.data.models.externalTransactions,$/;"	r
Class	processes/withdrawals.js	/^  Class: gatewayd.data.models.rippleTransactions,$/;"	r
Client	lib/api/get_account_balance.js	/^var Client = require('ripple-rest-client');$/;"	r
Client	lib/api/get_liabilities.js	/^var Client = require('ripple-rest-client');$/;"	r
Client	test/api/get_liabilities.js	/^var Client = require('ripple-rest-client');$/;"	r
Config	lib/data/models/configs.js	/^var Config = database.define('configs', {$/;"	r
ConfigureGatewayd	lib/api/configure_gatewayd.js	/^function ConfigureGatewayd () {$/;"	r
DATABASE_DIALECT	config-example.json	/^  "DATABASE_DIALECT": "postgres",$/;"	f
DATABASE_HOST	config-example.json	/^  "DATABASE_HOST": "localhost",$/;"	f
DATABASE_LOGGING	config-example.json	/^  "DATABASE_LOGGING": false,$/;"	f
DATABASE_NAME	config-example.json	/^  "DATABASE_NAME": "gatewayd_db",$/;"	f
DATABASE_PASSWORD	config-example.json	/^  "DATABASE_PASSWORD": "password",$/;"	f
DATABASE_PORT	config-example.json	/^  "DATABASE_PORT": "5432",$/;"	f
DATABASE_URL	Gruntfile.js	/^          DATABASE_URL: 'postgres:\/\/' + config.get('DATABASE_USER') + ':' + config.get('DATABASE_PASSWORD') + '@' + config.get('DATABASE_HOST') + ':' + config.get('DATABASE_PORT') + '\/' + config.get('DATABASE_NAME')$/;"	r
DATABASE_URL	config-example.json	/^  "DATABASE_URL": null,$/;"	f
DATABASE_URL	lib/app.js	/^process.env.DATABASE_URL = gateway.config.get('DATABASE_URL');$/;"	r
DATABASE_URL	lib/http/controllers/api/get_database_url.js	/^    DATABASE_URL: gateway.config.get('DATABASE_URL')$/;"	r
DATABASE_USER	config-example.json	/^  "DATABASE_USER": "gatewayd_user",$/;"	f
DBConfigFile	config/environment.js	/^var DBConfigFile = require(__dirname+'\/..\/lib\/data\/database.json');$/;"	r
DS	lib/cli/start_gateway.js	/^    var DS = require('domain-supervisor');$/;"	r
DepositProcessor	lib/core/deposit_processor.js	/^function DepositProcessor(deposit) {$/;"	r
DepositProcessor	processes/deposits.js	/^var DepositProcessor = require(__dirname+'\/..\/lib\/core\/deposit_processor.js');$/;"	r
DepositProcessor	test/core/deposit_processor.js	/^var DepositProcessor = require(__dirname+'\/..\/..\/lib\/core\/deposit_processor.js');$/;"	r
Destination	test/fixtures/incoming_payments.js	/^    Destination: 'rMinhWxZz4jeHoJGyddtmwg6dWhyqQKtJz',$/;"	r
ERROR	lib/api/get_hosted_address.js	/^        logger.error('[get_hosted_address.js:getHostedAddress] Failed to create hosted address with tag [%j], ERROR: ', tag, error);$/;"	r
ERROR	lib/api/record_incoming_payment.js	/^            logger.error('[record_incoming_payment.js:recordIncomingPayment] Failed to create ripple_transaction with fields [%j], ERROR: ' + error, options);$/;"	r
ERROR	lib/api/record_incoming_payment.js	/^            logger.error('[record_incoming_payment.js:recordIncomingPayment] Failed to update ripple_transaction [%j] with fields [%j], ERROR: ' + error, rippleTransaction, options);$/;"	r
ERROR	lib/api/record_incoming_payment.js	/^      logger.error('[record_incoming_payment.js:recordIncomingPayment] Failed to query ripple_transactions table, ERROR: ' + error);$/;"	r
EnqueueOutgoingPaymentError	lib/api/enqueue_outgoing_payment.js	/^var EnqueueOutgoingPaymentError = require(__dirname+'\/..\/errors\/enqueue_outgoing_payment_error.js');$/;"	r
EnqueueOutgoingPaymentError	lib/errors/enqueue_outgoing_payment_error.js	/^function EnqueueOutgoingPaymentError(options) {$/;"	r
EnqueueOutgoingPaymentError	test/errors/enqueue_outgoing_payment.js	/^var EnqueueOutgoingPaymentError = gateway.errors.enqueueOutgoingPaymentError;$/;"	r
ErrorType	lib/http/response_handler.js	/^var ErrorType = {$/;"	r
ExternalAccount	lib/data/models/external_accounts.js	/^var ExternalAccount = db.define('external_accounts', {$/;"	r
ExternalAccount	lib/http/controllers/resources/external_accounts.js	/^var ExternalAccount = require(__dirname+'\/..\/..\/..\/..\/lib\/data').models.externalAccounts;$/;"	r
ExternalAccount	lib/http/controllers/resources/external_transactions.js	/^var ExternalAccount = require(__dirname+'\/..\/..\/..\/..\/lib\/data').models.externalAccounts;$/;"	r
ExternalAccounts	test/models/external_accounts.js	/^var ExternalAccounts = gatewayd.models.externalAccounts;$/;"	r
ExternalTransaction	lib/data/models/external_transactions.js	/^var ExternalTransaction = db.define('external_transactions', {$/;"	r
ExternalTransaction	lib/http/controllers/resources/external_transactions.js	/^var ExternalTransaction = require(__dirname+'\/..\/..\/..\/..\/lib\/data').models.externalTransactions;$/;"	r
ExternalTransactions	test/models/external_transactions.js	/^var ExternalTransactions = gatewayd.models.externalTransactions;$/;"	r
Fee	test/fixtures/incoming_payments.js	/^    Fee: '12000',$/;"	r
Flags	test/fixtures/incoming_payments.js	/^    Flags: 0,$/;"	r
GatewayProcessManager	lib/api/list_processes.js	/^var GatewayProcessManager = require(__dirname+'\/..\/processes\/process_manager.js');$/;"	r
GatewayTransaction	lib/api/create_gateway_transaction.js	/^var GatewayTransaction       = require(__dirname+'\/..\/data\/').models.gatewayTransactions;$/;"	r
GatewayTransaction	lib/data/models/gateway_transactions.js	/^var GatewayTransaction = db.define('gateway_transactions', {$/;"	r
GatewayTransaction	lib/http/controllers/resources/gateway_transactions.js	/^var GatewayTransaction = require(__dirname+'\/..\/..\/..\/..\/lib\/data').models.gatewayTransactions;$/;"	r
GatewayTransaction	test/models/gateway_transactions.js	/^var GatewayTransaction = require(__dirname+'\/..\/..\/').data.models.gatewayTransactions;$/;"	r
HOT_WALLET	config-example.json	/^  "HOT_WALLET": {$/;"	f
HostMeta	lib/host_meta/host_meta.js	/^function HostMeta(options) {$/;"	r
IncomingPayment	lib/core/incoming_payment.js	/^function IncomingPayment(paymentNotification) {$/;"	r
IncomingPayment	processes/incoming.js	/^var IncomingPayment         = require(__dirname+'\/..\/lib\/core\/incoming_payment.js');$/;"	r
KEY	config-example.json	/^  "KEY": "mysup3rs3cr3t@ap!k3y",$/;"	f
KEY	lib/http/controllers/api/set_key.js	/^        KEY: gateway.config.get('KEY')$/;"	r
KycData	lib/data/models/kyc_data.js	/^var KycData = db.define('kyc_data', {$/;"	r
LastLedgerSequence	test/fixtures/incoming_payments.js	/^    LastLedgerSequence: 10481724,$/;"	r
Link	lib/host_meta/link.js	/^function Link(options) {$/;"	r
MemoData	test/fixtures/outgoing_payments.js	/^          MemoData: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Lorem ipsum是指一篇常用於排版設計領域的拉丁文文章，主要的目的為測試文章或文字在不同字型、版型下看起來的效果。Lorem ipsum es el texto que se usa habitualmente en diseño gráfico en demostraciones de tipografías o de borradores de diseño para probar el diseño visual antes de insertar el texto final.'$/;"	r
MemoType	test/api/record_incoming_payment.js	/^      chai.assert.deepEqual(rippleTransaction.memos, [{ MemoData: '7274312E302E3132', MemoType: '636C69656E74' }]);$/;"	r
MemoType	test/api/record_incoming_payment.js	/^      memos: [{ MemoData: '7274312E302E3132', MemoType: '636C69656E74' }]$/;"	r
MemoType	test/fixtures/incoming_payments.js	/^    memos: [ { MemoData: '7274312E312E33', MemoType: '636C69656E74' } ]$/;"	r
MemoType	test/fixtures/outgoing_payments.js	/^          MemoType: 'unformatted_memo',$/;"	r
MemoType	test/models/ripple_transactions.js	/^        chai.assert.deepEqual(transaction.memos, [{ MemoData: '7274312E302E3132', MemoType: '636C69656E74' }]);$/;"	r
MemoType	test/models/ripple_transactions.js	/^      memos: [{ MemoData: '7274312E302E3132', MemoType: '636C69656E74' }]$/;"	r
Memos	test/fixtures/incoming_payments.js	/^    Memos: [ { Memo: [Object] } ],$/;"	r
Monitor	processes/incoming.js	/^function Monitor(gatewayd) {$/;"	r
NODE_ENV	test/api/create_external_payment.js	/^process.env.NODE_ENV = 'test_in_memory';$/;"	r
NODE_ENV	test/api/enqueue_outgoing_payment.js	/^process.env.NODE_ENV = 'test_in_memory';$/;"	r
NODE_ENV	test/api/get_or_fetch_last_payment_hash.js	/^process.env.NODE_ENV          = 'test_in_memory';$/;"	r
NODE_ENV	test/api/list_outgoing_payments.js	/^process.env.NODE_ENV = 'test_in_memory';$/;"	r
NODE_ENV	test/api/record_deposit.js	/^process.env.NODE_ENV = 'test_in_memory';$/;"	r
NODE_ENV	test/api/set_last_payment_hash.js	/^process.env.NODE_ENV            = 'test_in_memory';$/;"	r
NODE_ENV	test/core/incoming_payment.js	/^process.env.NODE_ENV          = 'test_in_memory';$/;"	r
NODE_ENV	test/core/outgoing_payment.js	/^process.env.NODE_ENV = 'test_in_memory';$/;"	r
NODE_ENV	test/models/configs.js	/^process.env.NODE_ENV = 'test_in_memory';$/;"	r
NODE_ENV	test/models/external_accounts.js	/^process.env.NODE_ENV = 'test_in_memory';$/;"	r
NODE_ENV	test/models/external_transactions.js	/^process.env.NODE_ENV = 'test_in_memory';$/;"	r
NODE_ENV	test/models/gateway_transactions.js	/^process.env.NODE_ENV = 'test_in_memory';$/;"	r
NODE_ENV	test/models/policies.js	/^process.env.NODE_ENV = 'test_in_memory';$/;"	r
NODE_ENV	test/models/ripple_transactions.js	/^process.env.NODE_ENV            = 'test_in_memory';$/;"	r
NODE_ENV	test/utils/db_ripple_seed.js	/^process.env.NODE_ENV = 'test_in_memory';$/;"	r
OutgoingPayment	lib/core/outgoing_payment.js	/^function OutgoingPayment(outgoingPaymentRecord) {$/;"	r
OutgoingPayment	lib/core/outgoing_payment_processor.js	/^var OutgoingPayment = require(__dirname+'\/outgoing_payment.js');$/;"	r
OutgoingPaymentProcessor	lib/core/outgoing_payment_processor.js	/^function OutgoingPaymentProcessor(payment) {$/;"	r
OutgoingPaymentProcessor	processes/outgoing.js	/^var OutgoingPaymentProcessor = require(__dirname+'\/..\/lib\/core\/outgoing_payment_processor.js');$/;"	r
OutgoingRipplePaymentsController	lib/http/controllers/api/enqueue_outgoing_payment.js	/^function OutgoingRipplePaymentsController() {$/;"	r
PORT	config-example.json	/^  "PORT": 5000,$/;"	f
PaginationUtil	lib/http/controllers/resources/external_transactions.js	/^var PaginationUtil = require(__dirname + '\/..\/..\/..\/..\/lib\/data\/pagination_util.js');$/;"	r
PaginationUtil	lib/http/controllers/resources/ripple_transactions.js	/^var PaginationUtil = require(__dirname + '\/..\/..\/..\/..\/lib\/data\/pagination_util.js');$/;"	r
Paths	test/fixtures/incoming_payments.js	/^    Paths: [ [ [Object] ] ],$/;"	r
Policy	lib/data/models/policies.js	/^var Policy = database.define('policies', {$/;"	r
Policy	test/models/policies.js	/^var Policy = gatewayd.models.policies;$/;"	r
PolicyEngine	lib/core/policy_engine.js	/^function PolicyEngine() { $/;"	r
PolicyEngine	processes/policy_engine.js	/^var PolicyEngine = require(__dirname+'\/..\/lib\/core\/policy_engine.js');$/;"	r
PrettyPrintTable	lib/cli/add_external_account.js	/^var PrettyPrintTable = require(__dirname+'\/..\/views\/text\/');$/;"	r
PrettyPrintTable	lib/cli/clear_withdrawal.js	/^var PrettyPrintTable = require(__dirname+'\/..\/views\/text\/');$/;"	r
PrettyPrintTable	lib/cli/fund_hot_wallet.js	/^var PrettyPrintTable = require(__dirname+'\/..\/views\/text\/');$/;"	r
PrettyPrintTable	lib/cli/get_trust_lines.js	/^var PrettyPrintTable = require(__dirname+'\/..\/views\/text\/');$/;"	r
PrettyPrintTable	lib/cli/list_cleared.js	/^var PrettyPrintTable = require(__dirname+'\/..\/views\/text\/');$/;"	r
PrettyPrintTable	lib/cli/list_failed_payments.js	/^var PrettyPrintTable = require(__dirname+'\/..\/views\/text\/');$/;"	r
PrettyPrintTable	lib/cli/list_incoming_payments.js	/^var PrettyPrintTable = require(__dirname+'\/..\/views\/text\/');$/;"	r
PrettyPrintTable	lib/cli/list_outgoing_payments.js	/^var PrettyPrintTable = require(__dirname+'\/..\/views\/text\/');$/;"	r
PrettyPrintTable	lib/cli/list_queued_deposits.js	/^var PrettyPrintTable = require(__dirname+'\/..\/views\/text\/');$/;"	r
PrettyPrintTable	lib/cli/list_queued_withdrawals.js	/^var PrettyPrintTable = require(__dirname+'\/..\/views\/text\/');$/;"	r
PrettyPrintTable	lib/cli/list_user_external_accounts.js	/^var PrettyPrintTable = require(__dirname+'\/..\/views\/text\/');$/;"	r
PrettyPrintTable	lib/cli/list_users.js	/^var PrettyPrintTable = require(__dirname+'\/..\/views\/text\/');$/;"	r
PrettyPrintTable	lib/cli/record_deposit.js	/^var PrettyPrintTable = require(__dirname+'\/..\/views\/text\/');$/;"	r
PrettyPrintTable	lib/cli/refund_cold_wallet.js	/^var PrettyPrintTable = require(__dirname+'\/..\/views\/text\/');$/;"	r
PrettyPrintTable	lib/cli/register_user.js	/^var PrettyPrintTable = require(__dirname+'\/..\/views\/text\/');$/;"	r
PrettyPrintTable	lib/cli/retry_failed_payment.js	/^var PrettyPrintTable = require(__dirname+'\/..\/views\/text\/');$/;"	r
PrettyPrintTable	lib/cli/set_trust.js	/^var PrettyPrintTable = require(__dirname+'\/..\/views\/text');$/;"	r
ProcessManager	lib/api/restart_gateway.js	/^var ProcessManager = require(__dirname+'\/..\/processes\/process_manager.js');$/;"	r
ProcessManager	lib/processes/process_manager.js	/^function ProcessManager() {$/;"	r
ProcessSet	lib/processes/process_set.js	/^function ProcessSet() {$/;"	r
Promise	lib/api/create_external_payment.js	/^var Promise               = require('bluebird');$/;"	r
Promise	lib/api/create_gateway_transaction.js	/^var Promise                  = require('bluebird');$/;"	r
Promise	lib/api/create_ripple_payment.js	/^var Promise = require('bluebird');$/;"	r
Promise	lib/api/enqueue_outgoing_payment.js	/^var Promise = require('bluebird');$/;"	r
Promise	lib/api/get_hosted_address.js	/^var Promise = require('bluebird');$/;"	r
Promise	lib/api/get_or_fetch_last_payment_hash.js	/^var Promise       = require('bluebird');$/;"	r
Promise	lib/api/set_last_payment_hash.js	/^var Promise       = require('bluebird');$/;"	r
Promise	lib/processes/supervisor.js	/^var Promise    = require('bluebird');$/;"	r
Promise	processes/incoming.js	/^var Promise                 = require('bluebird');$/;"	r
Promise	test/api/record_incoming_payment.js	/^var Promise = require('bluebird');$/;"	r
Promise	test/api/ripple_quotes.js	/^var Promise            = require('bluebird');$/;"	r
Promise	test/processes/pm2.js	/^var Promise    = require('bluebird')$/;"	r
RIPPLE_REST_API	config-example.json	/^  "RIPPLE_REST_API": "http:\/\/localhost:5990\/",$/;"	f
Raygun	lib/data/logs.js	/^  Raygun = require('winston-raygun');$/;"	r
RippleAccountMonitor	processes/incoming.js	/^var RippleAccountMonitor    = require('ripple-account-monitor');$/;"	r
RippleAddress	lib/data/models/ripple_addresses.js	/^var RippleAddress = db.define('ripple_addresses', {$/;"	r
RippleAddress	lib/http/controllers/resources/ripple_addresses.js	/^var RippleAddress = require(__dirname+'\/..\/..\/..\/..\/lib\/data').models.rippleAddresses;$/;"	r
RippleAddress	lib/http/controllers/resources/ripple_transactions.js	/^var RippleAddress = data.models.rippleAddresses;$/;"	r
RippleAddress	test/api/get_hosted_address.js	/^var RippleAddress = gatewayd.models.rippleAddresses;$/;"	r
RippleAddress	test/api/record_incoming_payment.js	/^var RippleAddress = gatewayd.models.rippleAddresses;$/;"	r
RippleAddress	test/models/ripple_associations.js	/^var RippleAddress = gatewayd.models.rippleAddresses;$/;"	r
RippleAddresses	lib/api/get_hosted_address.js	/^var RippleAddresses = require(__dirname+'\/..\/data\/').models.rippleAddresses;$/;"	r
RippleAddresses	lib/core/outgoing_payment.js	/^var RippleAddresses = gatewayd.data.models.rippleAddresses;$/;"	r
RippleQuoteService	test/api/ripple_quotes.js	/^var RippleQuoteService = require('bridge-quote-service-client').RippleQuoteService;$/;"	r
RippleRestClient	lib/api/fund_cold_wallet.js	/^var RippleRestClient  = require('ripple-rest-client');$/;"	r
RippleRestClient	lib/api/fund_hot_wallet.js	/^var RippleRestClient  = require('ripple-rest-client');$/;"	r
RippleRestClient	lib/api/get_trust_lines.js	/^var RippleRestClient = require('ripple-rest-client');$/;"	r
RippleRestClient	lib/api/issue_currency.js	/^var RippleRestClient  = require('ripple-rest-client');$/;"	r
RippleRestClient	lib/api/refund_cold_wallet.js	/^var RippleRestClient  = require('ripple-rest-client');$/;"	r
RippleRestClient	lib/api/register_user.js	/^var RippleRestClient = require('ripple-rest-client');$/;"	r
RippleRestClient	lib/api/set_trust_line.js	/^var RippleRestClient = require('ripple-rest-client');$/;"	r
RippleRestClient	lib/cli/fund_hot_wallet.js	/^var RippleRestClient = require('ripple-rest-client');$/;"	r
RippleRestClient	lib/core/incoming_payment.js	/^var  RippleRestClient   = require('ripple-rest-client');$/;"	r
RippleRestClient	test/api/fund_hot_wallet.js	/^var RippleRestClient = require('ripple-rest-client');$/;"	r
RippleRestClient	test/api/get_trust_lines.js	/^var RippleRestClient = require('ripple-rest-client');$/;"	r
RippleRestClient	test/api/refund_cold_wallet.js	/^var RippleRestClient = require('ripple-rest-client');$/;"	r
RippleRestClient	test/api/set_trust_line.js	/^var RippleRestClient  = require('ripple-rest-client');$/;"	r
RippleRestErrorHandler	lib/ripple_rest_error_handler.js	/^function RippleRestErrorHandler () {$/;"	r
RippleTransaction	lib/http/controllers/resources/ripple_transactions.js	/^var RippleTransaction = data.models.rippleTransactions;$/;"	r
RippleTransaction	test/api/record_incoming_payment.js	/^var RippleTransaction = gatewayd.models.rippleTransactions;$/;"	r
RippleTransaction	test/models/ripple_associations.js	/^var RippleTransaction = gatewayd.models.rippleTransactions;$/;"	r
RippleTransactions	lib/cli/db_ripple_tx_seed.js	/^var RippleTransactions = require(__dirname+'\/..\/..\/').data.models.rippleTransactions;$/;"	r
RippleTransactions	lib/data/models/ripple_transactions.js	/^var RippleTransactions = db.define('ripple_transactions', {$/;"	r
RippleTransactions	test/core/incoming_payment.js	/^        RippleTransactions$/;"	r
RippleTransactions	test/core/incoming_payment.js	/^var RippleTransactions        = gatewayd.models.rippleTransactions;$/;"	r
RippleTransactions	test/core/outgoing_payment.js	/^      RippleTransactions$/;"	r
RippleTransactions	test/core/outgoing_payment.js	/^    RippleTransactions$/;"	r
RippleTransactions	test/core/outgoing_payment.js	/^var RippleTransactions = gatewayd.models.rippleTransactions;$/;"	r
RippleTransactions	test/models/ripple_transactions.js	/^var RippleTransactions          = gatewayd.models.rippleTransactions;$/;"	r
SECRET	test/http/fund_hot_wallet.js	/^var SECRET = process.env.RIPPLE_ACCOUNT_SECRET;$/;"	r
SSL	config-example.json	/^  "SSL": true,$/;"	f
Sequelize	lib/data/index.js	/^var Sequelize = require('sequelize');$/;"	r
Sequelize	lib/data/models/bridges.js	/^var Sequelize = require('sequelize');$/;"	r
Sequelize	lib/data/models/configs.js	/^var Sequelize = require('sequelize');$/;"	r
Sequelize	lib/data/models/external_accounts.js	/^var Sequelize = require('sequelize');$/;"	r
Sequelize	lib/data/models/external_transactions.js	/^var Sequelize = require('sequelize');$/;"	r
Sequelize	lib/data/models/gateway_transactions.js	/^var Sequelize = require('sequelize');$/;"	r
Sequelize	lib/data/models/kyc_data.js	/^var Sequelize = require('sequelize');$/;"	r
Sequelize	lib/data/models/policies.js	/^var Sequelize = require('sequelize');$/;"	r
Sequelize	lib/data/models/users.js	/^var Sequelize = require('sequelize');$/;"	r
Sequelize	lib/data/sequelize.js	/^var Sequelize = require('sequelize');$/;"	r
Sequence	test/fixtures/incoming_payments.js	/^    Sequence: 1110,$/;"	r
SigningPubKey	test/fixtures/incoming_payments.js	/^    SigningPubKey: '020721DDADB796BC176335ED9203CE1CFC7C3D162E9C2A379F6953E2909569DE14',$/;"	r
SqlMqWorker	processes/deposits.js	/^var SqlMqWorker = require('sql-mq-worker');$/;"	r
SqlMqWorker	processes/outgoing.js	/^var SqlMqWorker = require('sql-mq-worker');$/;"	r
SqlMqWorker	processes/policy_engine.js	/^var SqlMqWorker = require('sql-mq-worker');$/;"	r
SqlMqWorker	processes/withdrawals.js	/^var SqlMqWorker = require('sql-mq-worker');$/;"	r
StatusCode	lib/http/response_handler.js	/^var StatusCode = {$/;"	r
Supervisor	lib/api/start_gateway.js	/^var Supervisor = require(path.join(__dirname,'\/..\/processes\/supervisor'));$/;"	r
Supervisor	lib/api/stop_gateway.js	/^var Supervisor = require(path.join(__dirname,'\/..\/processes\/supervisor'));$/;"	r
Supervisor	lib/processes/supervisor.js	/^function Supervisor() {}$/;"	r
Supervisor	test/processes/pm2.js	/^var Supervisor = require(path.join(__dirname, '\/..\/..\/lib\/processes\/supervisor'))$/;"	r
Table	lib/views/text/index.js	/^var Table = require('cli-table');$/;"	r
TransactionIndex	test/fixtures/incoming_payments.js	/^      TransactionIndex: 7,$/;"	r
TransactionResult	test/fixtures/incoming_payments.js	/^      TransactionResult: 'tesSUCCESS' },$/;"	r
TransactionType	test/fixtures/incoming_payments.js	/^    TransactionType: 'Payment',$/;"	r
TxnSignature	test/fixtures/incoming_payments.js	/^    TxnSignature: '304502210097663BFC023DEB18A2537908A785D390A741BB353EEB77DBF56DC90F9289C52B022078F023E8E2D0A69C88BE028BFAFCF373F17E2A64F3504DED4CFB7F66C7B4B807',$/;"	r
UInt160	lib/validator.js	/^var UInt160 = require('ripple-lib').UInt160;$/;"	r
UInt256	lib/validator.js	/^var UInt256 = require('ripple-lib').UInt256;$/;"	r
USER_AUTH	config-example.json	/^  "USER_AUTH": true,$/;"	f
User	lib/data/models/users.js	/^var User = db.define('user', {$/;"	r
User	lib/http/controllers/resources/users.js	/^var User = require(__dirname+'\/..\/..\/..\/..\/lib\/data').models.users;$/;"	r
UsersController	lib/http/controllers/resources/users.js	/^var UsersController = {};$/;"	r
WEBAPP	config-example.json	/^  "WEBAPP": true,$/;"	f
WEBAPP_PATH	config-example.json	/^  "WEBAPP_PATH": ".\/node_modules\/gatewayd-admin\/",$/;"	f
WalletGenerator	lib/api/generate_wallet.js	/^var WalletGenerator = require('ripple-wallet').Generator;$/;"	r
WebfingerLink	lib/host_meta/webfinger_link.js	/^function WebfingerLink(options) {$/;"	r
WithdrawalProcessor	lib/core/withdrawal_processor.js	/^function WithdrawalProcessor(incomingPayment) {$/;"	r
WithdrawalProcessor	processes/withdrawals.js	/^var WithdrawalProcessor = require(__dirname+'\/..\/lib\/core\/withdrawal_processor.js');$/;"	r
WithdrawalProcessor	test/core/withdrawal_processor.js	/^var WithdrawalProcessor = require(__dirname+'\/..\/..\/lib\/core\/withdrawal_processor.js');$/;"	r
_	lib/api/get_liabilities.js	/^var _ = require('lodash');$/;"	r
_	lib/core/utils.js	/^var _      = require('lodash');$/;"	r
_	lib/data/pagination_util.js	/^var _ = require('lodash');$/;"	r
_	lib/http/response_handler.js	/^var _ = require('lodash');$/;"	r
_	lib/views/text/index.js	/^var _ = require('underscore-node');$/;"	r
_buildPayment	lib/core/outgoing_payment.js	/^  _buildPayment: function(address) {$/;"	r
_clearWithdrawalIfNotCleared	lib/api/clear_withdrawal.js	/^  function _clearWithdrawalIfNotCleared(withdrawal, callback){$/;"	r
_confirmPayment	lib/core/outgoing_payment.js	/^  _confirmPayment: function(pendingPayment) {$/;"	r
_createDeposit	lib/core/deposit_processor.js	/^  _createDeposit: function(callback) {$/;"	r
_createIncomingRippleTransaction	lib/api/record_incoming_payment.js	/^function _createIncomingRippleTransaction(incomingPayment) {$/;"	r
_createWithdrawal	lib/core/withdrawal_processor.js	/^  _createWithdrawal: function(address, callback){$/;"	r
_filterWhiteListed	lib/api/configure_gatewayd.js	/^  _filterWhiteListed: function(options) {$/;"	r
_finalizeExternalTransaction	lib/core/deposit_processor.js	/^  _finalizeExternalTransaction: function(payment, callback) {$/;"	r
_finalizeRippleTransaction	lib/core/withdrawal_processor.js	/^  _finalizeRippleTransaction: function(callback){$/;"	r
_findFailedPayment	lib/api/retry_failed_payment.js	/^    _findFailedPayment,$/;"	r
_findFailedPayment	lib/api/retry_failed_payment.js	/^  function _findFailedPayment(callback) {$/;"	r
_findOrCreateDestinationAddress	lib/api/create_ripple_payment.js	/^function _findOrCreateDestinationAddress(options) {$/;"	r
_findOrCreateDestinationAddress	lib/api/enqueue_outgoing_payment.js	/^function _findOrCreateDestinationAddress(options) {$/;"	r
_findOrCreateExternalAccount	lib/api/create_external_payment.js	/^function _findOrCreateExternalAccount(options) {$/;"	r
_findOrCreateSenderAddress	lib/api/create_ripple_payment.js	/^function _findOrCreateSenderAddress(options) {$/;"	r
_findOrCreateSenderAddress	lib/api/enqueue_outgoing_payment.js	/^function _findOrCreateSenderAddress() {$/;"	r
_getPayment	lib/core/incoming_payment.js	/^  _getPayment: function() {$/;"	r
_getRippleAddressRecord	lib/core/outgoing_payment.js	/^  _getRippleAddressRecord: function() {$/;"	r
_getTransactionRippleAddress	lib/core/withdrawal_processor.js	/^  _getTransactionRippleAddress: function(callback) {$/;"	r
_lookupWithdrawal	lib/api/clear_withdrawal.js	/^  function _lookupWithdrawal(id, callback) {$/;"	r
_prepareIncomingPayment	lib/core/incoming_payment.js	/^  _prepareIncomingPayment: function(payment) {$/;"	r
_recordAcceptanceOrRejectionStatus	lib/core/outgoing_payment.js	/^  _recordAcceptanceOrRejectionStatus: function(payment) {$/;"	r
_recordTransaction	lib/api/create_external_payment.js	/^function _recordTransaction(options, externalAccount) {$/;"	r
_recordTransaction	lib/api/create_ripple_payment.js	/^function _recordTransaction(options, toAddress, fromAddress) {$/;"	r
_recordTransaction	lib/api/enqueue_outgoing_payment.js	/^function _recordTransaction(options, toAddress, fromAddress) {$/;"	r
_rippleRestResponseHandler	lib/core/outgoing_payment.js	/^  _rippleRestResponseHandler: function(error) {$/;"	r
_saveToConfigFile	lib/api/configure_gatewayd.js	/^  _saveToConfigFile: function(filtered) {$/;"	r
_sendPayment	lib/core/outgoing_payment.js	/^  _sendPayment: function(payment){$/;"	r
_setPaymentStateToOutgoing	lib/api/retry_failed_payment.js	/^    _setPaymentStateToOutgoing$/;"	r
_setPaymentStateToOutgoing	lib/api/retry_failed_payment.js	/^  function _setPaymentStateToOutgoing(rippleTransaction, callback) {$/;"	r
_this	lib/api/configure_gatewayd.js	/^    var _this  = this;$/;"	r
_this	lib/api/configure_gatewayd.js	/^    var _this = this;$/;"	r
_this	lib/core/incoming_payment.js	/^    var _this = this;$/;"	r
_this	lib/core/outgoing_payment.js	/^    var _this = this;$/;"	r
_this	lib/core/policy_engine.js	/^  var _this = this;$/;"	r
_this	lib/data/models/ripple_addresses.js	/^      var _this = this;$/;"	r
_this	lib/host_meta/bridge_payment_link.js	/^  var _this = this;$/;"	r
_this	lib/host_meta/host_meta.js	/^  var _this = this;$/;"	r
_updateInvoicedRippleTransaction	lib/api/record_incoming_payment.js	/^function _updateInvoicedRippleTransaction(rippleTransaction, incomingPayment) {$/;"	r
_updateLastPaymentHash	lib/core/incoming_payment.js	/^  _updateLastPaymentHash: function(payment) {$/;"	r
_validate	lib/api/configure_gatewayd.js	/^  _validate: function(options) {$/;"	r
_validateDestination	lib/api/create_ripple_payment.js	/^function _validateDestination(options) {$/;"	r
_validatePayment	lib/core/incoming_payment.js	/^  _validatePayment: function(payment) {$/;"	r
_validateRequest	lib/api/create_external_payment.js	/^function _validateRequest(options) {$/;"	r
_validateRequest	lib/api/create_ripple_payment.js	/^function _validateRequest(options) {$/;"	r
_validateRequest	lib/api/enqueue_outgoing_payment.js	/^function _validateRequest(options) {$/;"	r
account	lib/api/fund_cold_wallet.js	/^  account: 'rHb9CJAWyB4rj91VRWn96DkukG4bwdtyTh'$/;"	r
account	lib/api/fund_hot_wallet.js	/^  account: config.get('COLD_WALLET')$/;"	r
account	lib/api/get_account_balance.js	/^    account: account || config.get('HOT_WALLET').address$/;"	r
account	lib/api/get_liabilities.js	/^    account: config.get('COLD_WALLET')$/;"	r
account	lib/api/get_trust_lines.js	/^    account: coldWallet$/;"	r
account	lib/api/issue_currency.js	/^  account: config.get('COLD_WALLET')$/;"	r
account	lib/api/refund_cold_wallet.js	/^  account: config.get('COLD_WALLET')$/;"	r
account	lib/api/register_user.js	/^                account: userOpts.address,$/;"	r
account	lib/api/register_user.js	/^                account:userOpts.address$/;"	r
account	lib/api/register_user.js	/^              account: 'rHb9CJAWyB4rj91VRWn96DkukG4bwdtyTh'$/;"	r
account	lib/api/set_trust_line.js	/^    account: hotWallet.address$/;"	r
account	lib/api/set_trust_line.js	/^    account: hotWallet.address,$/;"	r
account	lib/cli/fund_hot_wallet.js	/^  account: gateway.config.get('HOT_WALLET').address$/;"	r
account	lib/core/incoming_payment.js	/^  account : gatewayd.config.get('COLD_WALLET')$/;"	r
account	lib/core/outgoing_payment.js	/^      account: hotWallet.address,$/;"	r
account	lib/core/outgoing_payment.js	/^    account: hotWallet.address,$/;"	r
account	lib/data/models/ripple_addresses.js	/^        account: _this.get('address')$/;"	r
account	lib/views/text/index.js	/^    var account = accounts[i];$/;"	r
account	processes/incoming.js	/^    account: coldWallet,$/;"	r
account	test/http/list_trustlines.js	/^var account = gateway.config.get('HOT_WALLET').address;$/;"	r
account_allows_rippling	lib/api/register_user.js	/^                account_allows_rippling: true$/;"	r
account_allows_rippling	lib/api/set_trust_line.js	/^    account_allows_rippling: true$/;"	r
accumulator	lib/api/get_liabilities.js	/^          accumulator = val;$/;"	r
activateUser	lib/api/activate_user.js	/^function activateUser(userId, fn){$/;"	r
activateUser	lib/cli/activate_user.js	/^function activateUser(userId) {$/;"	r
active	lib/data/models/users.js	/^  active: {$/;"	r
add	lib/processes/process_set.js	/^  add: function(name) {$/;"	r
addCurrency	lib/api/add_currency.js	/^function addCurrency(currency, amount, fn){$/;"	r
addCurrency	lib/cli/add_currency.js	/^function addCurrency(currency, amount){$/;"	r
addExternalAccount	lib/cli/add_external_account.js	/^function addExternalAccount(name, userId) {$/;"	r
address	.settings/launch.json	/^			"address": "localhost",$/;"	f
address	config-example.json	/^    "address": "r9r462ihKgMvW1RK29kXUVPBQYM5Mpkxtw",$/;"	f
address	lib/api/create_external_payment.js	/^    address: options.address,$/;"	r
address	lib/api/create_ripple_payment.js	/^      address: config.get('COLD_WALLET'),$/;"	r
address	lib/api/create_ripple_payment.js	/^      address: config.get('HOT_WALLET').address,$/;"	r
address	lib/api/create_ripple_payment.js	/^      address: options.destination_address,$/;"	r
address	lib/api/create_ripple_payment.js	/^      address: options.source_address,$/;"	r
address	lib/api/enqueue_outgoing_payment.js	/^    address: config.get('HOT_WALLET').address,$/;"	r
address	lib/api/enqueue_outgoing_payment.js	/^    address: options.address,$/;"	r
address	lib/api/get_cold_wallet.js	/^    address: config.get('COLD_WALLET'),$/;"	r
address	lib/api/get_hosted_address.js	/^      address: config.get('COLD_WALLET'),$/;"	r
address	lib/api/get_hot_wallet.js	/^    address: config.get('HOT_WALLET').address,$/;"	r
address	lib/api/record_incoming_payment.js	/^      address: incomingPayment.source_account,$/;"	r
address	lib/api/register_user.js	/^            address: config.get('COLD_WALLET'),$/;"	r
address	lib/api/register_user.js	/^        address: opts.ripple_address,$/;"	r
address	lib/api/register_user.js	/^    address: opts.ripple_address,$/;"	r
address	lib/api/ripple_quotes.js	/^      address: config.get('COLD_WALLET'),$/;"	r
address	lib/api/ripple_quotes.js	/^      address: config.get('HOT_WALLET').address,$/;"	r
address	lib/api/set_hot_wallet.js	/^        address: rippleAddress$/;"	r
address	lib/api/set_hot_wallet.js	/^      address: address.address,$/;"	r
address	lib/cli/enqueue_outgoing_payment.js	/^    address: address,$/;"	r
address	lib/data/migrations/20131219233339-ripple-addresses.js	/^    address: { type: 'string', notNull: true },$/;"	r
address	lib/data/models/external_accounts.js	/^  address: { $/;"	r
address	lib/data/models/ripple_addresses.js	/^  address: { $/;"	r
address	lib/http/controllers/api/ripple_quotes_incoming.js	/^      address: request.param('source_address'),$/;"	r
address	lib/http/controllers/api/ripple_quotes_outgoing.js	/^      address: request.param('destination_address'),$/;"	r
address	lib/http/controllers/api/set_hot_wallet.js	/^      address = wallet.address;$/;"	r
address	lib/http/controllers/api/set_hot_wallet.js	/^  var address = req.body.address;$/;"	r
address	lib/views/text/index.js	/^    var address = addresses[i];$/;"	r
address	test/api/create_external_payment.js	/^        address              : 'gateway',$/;"	r
address	test/api/list_outgoing_payments.js	/^        address: 'rscJF4TWS2jBe43MvUomTtCcyrbtTRMSNr',$/;"	r
address	test/api/list_outgoing_payments.js	/^      address: 'r4EwBWxrx5HxYRyisfGzMto3AT8FZiYdWk',$/;"	r
address	test/api/record_deposit.js	/^      address: 'r4EwBWxrx5HxYRyisfGzMto3AT8FZiYdWk',$/;"	r
address	test/api/record_incoming_payment.js	/^    var address = walletsFixture.COLD_WALLET;$/;"	r
address	test/api/ripple_quotes.js	/^            address: gatewayd.config.get('COLD_WALLET'),$/;"	r
address	test/api/ripple_quotes.js	/^            address: gatewayd.config.get('HOT_WALLET'),$/;"	r
address	test/api/ripple_quotes.js	/^            address: walletsFixture.COLD_WALLET_2,$/;"	r
address	test/api/ripple_quotes.js	/^            address: walletsFixture.HOT_WALLET_2,$/;"	r
address	test/fixtures/models.js	/^    address: '3J98t1WpEZ73CNmQviecrnyiWrnqRhWNLy',$/;"	r
address	test/fixtures/outgoing_payments.js	/^      address: 'r123',$/;"	r
address	test/fixtures/outgoing_payments.js	/^      address: 'r421'$/;"	r
address	test/fixtures/outgoing_payments.js	/^      address: 'r4EwBWxrx5HxYRyisfGzMto3AT8FZiYdWk'$/;"	r
address	test/fixtures/outgoing_payments.js	/^      address: 'r4EwBWxrx5HxYRyisfGzMto3AT8FZiYdWk',$/;"	r
address	test/fixtures/ripple_quotes.js	/^        address: walletsFixture.COLD_WALLET_2,$/;"	r
address	test/fixtures/ripple_quotes.js	/^        address: walletsFixture.HOT_WALLET_2,$/;"	r
address	test/http/enqueue_outgoing_payment.js	/^        address: '1235343',$/;"	r
address	test/http/enqueue_outgoing_payment.js	/^        address: 'r4EwBWxrx5HxYRyisfGzMto3AT8FZiYdWk',$/;"	r
address	test/models/ripple_addresses.js	/^      address: 'r4EwBWxrx5HxYRy11111isfGzMto3AT8FZiYdWk'$/;"	r
address	test/models/ripple_addresses.js	/^      address: 'r4EwBWxrx5HxYRyisfGzMto3AT8FZiYdWk'$/;"	r
address	test/models/ripple_associations.js	/^          address: 'ra9EVPRsiqncEfrRpJudDV34AqxFao8Zv9'$/;"	r
address	test/models/ripple_associations.js	/^        address: 'r4EwBWxrx5HxYRyisfGzMto3AT8FZiYdWk'$/;"	r
addressOptions	lib/api/create_external_payment.js	/^  var addressOptions = {$/;"	r
addressOptions	lib/api/create_ripple_payment.js	/^    addressOptions = {$/;"	r
addressOptions	lib/api/create_ripple_payment.js	/^  var addressOptions;$/;"	r
addressOpts	lib/api/register_user.js	/^          var addressOpts = {$/;"	r
addressOpts	lib/api/register_user.js	/^      var addressOpts = {$/;"	r
admin	lib/data/migrations/20131216193924-users.js	/^    admin: { type: 'boolean', default: false },$/;"	r
admin	lib/data/models/users.js	/^  admin: Sequelize.BOOLEAN,$/;"	r
admin	lib/http/controllers/public/login_user.js	/^        admin: true$/;"	r
adminBasic	lib/http/passport_auth.js	/^module.exports.adminBasic = (function(name){$/;"	r
adminController	lib/http/routers/admin_router.js	/^var adminController = require(__dirname+'\/..\/controllers\/admin\/');$/;"	r
adminEmail	lib/http/controllers/public/login_user.js	/^  var adminEmail = 'admin@' + gateway.config.get('DOMAIN');$/;"	r
adminRouter	lib/app.js	/^var adminRouter = require(__dirname+'\/http\/routers\/admin_router.js');$/;"	r
aggregated	lib/api/get_liabilities.js	/^      aggregated = _.map(aggregated, function(val, key){$/;"	r
aggregated	lib/api/get_liabilities.js	/^      aggregated = _.reduce(resp.balances, function(accumulator, val) {$/;"	r
aggregated	lib/api/get_liabilities.js	/^    var aggregated;$/;"	r
allowNull	lib/data/models/external_transactions.js	/^    allowNull: true,$/;"	r
allowNull	lib/data/models/ripple_addresses.js	/^    allowNull: false,$/;"	r
allowNull	lib/data/models/ripple_addresses.js	/^    allowNull: true,$/;"	r
allowNull	lib/data/models/ripple_transactions.js	/^    allowNull: false,$/;"	r
allowNull	lib/data/models/ripple_transactions.js	/^    allowNull: true$/;"	r
allowNull	lib/data/models/ripple_transactions.js	/^    allowNull: true,$/;"	r
amount	lib/api/add_currency.js	/^  var amount = amount || 0;$/;"	r
amount	lib/api/add_currency.js	/^function addCurrency(currency, amount, fn){$/;"	r
amount	lib/api/create_external_payment.js	/^    amount: options.source_amount,$/;"	r
amount	lib/api/record_deposit.js	/^        amount: options.amount,$/;"	r
amount	lib/api/register_user.js	/^    amount: opts.amount $/;"	r
amount	lib/api/ripple_quotes.js	/^      amount: options.destination.amount,$/;"	r
amount	lib/api/set_trust_line.js	/^function setTrustLine(currency, amount, callback) {$/;"	r
amount	lib/cli/add_currency.js	/^  gateway.api.addCurrency(currency, amount, function(err, currencies){$/;"	r
amount	lib/cli/enqueue_outgoing_payment.js	/^    amount: amount,$/;"	r
amount	lib/cli/enqueue_outgoing_payment.js	/^function enqueueOutgoingPayment(address, amount, currency, issuer){$/;"	r
amount	lib/cli/fund_hot_wallet.js	/^    amount: amount,$/;"	r
amount	lib/cli/record_deposit.js	/^    amount: amount,$/;"	r
amount	lib/cli/refund_cold_wallet.js	/^    amount: amount,$/;"	r
amount	lib/cli/register_user.js	/^    amount: amount$/;"	r
amount	lib/cli/set_trust.js	/^  gateway.api.setTrustLine({currency: currency, amount: amount}, function () {$/;"	r
amount	lib/core/outgoing_payment.js	/^      amount: _this.record.to_amount,$/;"	r
amount	lib/core/withdrawal_processor.js	/^              amount: rippleTransaction.to_amount,$/;"	r
amount	lib/data/migrations/20131216232955-external-transactions.js	/^    amount: { type: 'decimal', notNull: true },$/;"	r
amount	lib/data/models/external_transactions.js	/^    amount: function () {$/;"	r
amount	lib/data/models/external_transactions.js	/^  amount: {$/;"	r
amount	lib/http/controllers/api/fund_hot_wallet.js	/^    amount: req.body.amount,$/;"	r
amount	lib/http/controllers/api/record_deposit.js	/^    amount: req.body.amount,$/;"	r
amount	lib/http/controllers/api/refund_cold_wallet.js	/^  gateway.api.refundColdWallet(currency, amount,function(err, resp){$/;"	r
amount	lib/http/controllers/api/refund_cold_wallet.js	/^  var amount = req.body.amount;$/;"	r
amount	lib/http/controllers/api/register_user.js	/^    amount: req.body.amount$/;"	r
amount	lib/http/controllers/api/ripple_quotes_incoming.js	/^      amount: request.param('destination_amount'),$/;"	r
amount	lib/http/controllers/api/ripple_quotes_outgoing.js	/^      amount: request.param('destination_amount'),$/;"	r
amount	lib/http/controllers/api/set_trust_line.js	/^  gateway.api.setTrustLine({currency: currency, amount: amount}, function(err, resp){$/;"	r
amount	lib/http/controllers/api/set_trust_line.js	/^  var amount = req.body.amount;$/;"	r
amount	lib/views/text/index.js	/^      transaction.amount,$/;"	r
amount	test/api/fund_hot_wallet.js	/^      amount: 1,$/;"	r
amount	test/api/record_deposit.js	/^        amount: 5.00$/;"	r
amount	test/api/record_deposit.js	/^      amount: 5.00$/;"	r
amount	test/api/refund_cold_wallet.js	/^      .yields(null, {result: 'tesSUCCESS', destination_account: walletsFixture.COLD_WALLET, source_account: walletsFixture.HOT_WALLET.address, destination_amount: {currency: 'SWD', amount: 1}});$/;"	r
amount	test/api/refund_cold_wallet.js	/^      amount: 1,$/;"	r
amount	test/api/ripple_quotes.js	/^            amount: 1.00,$/;"	r
amount	test/api/set_trust_line.js	/^    gatewayd.api.setTrustLine({currency: currency, amount: amount}, function(error, response) {$/;"	r
amount	test/api/set_trust_line.js	/^    gatewayd.api.setTrustLine({currency: currency, amount: amount}, function(error, response){$/;"	r
amount	test/api/set_trust_line.js	/^    var amount    = 100;$/;"	r
amount	test/core/deposit_processor.js	/^        amount: 5,$/;"	r
amount	test/fixtures/outgoing_payments.js	/^      amount: '0.01',$/;"	r
amount	test/fixtures/outgoing_payments.js	/^      amount: '0.01a',$/;"	r
amount	test/fixtures/ripple_quotes.js	/^        amount: 1.00,$/;"	r
amount	test/fixtures/transactions.js	/^    amount: 5,$/;"	r
amount	test/http/clear_withdrawals.js	/^      amount: 10,$/;"	r
amount	test/http/enqueue_outgoing_payment.js	/^        amount: 'wrench'$/;"	r
amount	test/http/enqueue_outgoing_payment.js	/^        amount: 1.5$/;"	r
amount	test/http/enqueue_outgoing_payment.js	/^        amount: 1.5,$/;"	r
amount	test/http/enqueue_outgoing_payment.js	/^        amount: 1.55$/;"	r
amount	test/http/fund_hot_wallet.js	/^        amount: 1,$/;"	r
amount	test/http/refund_cold_wallet.js	/^      .send({ currency: 'SWG', amount: 1 })$/;"	r
amount	test/http/set_trust_line.js	/^      .send({ currency: 'XRP', amount: 1000 })$/;"	r
api	index.js	/^exports.api = require(__dirname+'\/lib\/api.js');$/;"	r
api	lib/api/fund_cold_wallet.js	/^  api: config.get('RIPPLE_REST_API'),$/;"	r
api	lib/api/fund_hot_wallet.js	/^  api: config.get('RIPPLE_REST_API'),$/;"	r
api	lib/api/get_account_balance.js	/^    api: config.get('RIPPLE_REST_API'),$/;"	r
api	lib/api/get_liabilities.js	/^    api: config.get('RIPPLE_REST_API'),$/;"	r
api	lib/api/get_trust_lines.js	/^    api: config.get('RIPPLE_REST_API'),$/;"	r
api	lib/api/issue_currency.js	/^  api: config.get('RIPPLE_REST_API'),$/;"	r
api	lib/api/refund_cold_wallet.js	/^  api: config.get('RIPPLE_REST_API'),$/;"	r
api	lib/api/register_user.js	/^                api: config.get('RIPPLE_REST_API'),$/;"	r
api	lib/api/register_user.js	/^              api: config.get('RIPPLE_REST_API'),$/;"	r
api	lib/api/set_trust_line.js	/^    api: config.get('RIPPLE_REST_API'),$/;"	r
api	lib/cli/fund_hot_wallet.js	/^  api: gateway.config.get('RIPPLE_REST_API'),$/;"	r
api	lib/core/incoming_payment.js	/^  api     : rippleRestBaseUrl,$/;"	r
api	lib/core/outgoing_payment.js	/^    api: gatewayd.config.get('RIPPLE_REST_API'),$/;"	r
api	lib/data/models/ripple_addresses.js	/^        api: config.get('RIPPLE_REST_API'),$/;"	r
api	lib/http/controllers/api/get_balance.js	/^var api = require(__dirname+'\/..\/..\/..\/api.js');$/;"	r
api	lib/http/controllers/api/get_liabilities.js	/^var api = require(__dirname+'\/..\/..\/..\/api.js');$/;"	r
apiController	lib/http/routers/api_router.js	/^var apiController = require(__dirname+'\/..\/controllers\/api\/');$/;"	r
apiKey	lib/data/logs.js	/^      apiKey: config.get('RAYGUN_KEY')$/;"	r
apiRouter	lib/app.js	/^var apiRouter = require(__dirname+'\/http\/routers\/api_router.js');$/;"	r
app	lib/app.js	/^var app = express();$/;"	r
app	processes/server.js	/^  app = https.createServer({$/;"	r
app	processes/server.js	/^var app = require(__dirname+'\/..\/lib\/app.js');$/;"	r
app	test/http/activate_user.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/add_currency.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/clear_withdrawals.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/configure_gatewayd.js	/^var app               = gatewayd.server;$/;"	r
app	test/http/crud/external_accounts.js	/^var app = require(__dirname+'\/..\/..\/..\/lib\/app.js');$/;"	r
app	test/http/crud/external_transactions.js	/^var app = require(__dirname+'\/..\/..\/..\/lib\/app.js');$/;"	r
app	test/http/crud/policies.js	/^var app = require(__dirname+'\/..\/..\/..\/lib\/app.js');$/;"	r
app	test/http/crud/ripple_addresses.js	/^var app = require(__dirname+'\/..\/..\/..\/lib\/app.js');$/;"	r
app	test/http/crud/ripple_transactions.js	/^var app = require(__dirname+'\/..\/..\/..\/lib\/app.js');$/;"	r
app	test/http/crud/users.js	/^var app = require(__dirname+'\/..\/..\/..\/lib\/app.js');$/;"	r
app	test/http/deactivate_user.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/fund_hot_wallet.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/generate_wallet.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/get_account_balance.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/get_cold_wallet.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/get_database_url.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/get_domain.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/get_hot_wallet.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/get_key.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/get_last_payment_hash.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/get_liabilities_balance.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/get_ripple_rest_url.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/get_trust_line.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/list_cleared_transactions.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/list_currencies.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/list_external_accounts.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/list_external_user_accounts.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/list_failed_payments.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/list_incoming_payments.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/list_outgoing_payment.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/list_processes.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/list_queued_deposits.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/list_trustlines.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/list_users.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/list_withdrawals.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/refund_cold_wallet.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/register_user.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/remove_currency.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/retry_failed_payment.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/set_database_url.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/set_domain.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/set_hot_wallet.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/set_key.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/set_last_payment_hash.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/set_ripple_rest_url.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/set_trust_line.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
app	test/http/start_gateway.js	/^var app = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
apply	config/policies/bridge_policy.js	/^  apply: function(payment) {$/;"	r
apply	config/policies/invoice_policy.js	/^  apply: function(payment) {$/;"	r
apply	config/policies/no_policy.js	/^  apply: function(payment) {$/;"	r
apply	config/policies/user_policy.js	/^  apply: function(payment) {$/;"	r
args	.settings/launch.json	/^			"args": ["generate_wallet"],$/;"	f
args	.settings/launch.json	/^			"args": ["start"],$/;"	f
args	lib/processes/supervisor.js	/^          var args = { $/;"	r
array	lib/processes/process_set.js	/^    var array = [];$/;"	r
as	lib/api/list_outgoing_payments.js	/^      { model: RippleAddresses, as: 'FromAddress' }$/;"	r
as	lib/api/list_outgoing_payments.js	/^      { model: RippleAddresses, as: 'ToAddress' },$/;"	r
as	lib/data/index.js	/^  as: 'ExternalPayment',$/;"	r
as	lib/data/index.js	/^  as: 'FromAccount',$/;"	r
as	lib/data/index.js	/^  as: 'FromAddress',$/;"	r
as	lib/data/index.js	/^  as: 'PaymentsFrom',$/;"	r
as	lib/data/index.js	/^  as: 'PaymentsTo',$/;"	r
as	lib/data/index.js	/^  as: 'RipplePayment',$/;"	r
as	lib/data/index.js	/^  as: 'ToAccount',$/;"	r
as	lib/data/index.js	/^  as: 'ToAddress',$/;"	r
as	lib/http/controllers/resources/external_transactions.js	/^      { model: ExternalAccount, as: 'FromAccount'}$/;"	r
as	lib/http/controllers/resources/external_transactions.js	/^      { model: ExternalAccount, as: 'ToAccount'},$/;"	r
as	lib/http/controllers/resources/external_transactions.js	/^    { model: ExternalAccount, as: 'FromAccount'}$/;"	r
as	lib/http/controllers/resources/external_transactions.js	/^    { model: ExternalAccount, as: 'ToAccount'},$/;"	r
as	lib/http/controllers/resources/ripple_transactions.js	/^      { model: RippleAddress, as: 'FromAddress' }$/;"	r
as	lib/http/controllers/resources/ripple_transactions.js	/^      { model: RippleAddress, as: 'ToAddress' },$/;"	r
as	lib/http/controllers/resources/ripple_transactions.js	/^    { model: RippleAddress, as: 'FromAddress' }$/;"	r
as	lib/http/controllers/resources/ripple_transactions.js	/^    { model: RippleAddress, as: 'ToAddress' },$/;"	r
as	test/models/ripple_associations.js	/^        { model: RippleAddress, as: 'FromAddress' }$/;"	r
as	test/models/ripple_associations.js	/^        { model: RippleAddress, as: 'ToAddress' },$/;"	r
assert	test/api/create_external_payment.js	/^var assert   = require('assert');$/;"	r
assert	test/api/create_gateway_transaction.js	/^var assert   = require('assert');$/;"	r
assert	test/api/create_ripple_payment.js	/^var assert          = require('assert');$/;"	r
assert	test/api/fund_hot_wallet.js	/^var assert = require('assert');$/;"	r
assert	test/api/get_liabilities.js	/^var assert = chai.assert;$/;"	r
assert	test/api/get_trust_lines.js	/^var assert = require('assert');$/;"	r
assert	test/api/refund_cold_wallet.js	/^var assert = require('assert');$/;"	r
assert	test/api/set_trust_line.js	/^var assert            = require('assert');$/;"	r
assert	test/core/deposit_processor.js	/^var assert = require('assert');$/;"	r
assert	test/core/utils.js	/^var assert = require('assert');$/;"	r
assert	test/core/withdrawal_processor.js	/^var assert = require('assert');$/;"	r
assert	test/errors/enqueue_outgoing_payment.js	/^var assert = require('assert');$/;"	r
assert	test/features.js	/^var assert = require("assert");$/;"	r
assert	test/http/clear_withdrawals.js	/^var assert = require('assert');$/;"	r
assert	test/http/crud/external_accounts.js	/^var assert = require('assert');$/;"	r
assert	test/http/crud/external_transactions.js	/^var assert = require('assert');$/;"	r
assert	test/http/crud/policies.js	/^var assert = require('assert');$/;"	r
assert	test/http/crud/ripple_addresses.js	/^var assert = require('assert');$/;"	r
assert	test/http/crud/ripple_transactions.js	/^var assert = require('assert');$/;"	r
assert	test/http/crud/users.js	/^var assert = require('assert');$/;"	r
assert	test/http/enqueue_outgoing_payment.js	/^var assert = require('assert');$/;"	r
assert	test/http/fund_hot_wallet.js	/^var assert = require('assert');$/;"	r
assert	test/http/list_trustlines.js	/^var assert = require('assert');$/;"	r
assert	test/http/retry_failed_payment.js	/^var assert = require('assert');$/;"	r
assert	test/models/gateway_transactions.js	/^var assert = require('assert');$/;"	r
assert	test/models/policies.js	/^var assert = require("assert");$/;"	r
assert	test/models/ripple_associations.js	/^var assert = require('assert');$/;"	r
assert	test/processes/pm2.js	/^var assert     = require('assert')$/;"	r
async	lib/api/clear_withdrawal.js	/^var async = require('async');$/;"	r
async	lib/api/retry_failed_payment.js	/^var async = require('async');$/;"	r
async	lib/cli/fund_hot_wallet.js	/^var async = require('async');$/;"	r
async	lib/core/deposit_processor.js	/^var async   = require('async');$/;"	r
async	lib/core/withdrawal_processor.js	/^var async = require('async');$/;"	r
async	lib/data/migrations/20140416175350-add-uid-to-all.js	/^var async = require('async');$/;"	r
async	lib/data/migrations/20140418123552-add-data-json-to-all.js	/^var async = require('async');$/;"	r
async	lib/data/migrations/20140930174005-rename-external-accounts-columns.js	/^var async = require("async");$/;"	r
async	lib/data/migrations/20141212183505-add-source-and-destination-amounts-to-external-xactions.js	/^var async = require('async');$/;"	r
async	lib/data/migrations/20141212214904-add-destination-account-id-and-source-account-id-external-xactions.js	/^var async = require('async');$/;"	r
async	lib/data/migrations/20141212230605-make-amount-and-currency-optional-external-xfer.js	/^var async = require('async');$/;"	r
async	lib/data/package.json	/^    "async": "0.1.22",$/;"	f
async	package.json	/^    "async": "0.1.22",$/;"	f
asyncPolicy	lib/core/policy_engine.js	/^      var asyncPolicy = Promise.promisify(policy);$/;"	r
auth	lib/data/logs.js	/^    auth: config.get('LOGGLY').auth,$/;"	r
auth	lib/http/passport_auth.js	/^  var auth = new BasicStrategy($/;"	r
auth	test/http/crud/external_accounts.js	/^var auth = {$/;"	r
auth	test/http/crud/external_transactions.js	/^var auth = {$/;"	r
auth	test/http/crud/policies.js	/^var auth = {$/;"	r
auth	test/http/crud/ripple_addresses.js	/^var auth = {$/;"	r
auth	test/http/crud/ripple_transactions.js	/^var auth = {$/;"	r
autoIncrement	lib/data/migrations/20140731062106-create-policies.js	/^      autoIncrement: true$/;"	r
autoIncrement	lib/data/migrations/20140819202523-create-gateway-transactions.js	/^      autoIncrement: true$/;"	r
autoIncrement	lib/data/migrations/20140918033326-create-bridges.js	/^      autoIncrement: true$/;"	r
autoIncrement	lib/data/migrations/20141015171506-create-configs.js	/^      autoIncrement: true$/;"	r
autoIncrement	lib/data/models/bridges.js	/^    autoIncrement: true$/;"	r
autoIncrement	lib/data/models/configs.js	/^    autoIncrement: true$/;"	r
autoIncrement	lib/data/models/external_transactions.js	/^    autoIncrement: true$/;"	r
autoIncrement	lib/data/models/gateway_transactions.js	/^    autoIncrement: true$/;"	r
autoIncrement	lib/data/models/kyc_data.js	/^		autoIncrement: true$/;"	r
autoIncrement	lib/data/models/policies.js	/^    autoIncrement: true$/;"	r
autoIncrement	lib/data/models/ripple_addresses.js	/^		autoIncrement: true$/;"	r
autoIncrement	lib/data/models/ripple_transactions.js	/^    autoIncrement: true $/;"	r
autoIncrement	lib/data/models/users.js	/^		autoIncrement: true,$/;"	r
badRequest	lib/http/response_handler.js	/^  badRequest: 400,$/;"	r
balance	lib/views/text/index.js	/^    var balance = balances[i];$/;"	r
balances	lib/api/get_liabilities.js	/^      resp.balances = aggregated || resp.balances;$/;"	r
balances	lib/views/text/index.js	/^  balances: printAccountBalance$/;"	r
bank_account_id	lib/data/migrations/20131216193924-users.js	/^    bank_account_id: { type: 'int'},$/;"	r
beforeValidate	lib/data/models/gateway_transactions.js	/^    beforeValidate: function(attributes, fn) {$/;"	r
bignumber.js	lib/data/package.json	/^    "bignumber.js": "1.3.0",$/;"	f
bignumber.js	package.json	/^    "bignumber.js": "1.3.0",$/;"	f
bin	package.json	/^  "bin": {$/;"	f
bind	lib/data/index.js	/^var bind = function(controller, property) {$/;"	r
bind	lib/http/controllers/admin/index.js	/^function bind(action, filename){$/;"	r
bind	lib/http/controllers/api/index.js	/^function bind(action, filename){$/;"	r
bind	lib/http/controllers/public/index.js	/^function bind(action, filename){$/;"	r
bluebird	package.json	/^    "bluebird": "^0.11.6",$/;"	f
body	lib/http/response_handler.js	/^function send(response, body, statusCode) {$/;"	r
body-parser	package.json	/^    "body-parser": "^1.6.3",$/;"	f
bodyParser	lib/app.js	/^var bodyParser = require('body-parser');$/;"	r
break	lib/core/outgoing_payment.js	/^          break;$/;"	r
break	lib/core/outgoing_payment.js	/^        break;$/;"	r
bridge	lib/http/controllers/resources/bridges.js	/^            bridge: bridge$/;"	r
bridge	lib/http/controllers/resources/bridges.js	/^        bridge: bridge$/;"	r
bridge-payments-plugin	package.json	/^    "bridge-payments-plugin": "^0.4.1",$/;"	f
bridge-quote-service-client	package.json	/^    "bridge-quote-service-client": "^0.1.5",$/;"	f
bridgePaymentLink	lib/host_meta/host_meta.js	/^  this.bridgePaymentLink = new BridgePaymentLink(options);$/;"	r
bridgePaymentStatusLink	lib/host_meta/host_meta.js	/^  this.bridgePaymentStatusLink = new BridgePaymentStatusLink(options);$/;"	r
bridgePaymentsPlugin	config/initializers/bridge_payments.js	/^  var bridgePaymentsPlugin = new BridgePaymentsPlugin({$/;"	r
bridgeQuoteLink	lib/host_meta/host_meta.js	/^  this.bridgeQuoteLink = new BridgeQuoteLink(options);$/;"	r
buildModelPagination	lib/data/pagination_util.js	/^  buildModelPagination: function (request) {$/;"	r
call	scripts/jsawk	/^    function call(name){$/;"	f
cert	processes/server.js	/^    cert: fs.readFileSync(gatewayd.config.get('SSL_CERTIFICATE_PATH'))$/;"	r
chai	package.json	/^    "chai": "^1.9.2",$/;"	f
chai	test/api/enqueue_outgoing_payment.js	/^var chai                   = require('chai');$/;"	r
chai	test/api/get_hosted_address.js	/^var chai = require('chai');$/;"	r
chai	test/api/get_liabilities.js	/^var chai = require('chai');$/;"	r
chai	test/api/list_failed_payments.js	/^var chai = require('chai');$/;"	r
chai	test/api/list_outgoing_payments.js	/^var chai = require('chai');$/;"	r
chai	test/api/record_deposit.js	/^var chai = require('chai');$/;"	r
chai	test/api/record_incoming_payment.js	/^var chai = require('chai');$/;"	r
chai	test/api/retry_failed_payment.js	/^var chai = require('chai');$/;"	r
chai	test/api/ripple_quotes.js	/^var chai               = require('chai');$/;"	r
chai	test/models/external_accounts.js	/^var chai = require('chai');$/;"	r
chai	test/models/external_transactions.js	/^var chai = require('chai');$/;"	r
chai	test/models/ripple_transactions.js	/^var chai                        = require('chai');$/;"	r
chai	test/utils/db_ripple_seed.js	/^var chai                 = require('chai');$/;"	r
chai-as-promised	package.json	/^    "chai-as-promised": "^4.1.1",$/;"	f
chaiAsPromised	test/api/enqueue_outgoing_payment.js	/^var chaiAsPromised         = require('chai-as-promised');$/;"	r
chaiAsPromised	test/api/get_hosted_address.js	/^var chaiAsPromised = require('chai-as-promised');$/;"	r
chaiAsPromised	test/api/get_liabilities.js	/^var chaiAsPromised = require('chai-as-promised');$/;"	r
chaiAsPromised	test/api/record_incoming_payment.js	/^var chaiAsPromised = require('chai-as-promised');$/;"	r
chaiAsPromised	test/api/retry_failed_payment.js	/^var chaiAsPromised = require('chai-as-promised');$/;"	r
chaiAsPromised	test/api/ripple_quotes.js	/^var chaiAsPromised     = require('chai-as-promised');$/;"	r
chaiAsPromised	test/models/external_accounts.js	/^var chaiAsPromised = require('chai-as-promised');$/;"	r
chaiAsPromised	test/models/external_transactions.js	/^var chaiAsPromised = require('chai-as-promised');$/;"	r
chaiAsPromised	test/models/ripple_transactions.js	/^var chaiAsPromised              = require('chai-as-promised');$/;"	r
chainer	lib/data/index.js	/^var chainer = new Sequelize.Utils.QueryChainer();$/;"	r
chance	lib/cli/db_ripple_tx_seed.js	/^var chance = new Chance();$/;"	r
chance	package.json	/^    "chance": "^0.6.1",$/;"	f
chance	test/utils/db_ripple_seed.js	/^  var chance = new Chance();$/;"	r
chanceFromAddressId	test/utils/db_ripple_seed.js	/^        chanceFromAddressId = chance.integer({min: 1, max: 99999}),$/;"	r
chanceFromAmount	test/utils/db_ripple_seed.js	/^        chanceFromAmount = chance.floating({fixed: 2}),$/;"	r
chanceFromCurrency	test/utils/db_ripple_seed.js	/^        chanceFromCurrency = chance.currency().code,$/;"	r
chanceFromIssuer	test/utils/db_ripple_seed.js	/^      chanceFromIssuer = result.address;$/;"	r
chanceFromIssuer	test/utils/db_ripple_seed.js	/^    var chanceFromIssuer;$/;"	r
chanceInvoiceId	test/utils/db_ripple_seed.js	/^        chanceInvoiceId = crypto.randomBytes(32).toString('hex').toUpperCase();$/;"	r
chanceToAddressId	test/utils/db_ripple_seed.js	/^    var chanceToAddressId = chance.integer({min: 1, max: 99999}),$/;"	r
chanceToAmount	test/utils/db_ripple_seed.js	/^        chanceToAmount = chance.floating({fixed: 2}),$/;"	r
chanceToCurrency	test/utils/db_ripple_seed.js	/^        chanceToCurrency = chance.currency().code,$/;"	r
chanceToIssuer	test/utils/db_ripple_seed.js	/^      chanceToIssuer = result.address;$/;"	r
chanceToIssuer	test/utils/db_ripple_seed.js	/^    var chanceToIssuer;$/;"	r
changes	test/core/utils.js	/^    var changes = [$/;"	r
classMethods	lib/data/models/configs.js	/^  classMethods: {$/;"	r
clearWithdrawal	lib/api/clear_withdrawal.js	/^function clearWithdrawal(withdrawalId, callback) {$/;"	r
clearWithdrawal	lib/cli/clear_withdrawal.js	/^function clearWithdrawal(id){$/;"	r
clearedTransactions	lib/views/text/index.js	/^  clearedTransactions: printClearedTransactions,$/;"	r
cli-table	package.json	/^    "cli-table": "0.3.0",$/;"	f
client	lib/api/get_account_balance.js	/^  var client = new Client({$/;"	r
client	lib/api/get_liabilities.js	/^  var client = new Client({$/;"	r
client_resource_id	lib/api/fund_cold_wallet.js	/^    client_resource_id: uuid.v4(),$/;"	r
client_resource_id	lib/api/fund_hot_wallet.js	/^    client_resource_id: uuid.v4(),$/;"	r
client_resource_id	lib/api/issue_currency.js	/^    client_resource_id: uuid.v4(),$/;"	r
client_resource_id	lib/api/refund_cold_wallet.js	/^    client_resource_id: uuid.v4(),$/;"	r
client_resource_id	lib/api/register_user.js	/^                client_resource_id: uuid.v4(),$/;"	r
client_resource_id	lib/core/outgoing_payment.js	/^        client_resource_id: uuid.v4(),$/;"	r
client_resource_id	test/fixtures/ripple_rest_integration.js	/^      client_resource_id: '1',$/;"	r
code	test/core/outgoing_payment.js	/^    error.code = 'ECONNRESET';$/;"	r
colWidths	lib/views/text/index.js	/^    colWidths: [10, 10, 10, 15, 10, 40]$/;"	r
colWidths	lib/views/text/index.js	/^    colWidths: [10, 10, 40]$/;"	r
colWidths	lib/views/text/index.js	/^    colWidths: [10, 30, 10, 10, 15]$/;"	r
colWidths	lib/views/text/index.js	/^    colWidths: [10, 40, 40]$/;"	r
colWidths	lib/views/text/index.js	/^    colWidths: [30, 10, 40]$/;"	r
colWidths	lib/views/text/index.js	/^    colWidths: [40, 10, 20]$/;"	r
colWidths	lib/views/text/index.js	/^    colWidths: [8, 8, 10, 10]$/;"	r
coldWallet	lib/api/get_trust_lines.js	/^  var coldWallet = config.get('COLD_WALLET');$/;"	r
coldWallet	lib/api/register_user.js	/^              var coldWallet = config.get('COLD_WALLET');$/;"	r
coldWallet	lib/api/set_trust_line.js	/^  var coldWallet = config.get('COLD_WALLET');$/;"	r
coldWallet	lib/cli/set_cold_wallet.js	/^  var coldWallet = gateway.config.get('COLD_WALLET');$/;"	r
coldWallet	lib/http/controllers/api/get_cold_wallet.js	/^  var coldWallet = gateway.config.get('COLD_WALLET') || {};$/;"	r
coldWallet	lib/http/controllers/api/set_cold_wallet.js	/^  var coldWallet = gateway.config.get('COLD_WALLET');$/;"	r
coldWallet	test/api/get_trust_lines.js	/^      coldWallet: gateway.config.get('COLD_WALLET')$/;"	r
coldWallet	test/api/get_trust_lines.js	/^      coldWallet: walletsFixture.COLD_WALLET$/;"	r
cold_wallet	lib/api/set_cold_wallet.js	/^      cold_wallet = config.get(key);$/;"	r
cold_wallet	lib/api/set_cold_wallet.js	/^  var cold_wallet = config.get(key);$/;"	r
combine	lib/data/pagination_util.js	/^    var combine = _.clone(query, true);$/;"	r
combined-stream	package.json	/^    "combined-stream": "^1.0.3",$/;"	f
command	lib/processes/process_manager.js	/^      command = 'list';$/;"	r
command	lib/processes/process_manager.js	/^      command = 'prettylist';$/;"	r
command	lib/processes/process_manager.js	/^    var command;$/;"	r
commander	package.json	/^    "commander": "2.1.0",$/;"	f
config	Gruntfile.js	/^        config: '.\/lib\/data\/database.json',$/;"	r
config	Gruntfile.js	/^var config = require( __dirname + '\/config\/environment.js' );$/;"	r
config	index.js	/^exports.config = require(__dirname + '\/config\/environment.js');$/;"	r
config	lib/api/add_currency.js	/^var config = require(__dirname+'\/..\/..\/config\/environment.js');$/;"	r
config	lib/api/configure_gatewayd.js	/^var config          = require(__dirname+'\/..\/..\/config\/environment.js');$/;"	r
config	lib/api/fund_cold_wallet.js	/^var config            = require(__dirname+'\/..\/..\/config\/environment.js');$/;"	r
config	lib/api/fund_hot_wallet.js	/^var config            = require(__dirname+'\/..\/..\/config\/environment.js');$/;"	r
config	lib/api/get_account_balance.js	/^var config = require(__dirname+'\/..\/..\/config\/environment');$/;"	r
config	lib/api/get_hosted_address.js	/^var config = require(__dirname+'\/..\/..\/config\/environment.js');$/;"	r
config	lib/api/get_key.js	/^var config = require(__dirname+'\/..\/..\/config\/environment.js');$/;"	r
config	lib/api/get_liabilities.js	/^var config = require(__dirname+'\/..\/..\/config\/environment');$/;"	r
config	lib/api/get_trust_lines.js	/^var config = require(__dirname+'\/..\/..\/config\/environment.js');$/;"	r
config	lib/api/get_user_accounts.js	/^var config = require(__dirname+'\/..\/..\/config\/environment.js');$/;"	r
config	lib/api/issue_currency.js	/^var config = require(__dirname+'\/..\/..\/config\/environment.js');$/;"	r
config	lib/api/refund_cold_wallet.js	/^var config            = require(__dirname+'\/..\/..\/config\/environment.js');$/;"	r
config	lib/api/register_user.js	/^var config = require(__dirname+'\/..\/..\/config\/environment.js');$/;"	r
config	lib/api/remove_currency.js	/^var config = require(__dirname+'\/..\/..\/config\/environment.js');$/;"	r
config	lib/api/set_cold_wallet.js	/^var config = require(__dirname+'\/..\/..\/config\/environment.js');$/;"	r
config	lib/api/set_hot_wallet.js	/^var config = require(__dirname+'\/..\/..\/config\/environment.js');$/;"	r
config	lib/api/set_key.js	/^var config = require(__dirname+'\/..\/..\/config\/environment.js');$/;"	r
config	lib/api/set_ripple_rest_url.js	/^var config = require(__dirname+'\/..\/..\/config\/environment.js');$/;"	r
config	lib/api/set_trust_line.js	/^ * @requires trust, config$/;"	r
config	lib/api/set_trust_line.js	/^var config = require(__dirname+'\/..\/..\/config\/environment.js');$/;"	r
config	lib/data/logs.js	/^var config    = require(__dirname + '\/..\/..\/config\/environment.js');$/;"	r
config	lib/data/sequelize.js	/^var config = require(__dirname+'\/..\/..\/config\/environment.js');$/;"	r
config	lib/processes/process_manager.js	/^var config = require(__dirname+'\/..\/..\/config\/environment.js');$/;"	r
config	lib/processes/supervisor.js	/^var config = require(__dirname+'\/..\/..\/config\/environment.js')$/;"	r
config	test/api/get_liabilities.js	/^var config = require(__dirname+'\/..\/..\/config\/environment');$/;"	r
configGet	test/http/configure_gatewayd.js	/^    configGet = sinon.stub(gatewayd.config, 'get');$/;"	r
configStub	test/api/create_ripple_payment.js	/^    var configStub = sinon.stub(gatewayd.config, 'get');$/;"	r
configStub	test/api/enqueue_outgoing_payment.js	/^    var configStub = sinon.stub(gatewayd.config, 'get');$/;"	r
configStub	test/api/get_hosted_address.js	/^    var configStub = sinon.stub(gatewayd.config, 'get');$/;"	r
configStub	test/api/get_or_fetch_last_payment_hash.js	/^    var configStub = sinon.stub(gatewayd.config, 'get');$/;"	r
configStub	test/api/record_incoming_payment.js	/^    var configStub = sinon.stub(gatewayd.config, 'get');$/;"	r
configStub	test/api/ripple_quotes.js	/^    var configStub = sinon.stub(gatewayd.config, 'get');$/;"	r
configStub	test/api/set_last_payment_hash.js	/^    var configStub = sinon.stub(gatewayd.config, 'get');$/;"	r
configStub	test/api/set_trust_line.js	/^    var configStub = sinon.stub(gatewayd.config, 'get');$/;"	r
configStub	test/core/incoming_payment.js	/^    var configStub = sinon.stub(gatewayd.config, 'get');$/;"	r
configurationParameters	lib/http/controllers/public/setup_wizard.js	/^  var configurationParameters = req.body.config || {};$/;"	r
configurations	.settings/launch.json	/^	"configurations": [$/;"	f
configure	lib/data/controllers/external_accounts.js	/^function configure(api) {$/;"	r
configure	lib/data/controllers/external_transactions.js	/^function configure(api) {$/;"	r
configure	lib/data/controllers/ripple_addresses.js	/^function configure(api) {$/;"	r
configure	lib/data/controllers/ripple_transactions.js	/^function configure(api) {$/;"	r
configure	lib/data/controllers/users.js	/^function configure(api) {$/;"	r
configureGatewayd	lib/http/controllers/api/configure_gatewayd.js	/^var configureGatewayd = require(__dirname+'\/..\/..\/..\/api\/configure_gatewayd.js');$/;"	r
configureGatewayd	test/api/configure_gatewayd.js	/^var configureGatewayd = gatewayd.api.configureGatewayd;$/;"	r
configureGatewaydSet	test/http/configure_gatewayd.js	/^    configureGatewaydSet = sinon.stub(gatewayd.api.configureGatewayd, 'set');$/;"	r
confirmationResponse	test/core/outgoing_payment.js	/^        var confirmationResponse = new Object(fixturesRippleRestIntegration.successful_responses.validated_payment);$/;"	r
connect	lib/processes/supervisor.js	/^pm2.connect    = Promise.promisify(pm2.connect);$/;"	r
connection	lib/ripple_rest_error_handler.js	/^    connection: function() {$/;"	r
connection	test/fixtures/ripple_rest_integration.js	/^    connection: {$/;"	r
constructor	lib/errors/enqueue_outgoing_payment_error.js	/^EnqueueOutgoingPaymentError.prototype.constructor = EnqueueOutgoingPaymentError;$/;"	r
constructor	lib/host_meta/bridge_payment_link.js	/^BridgePaymentLink.prototype.constructor = BridgePaymentLink;$/;"	r
constructor	lib/host_meta/bridge_payment_status_link.js	/^BridgePaymentStatusLink.prototype.constructor = BridgePaymentStatusLink;$/;"	r
constructor	lib/host_meta/bridge_quote_link.js	/^BridgeQuoteLink.prototype.constructor = BridgeQuoteLink;$/;"	r
constructor	lib/host_meta/webfinger_link.js	/^WebfingerLink.prototype.constructor = WebfingerLink;$/;"	r
constructor	lib/processes/process_manager.js	/^  constructor: ProcessManager,$/;"	r
constructor	lib/processes/process_set.js	/^  constructor: ProcessSet,$/;"	r
content	lib/http/response_handler.js	/^    content = _.extend(content, body);$/;"	r
content	lib/http/response_handler.js	/^  send(response, content, StatusCode.badRequest);$/;"	r
content	lib/http/response_handler.js	/^  send(response, content, StatusCode.created);$/;"	r
content	lib/http/response_handler.js	/^  send(response, content, StatusCode.internalServerError);$/;"	r
content	lib/http/response_handler.js	/^  send(response, content, StatusCode.notFound);$/;"	r
content	lib/http/response_handler.js	/^  send(response, content, StatusCode.ok);$/;"	r
content	lib/http/response_handler.js	/^  var content = {$/;"	r
controller	lib/http/controllers/api/enqueue_outgoing_payment.js	/^var controller = new OutgoingRipplePaymentsController();$/;"	r
controller	lib/http/controllers/users/index.js	/^var controller = {$/;"	r
coroutine	lib/cli/start_gateway.js	/^      var coroutine = new DS.Process(function() {$/;"	r
cors	package.json	/^    "cors": "^2.4.1",$/;"	f
count	test/utils/pagination_util.js	/^      count: '10'$/;"	r
count	test/utils/pagination_util.js	/^      count: '10',$/;"	r
counterparty	lib/api/register_user.js	/^                counterparty: coldWallet,$/;"	r
counterparty	lib/api/set_trust_line.js	/^    counterparty: coldWallet,$/;"	r
counterparty	lib/views/text/index.js	/^      balance.counterparty$/;"	r
counterparty	lib/views/text/index.js	/^      line.counterparty,$/;"	r
counterparty	test/api/get_trust_lines.js	/^      .yields(null, [{account: walletsFixture.HOT_WALLET.address, counterparty: walletsFixture.COLD_WALLET}]);$/;"	r
counterparty	test/api/set_trust_line.js	/^    rippleRestStub.yields(null, {account: walletsFixture.HOT_WALLET.address, counterparty: walletsFixture.COLD_WALLET, limit: amount, currency: currency});$/;"	r
coveralls	package.json	/^    "coveralls": "^2.11.2",$/;"	f
coveralls	package.json	/^    "coveralls": "cat .\/coverage\/lcov.info | .\/node_modules\/.bin\/coveralls",$/;"	f
create	lib/data/controllers/external_accounts.js	/^  api.create = function(opts, fn){$/;"	r
create	lib/data/controllers/external_transactions.js	/^  api.create = function(opts, fn){$/;"	r
create	lib/data/controllers/ripple_addresses.js	/^  api.create = function(opts, fn){$/;"	r
create	lib/data/controllers/ripple_transactions.js	/^  api.create = function(opts, fn){$/;"	r
create	lib/data/controllers/users.js	/^  api.create = function(opts, fn) {$/;"	r
create	lib/http/controllers/resources/bridges.js	/^  create: create,$/;"	r
create	lib/http/controllers/resources/bridges.js	/^function create(request, response) {$/;"	r
create	lib/http/controllers/resources/external_accounts.js	/^  create: create,$/;"	r
create	lib/http/controllers/resources/external_accounts.js	/^function create(request, response) {$/;"	r
create	lib/http/controllers/resources/external_transactions.js	/^  create: create,$/;"	r
create	lib/http/controllers/resources/external_transactions.js	/^function create(request, response) {$/;"	r
create	lib/http/controllers/resources/gateway_transactions.js	/^  create: create,$/;"	r
create	lib/http/controllers/resources/gateway_transactions.js	/^function create(request, response) {$/;"	r
create	lib/http/controllers/resources/policies.js	/^  create: function(request, response) {$/;"	r
create	lib/http/controllers/resources/ripple_addresses.js	/^  create: create,$/;"	r
create	lib/http/controllers/resources/ripple_addresses.js	/^function create(request, response) {$/;"	r
create	lib/http/controllers/resources/ripple_transactions.js	/^  create: create,$/;"	r
create	lib/http/controllers/resources/ripple_transactions.js	/^function create(request, response) {$/;"	r
create	lib/http/controllers/resources/users.js	/^  create: create,$/;"	r
create	lib/http/controllers/resources/users.js	/^function create(req, res){$/;"	r
createExternalPayment	lib/api/create_external_payment.js	/^function createExternalPayment(options) {$/;"	r
createExternalPayment	lib/api/create_gateway_transaction.js	/^var createExternalPayment    = require(__dirname+'\/create_external_payment');$/;"	r
createGatewayTransaction	lib/api/create_gateway_transaction.js	/^function createGatewayTransaction(options) {$/;"	r
createRippleAddress	lib/api/register_user.js	/^                function createRippleAddress(){$/;"	r
createRipplePayment	lib/api/create_gateway_transaction.js	/^var createRipplePayment      = require(__dirname+'\/create_ripple_payment');$/;"	r
createRipplePayment	lib/api/create_ripple_payment.js	/^function createRipplePayment(options) {$/;"	r
createWorker	processes/deposits.js	/^function createWorker(gatewayd) {$/;"	r
created	lib/http/response_handler.js	/^  created: 201,$/;"	r
created	lib/http/response_handler.js	/^  created: created,$/;"	r
created	lib/http/response_handler.js	/^function created(response, body) {$/;"	r
createdAt	lib/data/migrations/20131216193924-users.js	/^    createdAt: { type: 'datetime', notNull: true },$/;"	r
createdAt	lib/data/migrations/20131216232955-external-transactions.js	/^    createdAt: { type: 'datetime', notNull: true },$/;"	r
createdAt	lib/data/migrations/20131216233400-ripple-transactions.js	/^    createdAt:         { type: 'datetime', notNull: true },$/;"	r
createdAt	lib/data/migrations/20131217004626-gateway-accounts.js	/^    createdAt: { type: 'datetime', notNull: true },$/;"	r
createdAt	lib/data/migrations/20131219233339-ripple-addresses.js	/^    createdAt: { type: 'datetime' },$/;"	r
createdAt	lib/data/migrations/20140119011932-external-accounts.js	/^    createdAt: { type: 'datetime', notNull: true},$/;"	r
createdAt	lib/data/migrations/20140418131831-create-kyc-data.js	/^    createdAt: { type: 'datetime', notNull: true},$/;"	r
createdAt	lib/data/migrations/20140731062106-create-policies.js	/^    createdAt: { type: 'datetime', notNull: true},$/;"	r
createdAt	lib/data/migrations/20140819202523-create-gateway-transactions.js	/^    createdAt: {$/;"	r
createdAt	lib/data/migrations/20140918033326-create-bridges.js	/^    createdAt: {$/;"	r
createdAt	lib/data/migrations/20141015171506-create-configs.js	/^    createdAt: {$/;"	r
createdAt	lib/views/text/index.js	/^      address.createdAt$/;"	r
createdAt	lib/views/text/index.js	/^      transaction.createdAt,$/;"	r
createdAt	lib/views/text/index.js	/^      user.createdAt,$/;"	r
createdAt	test/fixtures/incoming_payments.js	/^      createdAt        : 'Fri Dec 12 2014 17:44:31 GMT-0800 (PST)',$/;"	r
createdConfig	test/models/configs.js	/^      createdConfig = config;$/;"	r
createdConfig	test/models/configs.js	/^  var createdConfig;$/;"	r
createdPolicy	test/models/policies.js	/^      createdPolicy = policy;$/;"	r
createdPolicy	test/models/policies.js	/^var createdPolicy;$/;"	r
crypto	lib/api/set_key.js	/^ * @requires config, crypto$/;"	r
crypto	lib/api/set_key.js	/^var crypto = require('crypto');$/;"	r
crypto	lib/cli/db_ripple_tx_seed.js	/^var crypto = require('crypto');$/;"	r
crypto	lib/data/controllers/users.js	/^var crypto    = require('crypto');$/;"	r
crypto	lib/data/utils.js	/^var crypto = require('crypto');$/;"	r
crypto	test/core/deposit_processor.js	/^var crypto= require('crypto');$/;"	r
crypto	test/core/withdrawal_processor.js	/^var crypto= require('crypto');$/;"	r
crypto	test/http/crud/external_accounts.js	/^var crypto = require('crypto');$/;"	r
crypto	test/http/crud/external_transactions.js	/^var crypto = require('crypto');$/;"	r
crypto	test/http/crud/policies.js	/^var crypto = require('crypto');$/;"	r
crypto	test/http/crud/ripple_addresses.js	/^var crypto = require('crypto');$/;"	r
crypto	test/http/crud/ripple_transactions.js	/^var crypto = require('crypto');$/;"	r
crypto	test/http/crud/users.js	/^var crypto = require('crypto');$/;"	r
currencies	lib/api/add_currency.js	/^  var currencies = config.get('CURRENCIES') || {};$/;"	r
currencies	lib/api/remove_currency.js	/^  var currencies = config.get('CURRENCIES') || {};$/;"	r
currencies	lib/api/ripple_quotes.js	/^      currencies: _.keys(config.get('CURRENCIES'))$/;"	r
currencies	lib/cli/list_currencies.js	/^  var currencies = gateway.config.get('CURRENCIES') || {};$/;"	r
currencies	lib/http/controllers/api/ripple_quotes_incoming.js	/^      currencies: currencies$/;"	r
currencies	lib/http/controllers/api/ripple_quotes_incoming.js	/^  var currencies = request.param('source_currencies') ? request.param('source_currencies').split(',') : [];$/;"	r
currencies	lib/http/controllers/public/build_ripple_txt.js	/^  var currencies = gateway.config.get('CURRENCIES');$/;"	r
currencies	lib/http/controllers/public/currencies.js	/^  var currencies = [];$/;"	r
currencies	test/api/ripple_quotes.js	/^            currencies: ['USD', 'XRP']$/;"	r
currencies	test/api/ripple_quotes.js	/^            currencies: ['USD']$/;"	r
currencies	test/fixtures/ripple_quotes.js	/^        currencies: ['USD']$/;"	r
currency	lib/api/create_external_payment.js	/^    currency: options.source_currency,$/;"	r
currency	lib/api/fund_cold_wallet.js	/^        currency: payment.currency,$/;"	r
currency	lib/api/fund_hot_wallet.js	/^        currency: payment.currency,$/;"	r
currency	lib/api/get_liabilities.js	/^          currency: key$/;"	r
currency	lib/api/issue_currency.js	/^          currency: currency,$/;"	r
currency	lib/api/issue_currency.js	/^function issueCurrency(amount, currency, secret, callback) {$/;"	r
currency	lib/api/record_deposit.js	/^        currency: options.currency,$/;"	r
currency	lib/api/refund_cold_wallet.js	/^        currency: options.currency,$/;"	r
currency	lib/api/register_user.js	/^                    currency: 'XRP',$/;"	r
currency	lib/api/register_user.js	/^                currency: userOpts.currency,$/;"	r
currency	lib/api/register_user.js	/^    currency: opts.currency,$/;"	r
currency	lib/api/ripple_quotes.js	/^      currency: options.destination.currency$/;"	r
currency	lib/api/set_trust_line.js	/^    currency: currency,$/;"	r
currency	lib/cli/enqueue_outgoing_payment.js	/^    currency: currency,$/;"	r
currency	lib/cli/fund_hot_wallet.js	/^    currency: currency,$/;"	r
currency	lib/cli/fund_hot_wallet.js	/^function fundHotWallet(amount, currency, secret, callback) {$/;"	r
currency	lib/cli/record_deposit.js	/^    currency: currency,$/;"	r
currency	lib/cli/record_deposit.js	/^function recordDeposit(amount, currency, external_account_id) {$/;"	r
currency	lib/cli/refund_cold_wallet.js	/^    currency: currency$/;"	r
currency	lib/cli/register_user.js	/^    currency: currency,$/;"	r
currency	lib/core/outgoing_payment.js	/^      currency: _this.record.to_currency,$/;"	r
currency	lib/core/utils.js	/^      currency: nonXrpChanges[0].currency,$/;"	r
currency	lib/core/utils.js	/^    currency: changes[0].currency,$/;"	r
currency	lib/core/withdrawal_processor.js	/^              currency: rippleTransaction.to_currency,$/;"	r
currency	lib/data/controllers/external_transactions.js	/^    var query = 'select external_transactions.id, currency, amount, deposit, ripple_transaction_id,';$/;"	r
currency	lib/data/migrations/20131216232955-external-transactions.js	/^    currency: { type: 'string', notNull: true },$/;"	r
currency	lib/data/models/external_transactions.js	/^  currency: {$/;"	r
currency	lib/http/controllers/api/fund_hot_wallet.js	/^    currency: req.body.currency,$/;"	r
currency	lib/http/controllers/api/record_deposit.js	/^    currency: req.body.currency,$/;"	r
currency	lib/http/controllers/api/refund_cold_wallet.js	/^  var currency = req.body.currency;$/;"	r
currency	lib/http/controllers/api/register_user.js	/^    currency: req.body.currency,$/;"	r
currency	lib/http/controllers/api/ripple_quotes_incoming.js	/^      currency: request.param('destination_currency')$/;"	r
currency	lib/http/controllers/api/ripple_quotes_outgoing.js	/^      currency: request.param('destination_currency')$/;"	r
currency	lib/http/controllers/api/set_trust_line.js	/^  var currency = req.body.currency;$/;"	r
currency	lib/views/text/index.js	/^      balance.currency,$/;"	r
currency	lib/views/text/index.js	/^      line.currency,$/;"	r
currency	lib/views/text/index.js	/^      transaction.currency,$/;"	r
currency	test/api/fund_hot_wallet.js	/^      currency: 'XRP'$/;"	r
currency	test/api/fund_hot_wallet.js	/^      currency: 'XRP',$/;"	r
currency	test/api/record_deposit.js	/^        currency: 'USD',$/;"	r
currency	test/api/record_deposit.js	/^      currency: 'USD',$/;"	r
currency	test/api/record_incoming_payment.js	/^        currency: 'EUR',$/;"	r
currency	test/api/record_incoming_payment.js	/^        currency: 'USD',$/;"	r
currency	test/api/refund_cold_wallet.js	/^      currency: 'PGP'$/;"	r
currency	test/api/refund_cold_wallet.js	/^      currency: 'SWD'$/;"	r
currency	test/api/ripple_quotes.js	/^            currency: 'USD'$/;"	r
currency	test/api/set_trust_line.js	/^    var currency  = '';$/;"	r
currency	test/api/set_trust_line.js	/^    var currency  = 'POP';$/;"	r
currency	test/core/deposit_processor.js	/^        currency: 'XAG'$/;"	r
currency	test/core/outgoing_payment.js	/^      { value: '-1.012', currency: 'XRP', issuer: '' },$/;"	r
currency	test/core/outgoing_payment.js	/^      { value: '0.2', currency: 'XAU', issuer: 'rwjYEBN9DSMnxLzGVEfbqmabDd2sr2kzcz' }$/;"	r
currency	test/core/outgoing_payment.js	/^      { value: '0.45',   currency: 'BTC', issuer: 'rwjYEBN9DSMnxLzGVEfbqmabDd2sr2kzcz' }$/;"	r
currency	test/core/outgoing_payment.js	/^      { value: '0.5', currency: 'XAU', issuer: 'rJMtFJ7hKzvcGyzKp9rN9PrqNPReSsdFv5' },$/;"	r
currency	test/core/outgoing_payment.js	/^      { value: '1',      currency: 'BTC', issuer: 'rJMtFJ7hKzvcGyzKp9rN9PrqNPReSsdFv5' },$/;"	r
currency	test/core/utils.js	/^      { value: '-0.45',   currency: 'BTC', issuer: 'rwjYEBN9DSMnxLzGVEfbqmabDd2sr2kzcz' }$/;"	r
currency	test/core/utils.js	/^      { value: '-1',      currency: 'BTC', issuer: 'rJMtFJ7hKzvcGyzKp9rN9PrqNPReSsdFv5' },$/;"	r
currency	test/core/utils.js	/^      { value: '-1.012', currency: 'XRP', issuer: '' },$/;"	r
currency	test/core/utils.js	/^      { value: 0.2, currency: 'XAU', issuer: 'rwjYEBN9DSMnxLzGVEfbqmabDd2sr2kzcz' }$/;"	r
currency	test/core/utils.js	/^      { value: 0.5, currency: 'XAU', issuer: 'rJMtFJ7hKzvcGyzKp9rN9PrqNPReSsdFv5' },$/;"	r
currency	test/core/utils.js	/^      { value: 2500, currency: 'XRP', issuer: '' }$/;"	r
currency	test/fixtures/incoming_payments.js	/^          currency: 'SWD',$/;"	r
currency	test/fixtures/incoming_payments.js	/^        currency: 'SWD',$/;"	r
currency	test/fixtures/incoming_payments.js	/^      [ { value: '-0.012', currency: 'XRP', issuer: '' },$/;"	r
currency	test/fixtures/incoming_payments.js	/^      currency: 'SWD',$/;"	r
currency	test/fixtures/incoming_payments.js	/^    source_amount: { value: '-0.012', currency: 'XRP', issuer: '' },$/;"	r
currency	test/fixtures/outgoing_payments.js	/^      currency: '$ZMK',$/;"	r
currency	test/fixtures/outgoing_payments.js	/^      currency: 'ZMK',$/;"	r
currency	test/fixtures/ripple_quotes.js	/^        currency: 'USD'$/;"	r
currency	test/fixtures/ripple_rest_integration.js	/^        { value: '-0.013939', currency: 'XRP', issuer: '' },$/;"	r
currency	test/fixtures/ripple_rest_integration.js	/^        { value: '0.001939', currency: 'XRP', issuer: '' },$/;"	r
currency	test/fixtures/ripple_rest_integration.js	/^      destination_amount: { value: '0.001939', currency: 'XRP', issuer: '' },$/;"	r
currency	test/fixtures/ripple_rest_integration.js	/^      source_amount: { value: '0.001939', currency: 'XRP', issuer: '' },$/;"	r
currency	test/fixtures/transactions.js	/^      currency: 'XRP',$/;"	r
currency	test/fixtures/transactions.js	/^    currency: 'USD',$/;"	r
currency	test/http/clear_withdrawals.js	/^      currency: 'XAG',$/;"	r
currency	test/http/enqueue_outgoing_payment.js	/^        currency: '',$/;"	r
currency	test/http/enqueue_outgoing_payment.js	/^        currency: 'XAU',$/;"	r
currency	test/http/fund_hot_wallet.js	/^        currency: 'XRP',$/;"	r
cwd	.settings/launch.json	/^			"cwd": ".",$/;"	f
data	config/policies/no_policy.js	/^      data: data$/;"	r
data	config/policies/no_policy.js	/^    var data = payment.data || {};$/;"	r
data	index.js	/^exports.data  = require(__dirname +'\/lib\/data\/');$/;"	r
data	lib/api/activate_user.js	/^var data = require(__dirname+'\/..\/data\/');$/;"	r
data	lib/api/clear_withdrawal.js	/^var data = require(__dirname+'\/..\/data\/');$/;"	r
data	lib/api/deactivate_user.js	/^var data = require(__dirname+'\/..\/data\/');$/;"	r
data	lib/api/finalize_deposit.js	/^var data = require(__dirname+'\/..\/data\/');$/;"	r
data	lib/api/list_cleared.js	/^var data = require(__dirname+'\/..\/data\/');$/;"	r
data	lib/api/list_failed_payments.js	/^var data = require(__dirname+'\/..\/data\/');$/;"	r
data	lib/api/list_incoming_payments.js	/^var data = require(__dirname+'\/..\/data\/');$/;"	r
data	lib/api/list_queued_deposits.js	/^var data = require(__dirname+'\/..\/data\/');$/;"	r
data	lib/api/list_queued_withdrawals.js	/^var data = require(__dirname+'\/..\/data\/');$/;"	r
data	lib/api/list_user_external_accounts.js	/^var data = require(__dirname+'\/..\/data\/');$/;"	r
data	lib/api/list_users.js	/^var data = require(__dirname+'\/..\/data\/');$/;"	r
data	lib/api/record_deposit.js	/^        data: options.data$/;"	r
data	lib/api/record_deposit.js	/^var data = require(__dirname+'\/..\/data\/');$/;"	r
data	lib/api/register_user.js	/^var data = require(__dirname+'\/..\/data\/');$/;"	r
data	lib/api/retry_failed_payment.js	/^var data = require(__dirname+'\/..\/data\/');$/;"	r
data	lib/api/set_hot_wallet.js	/^ * @required config, data$/;"	r
data	lib/api/set_hot_wallet.js	/^var data = require(__dirname+'\/..\/data\/');$/;"	r
data	lib/core/outgoing_payment.js	/^          _this.record.data = error;$/;"	r
data	lib/data/controllers/external_accounts.js	/^      var data = external_account.toJSON();$/;"	r
data	lib/data/controllers/ripple_addresses.js	/^      var data = ripple_address.toJSON();$/;"	r
data	lib/data/controllers/users.js	/^              user.data = JSON.parse(user.data);$/;"	r
data	lib/data/controllers/users.js	/^          updateOpts.data = JSON.stringify(updateOpts.data);$/;"	r
data	lib/data/controllers/users.js	/^          updateOpts.data = user.data;$/;"	r
data	lib/data/controllers/users.js	/^          user.data = JSON.parse(user.data);$/;"	r
data	lib/data/controllers/users.js	/^        user.data = JSON.parse(user.data);$/;"	r
data	lib/data/controllers/users.js	/^      opts.data = JSON.stringify(opts.data);$/;"	r
data	lib/data/migrations/20131216193924-users.js	/^    data: {type: 'string'}$/;"	r
data	lib/data/models/external_accounts.js	/^    data: function () {$/;"	r
data	lib/data/models/external_accounts.js	/^    data: function (value) {$/;"	r
data	lib/data/models/external_accounts.js	/^  data: {$/;"	r
data	lib/data/models/external_transactions.js	/^    data: function () {$/;"	r
data	lib/data/models/external_transactions.js	/^    data: function (value) {$/;"	r
data	lib/data/models/external_transactions.js	/^  data: {$/;"	r
data	lib/data/models/kyc_data.js	/^    data: function () {$/;"	r
data	lib/data/models/kyc_data.js	/^    data: function (value) {$/;"	r
data	lib/data/models/ripple_addresses.js	/^        data: data$/;"	r
data	lib/data/models/ripple_addresses.js	/^      var data = this.data || {};$/;"	r
data	lib/data/models/ripple_addresses.js	/^    data: function () {$/;"	r
data	lib/data/models/ripple_addresses.js	/^    data: function (value) {$/;"	r
data	lib/data/models/ripple_addresses.js	/^  data: {$/;"	r
data	lib/data/models/ripple_transactions.js	/^    data: function () {$/;"	r
data	lib/data/models/ripple_transactions.js	/^    data: function (value) {$/;"	r
data	lib/data/models/ripple_transactions.js	/^  data: {$/;"	r
data	lib/data/models/users.js	/^  data: Sequelize.STRING,$/;"	r
data	lib/http/controllers/api/record_deposit.js	/^    data: req.body.data$/;"	r
data	lib/http/controllers/resources/ripple_transactions.js	/^var data = require(__dirname + '\/..\/..\/..\/..\/lib\/data');$/;"	r
data	processes/withdrawals.js	/^          data: data$/;"	r
data	processes/withdrawals.js	/^        var data   = incomingPayment.data || {};$/;"	r
data	test/fixtures/outgoing_payments.js	/^      data: null$/;"	r
data	test/http/register_user.js	/^var data = require(__dirname+'\/..\/..\/lib\/data\/');$/;"	r
dataValues	test/fixtures/incoming_payments.js	/^    dataValues: {$/;"	r
database	index.js	/^exports.database  = require(__dirname +'\/lib\/data\/sequelize.js');$/;"	r
database	lib/data/database.json	/^    "database": "",$/;"	f
database	lib/data/database.json	/^    "database": "gatewayd_db",$/;"	f
database	lib/data/database.json	/^    "database": "gatewayd_db_test",$/;"	f
database	lib/data/models/bridges.js	/^var database = require(__dirname+'\/..\/sequelize.js');$/;"	r
database	lib/data/models/configs.js	/^var database = require(__dirname+'\/..\/sequelize.js');$/;"	r
database	lib/data/models/policies.js	/^var database = require(__dirname+'\/..\/sequelize.js');$/;"	r
date	test/fixtures/incoming_payments.js	/^    date: 471742480,$/;"	r
db	lib/data/models/external_accounts.js	/^var db = require('..\/sequelize.js');$/;"	r
db	lib/data/models/external_transactions.js	/^var db = require('..\/sequelize.js');$/;"	r
db	lib/data/models/gateway_transactions.js	/^var db = require('..\/sequelize.js');$/;"	r
db	lib/data/models/kyc_data.js	/^var db = require('..\/sequelize');$/;"	r
db	lib/data/models/ripple_addresses.js	/^var db                  = require('..\/sequelize');$/;"	r
db	lib/data/models/ripple_transactions.js	/^var db          = require('..\/sequelize');$/;"	r
db	lib/data/models/users.js	/^var db = require('..\/sequelize.js');$/;"	r
db	lib/data/sequelize.js	/^var db = new Sequelize(config.get('DATABASE_NAME'), config.get('DATABASE_USER'), config.get('DATABASE_PASSWORD'), dbOptions);$/;"	r
db-migrate	lib/data/package.json	/^    "db-migrate": "0.6.4",$/;"	f
db-migrate	package.json	/^    "db-migrate": "^0.6.4",$/;"	f
dbConfig	config/environment.js	/^var dbConfig = DBConfigFile[nconf.get('NODE_ENV')];$/;"	r
dbOptions	lib/data/sequelize.js	/^var dbOptions = {$/;"	r
dbRippleTxSeed	lib/cli/db_ripple_tx_seed.js	/^function dbRippleTxSeed(howMany) {$/;"	r
dbm	lib/data/migrations/20140731062106-create-policies.js	/^var dbm = require('db-migrate');$/;"	r
dbm	lib/data/migrations/20140802043032-user-id-not-required-external-account.js	/^var dbm = require('db-migrate');$/;"	r
dbm	lib/data/migrations/20140819202523-create-gateway-transactions.js	/^var dbm = require('db-migrate');$/;"	r
dbm	lib/data/migrations/20140918033326-create-bridges.js	/^var dbm = require('db-migrate');$/;"	r
dbm	lib/data/migrations/20140930174005-rename-external-accounts-columns.js	/^var dbm = require('db-migrate');$/;"	r
dbm	lib/data/migrations/20140930223803-name-not-required-external-accounts.js	/^var dbm = require('db-migrate');$/;"	r
dbm	lib/data/migrations/20141015171506-create-configs.js	/^var dbm = require('db-migrate');$/;"	r
dbm	lib/data/migrations/20141110220308-add-direction-to-ripple-transactions.js	/^var dbm = require('db-migrate');$/;"	r
dbm	lib/data/migrations/20141111212415-add-invoice-id-to-external-transactions.js	/^var dbm = require('db-migrate');$/;"	r
dbm	lib/data/migrations/20141114205150-remove-issuer-requirement.js	/^var dbm = require('db-migrate');$/;"	r
dbm	lib/data/migrations/20141117200216-add-to-account-id-from-account-id-to-external-transactions.js	/^var dbm = require('db-migrate');$/;"	r
dbm	lib/data/migrations/20141212183505-add-source-and-destination-amounts-to-external-xactions.js	/^var dbm = require('db-migrate');$/;"	r
dbm	lib/data/migrations/20141212214904-add-destination-account-id-and-source-account-id-external-xactions.js	/^var dbm = require('db-migrate');$/;"	r
dbm	lib/data/migrations/20141212230605-make-amount-and-currency-optional-external-xfer.js	/^var dbm = require('db-migrate');$/;"	r
dbm	lib/data/migrations/20141213010808-create-memos-column-external-xfer.js	/^var dbm = require('db-migrate');$/;"	r
dbm	lib/data/migrations/20150102083405-add-direction-and-uid-to-gateway-transactions.js	/^var dbm = require('db-migrate');$/;"	r
dbm	lib/data/migrations/20150107040036-remove-from-amount-requirement.js	/^var dbm = require('db-migrate');$/;"	r
dbm	lib/data/migrations/20150108211416-remove-to--requirement.js	/^var dbm = require('db-migrate');$/;"	r
dbm	lib/data/migrations/20150127175005-drop-transaction-hash-constraint.js	/^var dbm = require('db-migrate');$/;"	r
deactivateUser	lib/api/deactivate_user.js	/^function deactivateUser(userId, fn){$/;"	r
deactivateUser	lib/cli/deactivate_user.js	/^function deactivateUser(userId) {$/;"	r
debug	lib/processes/supervisor.js	/^    var debug = config.get('NODE_DEBUG');$/;"	r
debugPort	lib/processes/supervisor.js	/^            var debugPort = 5858 + processNum * 1010;$/;"	r
default	lib/data/migrations/20131216193924-users.js	/^    admin: { type: 'boolean', default: false },$/;"	r
default	lib/data/migrations/20131219233339-ripple-addresses.js	/^    managed: { type: 'boolean', default: false, notNull: true},$/;"	r
default	lib/data/migrations/20141015171506-create-configs.js	/^      default: false$/;"	r
defaultValue	lib/data/migrations/20140428180703-add-active-boolean-to-users.js	/^    defaultValue: false$/;"	r
defaultValue	lib/data/migrations/20140516211449-add-client-resource-id-to-ripple-transactions.js	/^    defaultValue: false$/;"	r
defaultValue	lib/data/migrations/20140516211759-add-state-to-ripple-transactions.js	/^    defaultValue: false$/;"	r
defaultValue	lib/data/migrations/20141103190741-add-memo-column-to-ripple-transactions.js	/^    defaultValue: false$/;"	r
defaultValue	lib/data/models/configs.js	/^    defaultValue: false$/;"	r
defaultValue	lib/data/models/users.js	/^    defaultValue: false$/;"	r
defaults	lib/data/pagination_util.js	/^    defaults = {$/;"	r
defaults	lib/data/pagination_util.js	/^    var defaults, sortParams, where, gtlt;$/;"	r
delete	lib/data/controllers/external_accounts.js	/^  api.delete = function(opts, fn){$/;"	r
delete	lib/data/controllers/external_transactions.js	/^  api.delete = function(opts, fn){$/;"	r
delete	lib/data/controllers/ripple_addresses.js	/^  api.delete = function(opts, fn){$/;"	r
delete	lib/data/controllers/ripple_transactions.js	/^  api.delete = function(opts, fn){$/;"	r
delete('/'	lib/http/routers/resources_router.js	/^  router.delete('\/' + resource + '\/:id', controllers[resource].destroy);$/;"	r
delete('/v1/currencies/usd'	test/http/remove_currency.js	/^      .delete('\/v1\/currencies\/usd')$/;"	r
delete('/v1/external_accounts/'	test/http/crud/external_accounts.js	/^      .delete('\/v1\/external_accounts\/'+externalAccountCreated.id)$/;"	r
delete('/v1/external_transactions/'	test/http/crud/external_transactions.js	/^      .delete('\/v1\/external_transactions\/'+externalTransactionCreated.id)$/;"	r
delete('/v1/polcies/'	test/http/crud/policies.js	/^      .delete('\/v1\/polcies\/'+policyCreated.id)$/;"	r
delete('/v1/ripple_addresses/'	test/http/crud/ripple_addresses.js	/^      .delete('\/v1\/ripple_addresses\/'+rippleAddressCreated.id)$/;"	r
delete('/v1/ripple_transactions/'	test/http/crud/ripple_transactions.js	/^      .delete('\/v1\/ripple_transactions\/'+rippleTransactionCreated.id)$/;"	r
dependencies	lib/data/package.json	/^  "dependencies": {$/;"	f
dependencies	package.json	/^  "dependencies": {$/;"	f
deposit	lib/api/clear_withdrawal.js	/^      deposit: false$/;"	r
deposit	lib/api/list_queued_deposits.js	/^    deposit: true,$/;"	r
deposit	lib/api/record_deposit.js	/^        deposit: true,$/;"	r
deposit	lib/core/deposit_processor.js	/^  this.deposit = deposit;$/;"	r
deposit	lib/core/withdrawal_processor.js	/^              deposit: false,$/;"	r
deposit	lib/data/controllers/external_transactions.js	/^      deposit: false,$/;"	r
deposit	lib/data/migrations/20131216232955-external-transactions.js	/^    deposit: { type: 'boolean', notNull: true },$/;"	r
deposit	lib/data/models/external_transactions.js	/^  deposit: {$/;"	r
deposit	processes/deposits.js	/^      deposit: true,$/;"	r
deposit	processes/policy_engine.js	/^    deposit: true,$/;"	r
deposit	test/core/deposit_processor.js	/^        deposit = depositRecord;$/;"	r
deposit	test/core/deposit_processor.js	/^var deposit;$/;"	r
deposit	test/fixtures/transactions.js	/^    deposit: true$/;"	r
deposit	test/http/clear_withdrawals.js	/^      deposit: false $/;"	r
depositProcessor	processes/deposits.js	/^      var depositProcessor = new DepositProcessor(deposit);$/;"	r
depositProcessor	test/core/deposit_processor.js	/^        depositProcessor = new DepositProcessor(deposit);$/;"	r
depositProcessor	test/core/deposit_processor.js	/^    var depositProcessor;$/;"	r
destination	Gruntfile.js	/^          destination: '.\/doc\/jsdoc'$/;"	r
destination	lib/api/ripple_quotes.js	/^    destination: options.destination$/;"	r
destination	lib/api/ripple_quotes.js	/^    destination: {$/;"	r
destination	lib/http/controllers/api/ripple_quotes_incoming.js	/^    destination: {$/;"	r
destination	lib/http/controllers/api/ripple_quotes_outgoing.js	/^    destination: {$/;"	r
destination	test/api/ripple_quotes.js	/^          destination: {$/;"	r
destination	test/fixtures/ripple_quotes.js	/^      destination: {$/;"	r
destinationAddress	lib/api/create_ripple_payment.js	/^      destinationAddress = address;$/;"	r
destinationAddress	lib/api/create_ripple_payment.js	/^      return _recordTransaction(options, destinationAddress, sourceAddress);$/;"	r
destinationAddress	lib/api/enqueue_outgoing_payment.js	/^                _recordTransaction(options, destinationAddress, senderAddress)$/;"	r
destinationAmount	lib/core/incoming_payment.js	/^    var destinationAmount =  utils.parseDestinationBalanceChanges(payment.destination_balance_changes);$/;"	r
destinationChange	lib/core/outgoing_payment.js	/^    var destinationChange = utils.parseDestinationBalanceChanges(payment.payment.destination_balance_changes);$/;"	r
destinationRecord	lib/api/record_incoming_payment.js	/^    destinationRecord: getHostedAddress(incomingPayment.destination_tag)$/;"	r
destinationTag	test/fixtures/outgoing_payments.js	/^      destinationTag: 'a123'$/;"	r
destinationTag	test/http/enqueue_outgoing_payment.js	/^        destinationTag: 'steven'$/;"	r
destinationTag	test/http/enqueue_outgoing_payment.js	/^        destinationTag: 5555,$/;"	r
destination_account	lib/api/fund_cold_wallet.js	/^      destination_account: config.get('COLD_WALLET'),$/;"	r
destination_account	lib/api/fund_hot_wallet.js	/^      destination_account: config.get('HOT_WALLET').address,$/;"	r
destination_account	lib/api/issue_currency.js	/^        destination_account: config.get('HOT_WALLET').address,$/;"	r
destination_account	lib/api/refund_cold_wallet.js	/^      destination_account: config.get('COLD_WALLET'),$/;"	r
destination_account	lib/api/register_user.js	/^                  destination_account: userOpts.address,$/;"	r
destination_account	test/api/refund_cold_wallet.js	/^      .yields(null, {result: 'tesSUCCESS', destination_account: walletsFixture.COLD_WALLET, source_account: walletsFixture.HOT_WALLET.address, destination_amount: {currency: 'SWD', amount: 1}});$/;"	r
destination_account	test/core/incoming_payment.js	/^    invalidPayment.destination_account = 'r123';$/;"	r
destination_account	test/fixtures/incoming_payments.js	/^    destination_account: 'rMinhWxZz4jeHoJGyddtmwg6dWhyqQKtJz',$/;"	r
destination_account	test/fixtures/ripple_rest_integration.js	/^      destination_account: 'rp4u5gEskM8DtBZvonZwbu6dspgVdeAGM6',$/;"	r
destination_account	test/fixtures/transactions.js	/^    destination_account: 'rDmSZbgLbw7qkkgDXMWoiSQX7VZ6KknWcL',$/;"	r
destination_account_id	lib/api/create_external_payment.js	/^    destination_account_id: options.destination_account_id,$/;"	r
destination_account_id	lib/data/models/external_transactions.js	/^  destination_account_id: {$/;"	r
destination_account_id	test/fixtures/transactions.js	/^    destination_account_id: 234,$/;"	r
destination_address	test/api/create_external_payment.js	/^        destination_address  : 'acct:gateway',$/;"	r
destination_address	test/api/create_external_payment.js	/^        destination_address  : 'acct:me@stevenzeiler.com',$/;"	r
destination_address	test/api/create_gateway_transaction.js	/^            destination_address  : 'acct:gateway@zenterp.co',$/;"	r
destination_address	test/api/create_gateway_transaction.js	/^            destination_address  : 'acct:me@stevenzeiler.com',$/;"	r
destination_address	test/api/create_gateway_transaction.js	/^            destination_address  : 'rfemvFrpCAPc4hUa1v8mPRYdmaCqR1iFpe',$/;"	r
destination_address	test/api/create_ripple_payment.js	/^        destination_address  : 'r4EwBWxrx5HxYRyisfGzMto3AT8FZiYdWk',$/;"	r
destination_address_id	lib/data/migrations/20140918033326-create-bridges.js	/^    destination_address_id: {$/;"	r
destination_address_id	lib/data/models/bridges.js	/^  destination_address_id: {$/;"	r
destination_amount	lib/api/create_external_payment.js	/^    destination_amount: options.destination_amount,$/;"	r
destination_amount	lib/api/fund_cold_wallet.js	/^      destination_amount: {$/;"	r
destination_amount	lib/api/fund_hot_wallet.js	/^      destination_amount: {$/;"	r
destination_amount	lib/api/issue_currency.js	/^        destination_amount: {$/;"	r
destination_amount	lib/api/refund_cold_wallet.js	/^      destination_amount: {$/;"	r
destination_amount	lib/api/register_user.js	/^                  destination_amount: {$/;"	r
destination_amount	lib/core/incoming_payment.js	/^      destination_amount   :  destinationAmount,$/;"	r
destination_amount	lib/data/models/external_transactions.js	/^    destination_amount: function () {$/;"	r
destination_amount	lib/data/models/external_transactions.js	/^  destination_amount: {$/;"	r
destination_amount	test/api/create_external_payment.js	/^        destination_amount   : 10,$/;"	r
destination_amount	test/api/create_gateway_transaction.js	/^            destination_amount   : 100,$/;"	r
destination_amount	test/api/create_gateway_transaction.js	/^            destination_amount   : 15$/;"	r
destination_amount	test/api/create_ripple_payment.js	/^        destination_amount   : 10,$/;"	r
destination_amount	test/api/record_incoming_payment.js	/^      destination_amount: {$/;"	r
destination_amount	test/api/refund_cold_wallet.js	/^      .yields(null, {result: 'tesSUCCESS', destination_account: walletsFixture.COLD_WALLET, source_account: walletsFixture.HOT_WALLET.address, destination_amount: {currency: 'SWD', amount: 1}});$/;"	r
destination_amount	test/fixtures/ripple_rest_integration.js	/^      destination_amount: { value: '0.001939', currency: 'XRP', issuer: '' },$/;"	r
destination_amount	test/fixtures/transactions.js	/^    destination_amount: 5.22,$/;"	r
destination_amount	test/fixtures/transactions.js	/^    destination_amount: {$/;"	r
destination_balance_changes	test/core/outgoing_payment.js	/^    validatedPayment.destination_balance_changes = [$/;"	r
destination_balance_changes	test/core/utils.js	/^    destination_balance_changes = [$/;"	r
destination_balance_changes	test/fixtures/ripple_rest_integration.js	/^      destination_balance_changes: [$/;"	r
destination_currency	lib/api/create_external_payment.js	/^    destination_currency: options.destination_currency,$/;"	r
destination_currency	lib/data/models/external_transactions.js	/^  destination_currency: {$/;"	r
destination_currency	test/api/create_external_payment.js	/^        destination_currency : 'BTC',$/;"	r
destination_currency	test/api/create_gateway_transaction.js	/^            destination_currency : 'BTC',$/;"	r
destination_currency	test/api/create_gateway_transaction.js	/^            destination_currency : 'XAG',$/;"	r
destination_currency	test/api/create_ripple_payment.js	/^        destination_currency : 'BTC',$/;"	r
destination_currency	test/fixtures/transactions.js	/^    destination_currency: 'GBP',$/;"	r
destination_tag	lib/api/refund_cold_wallet.js	/^      destination_tag: '0'$/;"	r
destination_tag	lib/core/incoming_payment.js	/^      destination_tag      :  _.isEmpty(payment.destination_tag) ? undefined : payment.destination_tag,$/;"	r
destination_tag	lib/core/outgoing_payment.js	/^            payment.destination_tag = address.tag.toString();$/;"	r
destination_tag	test/api/create_ripple_payment.js	/^        destination_tag      : 788833,$/;"	r
destination_tag	test/api/record_incoming_payment.js	/^      destination_tag: 'a123',$/;"	r
destination_tag	test/api/record_incoming_payment.js	/^      destination_tag: 123,$/;"	r
destination_tag	test/fixtures/incoming_payments.js	/^    destination_tag: '',$/;"	r
destination_tag	test/fixtures/incoming_payments.js	/^    destination_tag: undefined,$/;"	r
destination_tag	test/fixtures/ripple_rest_integration.js	/^      destination_tag: '',$/;"	r
destination_tag	test/fixtures/ripple_rest_integration.js	/^      destination_tag: '0',$/;"	r
destination_tag	test/fixtures/transactions.js	/^    destination_tag: '0'$/;"	r
destroy	lib/http/controllers/resources/bridges.js	/^  destroy: destroy$/;"	r
destroy	lib/http/controllers/resources/bridges.js	/^function destroy(request, response) {$/;"	r
destroy	lib/http/controllers/resources/external_accounts.js	/^  destroy: destroy$/;"	r
destroy	lib/http/controllers/resources/external_accounts.js	/^function destroy(request, response) {$/;"	r
destroy	lib/http/controllers/resources/external_transactions.js	/^  destroy: destroy$/;"	r
destroy	lib/http/controllers/resources/external_transactions.js	/^function destroy(request, response) {$/;"	r
destroy	lib/http/controllers/resources/gateway_transactions.js	/^  destroy: destroy$/;"	r
destroy	lib/http/controllers/resources/gateway_transactions.js	/^function destroy(request, response) {$/;"	r
destroy	lib/http/controllers/resources/policies.js	/^  destroy: function(request, response) {$/;"	r
destroy	lib/http/controllers/resources/ripple_addresses.js	/^  destroy: destroy$/;"	r
destroy	lib/http/controllers/resources/ripple_addresses.js	/^function destroy(request, response) {$/;"	r
destroy	lib/http/controllers/resources/ripple_transactions.js	/^  destroy: destroy$/;"	r
destroy	lib/http/controllers/resources/ripple_transactions.js	/^function destroy(request, response) {$/;"	r
destroy	lib/http/controllers/resources/users.js	/^  destroy: destroy$/;"	r
destroy	lib/http/controllers/resources/users.js	/^function destroy(request, response) {$/;"	r
determinePolicy	lib/core/policy_engine.js	/^PolicyEngine.prototype.determinePolicy = function determinePolicy(payment) {$/;"	r
devDependencies	lib/data/package.json	/^  "devDependencies": {$/;"	f
devDependencies	package.json	/^  "devDependencies": {$/;"	f
development	lib/data/database.json	/^  "development": {$/;"	f
dialect	lib/data/database.json	/^    "dialect":"postgres",$/;"	f
dialect	lib/data/database.json	/^    "dialect":"sqlite",$/;"	f
dialect	lib/data/sequelize.js	/^  dialect: config.get('DATABASE_DIALECT'),$/;"	r
direction	config/policies/bridge_policy.js	/^      direction: 'to-ripple'$/;"	r
direction	config/policies/invoice_policy.js	/^      direction: 'to-ripple' $/;"	r
direction	lib/api/create_gateway_transaction.js	/^            direction: direction,$/;"	r
direction	lib/api/create_gateway_transaction.js	/^          input.direction = 'from-ripple';$/;"	r
direction	lib/api/create_gateway_transaction.js	/^          input.direction = 'incoming';$/;"	r
direction	lib/api/create_gateway_transaction.js	/^      output.direction = 'outgoing';$/;"	r
direction	lib/api/create_gateway_transaction.js	/^      output.direction = 'to-ripple';$/;"	r
direction	lib/api/create_gateway_transaction.js	/^    var direction = options.direction;$/;"	r
direction	lib/api/create_ripple_payment.js	/^    direction: options.direction,$/;"	r
direction	lib/api/enqueue_outgoing_payment.js	/^    direction: 'to-ripple',$/;"	r
direction	lib/api/record_incoming_payment.js	/^        direction: 'from-ripple'$/;"	r
direction	lib/api/record_incoming_payment.js	/^      direction: 'from-ripple'$/;"	r
direction	lib/cli/db_ripple_tx_seed.js	/^      direction: direction[chance.integer({min: 0, max: 1})]$/;"	r
direction	lib/cli/db_ripple_tx_seed.js	/^  var direction = ['to-ripple', 'from-ripple'];$/;"	r
direction	lib/core/deposit_processor.js	/^              direction: 'to-ripple'$/;"	r
direction	lib/data/migrations/20140918033326-create-bridges.js	/^    direction: {$/;"	r
direction	lib/data/models/bridges.js	/^  direction: {$/;"	r
direction	lib/data/models/gateway_transactions.js	/^  direction: {$/;"	r
direction	lib/data/models/ripple_transactions.js	/^  direction: {$/;"	r
direction	processes/outgoing.js	/^      direction: 'to-ripple'$/;"	r
direction	test/api/create_external_payment.js	/^        direction            : 'incoming',$/;"	r
direction	test/api/create_external_payment.js	/^        direction            : 'outgoing',$/;"	r
direction	test/api/create_gateway_transaction.js	/^          direction: 'from-ripple',$/;"	r
direction	test/api/create_gateway_transaction.js	/^          direction: 'to-ripple',$/;"	r
direction	test/api/create_ripple_payment.js	/^        direction            : 'from-ripple',$/;"	r
direction	test/api/create_ripple_payment.js	/^        direction            : 'to-ripple',$/;"	r
direction	test/api/retry_failed_payment.js	/^      direction: 'from-ripple'$/;"	r
direction	test/fixtures/incoming_payments.js	/^      direction        : 'from-ripple',$/;"	r
direction	test/fixtures/incoming_payments.js	/^    direction: 'incoming',$/;"	r
direction	test/fixtures/outgoing_payments.js	/^      direction: 'from-ripple'$/;"	r
direction	test/fixtures/outgoing_payments.js	/^      direction: 'from-ripple',$/;"	r
direction	test/fixtures/ripple_rest_integration.js	/^      direction: 'outgoing',$/;"	r
direction	test/fixtures/transactions.js	/^    direction: 'from-ripple'$/;"	r
direction	test/models/gateway_transactions.js	/^      direction: 'to-ripple',$/;"	r
direction	test/models/ripple_associations.js	/^            direction: 'to-ripple',$/;"	r
direction	test/models/ripple_transactions.js	/^        direction: 'from-ripple'$/;"	r
direction	test/models/ripple_transactions.js	/^        direction: 'to-ripple'$/;"	r
direction	test/models/ripple_transactions.js	/^      direction: 'from-ripple'$/;"	r
direction	test/models/ripple_transactions.js	/^      direction: 'from-ripple',$/;"	r
direction	test/models/ripple_transactions.js	/^      direction: 'to-ripple'$/;"	r
direction	test/models/ripple_transactions.js	/^      direction: 'up-and-up'$/;"	r
direction	test/models/ripple_transactions.js	/^      direction: [ 'Validation isIn failed: direction' ]$/;"	r
direction	test/utils/db_ripple_seed.js	/^      direction: 'to-ripple'$/;"	r
disabledFeatureFromJson	test/fixtures/features.json	/^  "disabledFeatureFromJson": false$/;"	f
disconnect	lib/processes/supervisor.js	/^pm2.disconnect = Promise.promisify(pm2.disconnect);$/;"	r
dist	Gruntfile.js	/^      dist : {$/;"	r
distinctFilter	scripts/jsawk	/^  function distinctFilter(array, callback){$/;"	f
doesApply	config/policies/bridge_policy.js	/^  doesApply: function(payment) {$/;"	r
doesApply	config/policies/invoice_policy.js	/^  doesApply: function(payment) {$/;"	r
doesApply	config/policies/no_policy.js	/^  doesApply: function() {$/;"	r
doesApply	config/policies/user_policy.js	/^  doesApply: function(payment) {$/;"	r
domain	lib/http/controllers/public/build_ripple_txt.js	/^var domain = gateway.config.get('DOMAIN');$/;"	r
domain-supervisor	package.json	/^    "domain-supervisor": "^0.3.0",$/;"	f
down	lib/data/migrations/20131216193924-users.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20131216232955-external-transactions.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20131216233400-ripple-transactions.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20131217004626-gateway-accounts.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20131219233339-ripple-addresses.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20140119011932-external-accounts.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20140221022445-add-unique-dual-index.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20140416175350-add-uid-to-all.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20140418123552-add-data-json-to-all.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20140418131831-create-kyc-data.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20140428180703-add-active-boolean-to-users.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20140516211449-add-client-resource-id-to-ripple-transactions.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20140516211759-add-state-to-ripple-transactions.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20140522193356-add-external-transaction-id-to-ripple-transactions.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20140731062106-create-policies.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20140802043032-user-id-not-required-external-account.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20140819202523-create-gateway-transactions.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20140918033326-create-bridges.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20140930174005-rename-external-accounts-columns.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20140930223803-name-not-required-external-accounts.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20141015171506-create-configs.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20141103190730-add-invoice-id-column-to-ripple-transactions.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20141103190741-add-memo-column-to-ripple-transactions.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20141110220308-add-direction-to-ripple-transactions.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20141111212415-add-invoice-id-to-external-transactions.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20141114205150-remove-issuer-requirement.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20141117200216-add-to-account-id-from-account-id-to-external-transactions.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20141212183505-add-source-and-destination-amounts-to-external-xactions.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20141212214904-add-destination-account-id-and-source-account-id-external-xactions.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20141212230605-make-amount-and-currency-optional-external-xfer.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20141213010808-create-memos-column-external-xfer.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20150102083405-add-direction-and-uid-to-gateway-transactions.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20150107040036-remove-from-amount-requirement.js	/^exports.down = function(db, callback) {$/;"	r
down	lib/data/migrations/20150108211416-remove-to--requirement.js	/^exports.down = function(db, callback) {$/;"	r
driver	lib/data/database.json	/^    "driver": "pg",$/;"	f
driver	lib/data/database.json	/^    "driver": "sqlite3",$/;"	f
ejs	package.json	/^    "ejs": "",$/;"	f
enabledFeatureFromJson	test/fixtures/features.json	/^  "enabledFeatureFromJson": true,$/;"	f
enqueueOutgoingPayment	lib/api/enqueue_outgoing_payment.js	/^function enqueueOutgoingPayment(options) {$/;"	r
enqueueOutgoingPayment	lib/cli/enqueue_outgoing_payment.js	/^function enqueueOutgoingPayment(address, amount, currency, issuer){$/;"	r
enqueueOutgoingPayment	lib/http/controllers/api/enqueue_outgoing_payment.js	/^var enqueueOutgoingPayment = require(__dirname+'\/..\/..\/..\/api\/enqueue_outgoing_payment.js');$/;"	r
enqueueOutgoingPayment	test/api/enqueue_outgoing_payment.js	/^var enqueueOutgoingPayment = require(__dirname+'\/..\/..\/lib\/api\/enqueue_outgoing_payment.js');$/;"	r
env	.settings/launch.json	/^			"env": { }$/;"	f
env	Gruntfile.js	/^        env: {$/;"	r
error	config/policies/no_policy.js	/^    data.error = 'no applicable policy found';$/;"	r
error	lib/data/controllers/external_accounts.js	/^          var error = JSON.parse(JSON.stringify(err));$/;"	r
error	lib/http/controllers/api/clear_withdrawal.js	/^          error: error$/;"	r
error	lib/http/controllers/api/clear_withdrawal.js	/^          error: {$/;"	r
error	lib/http/controllers/api/enqueue_outgoing_payment.js	/^            error: error$/;"	r
error	lib/http/controllers/api/fund_hot_wallet.js	/^      res.send(500, { success: false, error: error });$/;"	r
error	lib/http/controllers/api/set_key.js	/^        error: error$/;"	r
error	lib/http/controllers/resources/bridges.js	/^          error: 'bridge not found'$/;"	r
error	lib/http/controllers/resources/bridges.js	/^        error: error$/;"	r
error	lib/http/controllers/resources/external_accounts.js	/^          error: 'externalAccount not found'$/;"	r
error	lib/http/controllers/resources/external_accounts.js	/^        error: error$/;"	r
error	lib/http/controllers/resources/external_transactions.js	/^            error: 'externalTransaction not found'$/;"	r
error	lib/http/controllers/resources/external_transactions.js	/^          error: err$/;"	r
error	lib/http/controllers/resources/external_transactions.js	/^          error: error$/;"	r
error	lib/http/controllers/resources/external_transactions.js	/^        error: err$/;"	r
error	lib/http/controllers/resources/gateway_transactions.js	/^          error: 'gatewayTransaction not found'$/;"	r
error	lib/http/controllers/resources/gateway_transactions.js	/^        error: error$/;"	r
error	lib/http/controllers/resources/policies.js	/^              error: 'policy not found' $/;"	r
error	lib/http/controllers/resources/policies.js	/^            error: 'policy not found' $/;"	r
error	lib/http/controllers/resources/policies.js	/^            error: 'policy not found'$/;"	r
error	lib/http/controllers/resources/policies.js	/^          error: error$/;"	r
error	lib/http/controllers/resources/ripple_addresses.js	/^          error: 'rippleAddress not found'$/;"	r
error	lib/http/controllers/resources/ripple_addresses.js	/^        error: error$/;"	r
error	lib/http/controllers/resources/ripple_transactions.js	/^            error: 'rippleTransaction not found'$/;"	r
error	lib/http/controllers/resources/ripple_transactions.js	/^          error: error$/;"	r
error	lib/http/controllers/resources/users.js	/^          error: 'user not found'$/;"	r
error	lib/http/controllers/resources/users.js	/^        error: err$/;"	r
error	lib/http/controllers/resources/users.js	/^        error: error$/;"	r
error	processes/withdrawals.js	/^        data.error = error;$/;"	r
error	test/api/get_trust_lines.js	/^      .yields({success: false, error: 'Parameter is not a valid Ripple address: account', error_type: 'invalid_request'}, null);$/;"	r
error	test/api/refund_cold_wallet.js	/^      .yields({success: false, error: 'tecPATH_DRY', error_type: 'transaction', message: 'Path could not send partial amount. Please ensure that the source_address has sufficient funds (in the source_amount currency, if specified) to execute this transaction.'}, null);$/;"	r
error	test/api/set_trust_line.js	/^    rippleRestStub.yields({success: false, error: 'Parameter missing: trustline.currency', error_type: 'invalid_request'}, null);$/;"	r
error	test/core/outgoing_payment.js	/^    var error = new Error('socket hang up');$/;"	r
error	test/errors/enqueue_outgoing_payment.js	/^    var error = new EnqueueOutgoingPaymentError();$/;"	r
error	test/errors/enqueue_outgoing_payment.js	/^    var error = new EnqueueOutgoingPaymentError({$/;"	r
error	test/fixtures/ripple_rest_integration.js	/^        error: 'Cannot connect to rippled'$/;"	r
error	test/fixtures/ripple_rest_integration.js	/^        error: 'No paths found',$/;"	r
error	test/fixtures/ripple_rest_integration.js	/^        error: 'Rippled Busy',$/;"	r
error	test/fixtures/ripple_rest_integration.js	/^        error: 'Transaction not found',$/;"	r
error	test/fixtures/ripple_rest_integration.js	/^      error: 'terINSUF_FEE_B'$/;"	r
errorResponse	lib/data/utils.js	/^  errorResponse: errorResponse$/;"	r
errorResponse	lib/data/utils.js	/^function errorResponse (res) {		$/;"	r
error_type	lib/http/response_handler.js	/^    error_type: ErrorType.invalidRequest$/;"	r
error_type	lib/http/response_handler.js	/^    error_type: ErrorType.server$/;"	r
error_type	lib/http/response_handler.js	/^    error_type: ErrorType.transaction$/;"	r
error_type	test/api/fund_hot_wallet.js	/^      .yields({error: 'Invalid secret', error_type: 'transaction', success: false}, null);$/;"	r
error_type	test/fixtures/ripple_rest_integration.js	/^        error_type: 'connection',$/;"	r
error_type	test/fixtures/ripple_rest_integration.js	/^        error_type: 'invalid_request',$/;"	r
error_type	test/fixtures/ripple_rest_integration.js	/^        error_type: 'server'$/;"	r
error_type	test/fixtures/ripple_rest_integration.js	/^        error_type: 'transaction',$/;"	r
error_type	test/fixtures/ripple_rest_integration.js	/^      error_type: 'transaction',$/;"	r
errors	index.js	/^exports.errors = requireAll(__dirname+'\/lib\/errors\/');$/;"	r
errors	lib/data/controllers/external_accounts.js	/^    var errors = model.validate();$/;"	r
errors	lib/data/controllers/external_transactions.js	/^    var errors = external_transaction.validate(); $/;"	r
errors	lib/data/controllers/ripple_addresses.js	/^    var errors = model.validate();$/;"	r
errors	lib/data/controllers/ripple_transactions.js	/^      var errors = {$/;"	r
errors	lib/data/controllers/ripple_transactions.js	/^    var errors = model.validate();$/;"	r
errors	lib/data/controllers/users.js	/^    var errors = model.validate();$/;"	r
errors	lib/http/controllers/public/setup_wizard.js	/^      res.send(400, { success: false, errors: err});$/;"	r
errors	test/fixtures/ripple_rest_integration.js	/^  errors: {$/;"	r
exclusions	lib/data/pagination_util.js	/^    var exclusions = ['count', 'index', 'sort_direction', 'sort_field'];$/;"	r
exec	lib/processes/process_manager.js	/^var exec = require('child_process').exec;$/;"	r
expand	scripts/jsawk	/^  function expand(obj,name){$/;"	f
exports	Gatewaydfile.js	/^module.exports = function(gatewayd) {$/;"	r
exports	Gruntfile.js	/^module.exports = function (grunt) {$/;"	r
exports	config/environment.js	/^module.exports = nconf;$/;"	r
exports	config/initializers/bridge_payments.js	/^module.exports = function(gatewayd) {$/;"	r
exports	config/initializers/host_meta.js	/^module.exports = function(gatewayd) {$/;"	r
exports	config/policies/bridge_policy.js	/^module.exports = {$/;"	r
exports	config/policies/invoice_policy.js	/^module.exports = {$/;"	r
exports	config/policies/no_policy.js	/^module.exports = {$/;"	r
exports	config/policies/user_policy.js	/^module.exports = {$/;"	r
exports	lib/api.js	/^module.exports = requireAll(__dirname+'\/api\/');$/;"	r
exports	lib/api/activate_user.js	/^module.exports = activateUser;$/;"	r
exports	lib/api/add_currency.js	/^module.exports = addCurrency;$/;"	r
exports	lib/api/clear_withdrawal.js	/^module.exports = clearWithdrawal;$/;"	r
exports	lib/api/configure_gatewayd.js	/^module.exports = new ConfigureGatewayd();$/;"	r
exports	lib/api/create_external_payment.js	/^module.exports = createExternalPayment;$/;"	r
exports	lib/api/create_gateway_transaction.js	/^module.exports = createGatewayTransaction;$/;"	r
exports	lib/api/create_ripple_payment.js	/^module.exports = createRipplePayment;$/;"	r
exports	lib/api/deactivate_user.js	/^module.exports = deactivateUser;$/;"	r
exports	lib/api/enqueue_outgoing_payment.js	/^module.exports = enqueueOutgoingPayment;$/;"	r
exports	lib/api/finalize_deposit.js	/^module.exports = finalizeDeposit;$/;"	r
exports	lib/api/fund_cold_wallet.js	/^module.exports = fundColdWallet;$/;"	r
exports	lib/api/fund_hot_wallet.js	/^module.exports = fundHotWallet;$/;"	r
exports	lib/api/generate_wallet.js	/^module.exports = generateWallet;$/;"	r
exports	lib/api/get_account_balance.js	/^module.exports = function getAccountBalance(account, fn){$/;"	r
exports	lib/api/get_cold_wallet.js	/^module.exports = function(callback) {$/;"	r
exports	lib/api/get_hosted_address.js	/^module.exports = getHostedAddress;$/;"	r
exports	lib/api/get_hot_wallet.js	/^module.exports = function(callback) {$/;"	r
exports	lib/api/get_key.js	/^module.exports = getKey;$/;"	r
exports	lib/api/get_liabilities.js	/^module.exports = function getLiabilities(fn) {$/;"	r
exports	lib/api/get_or_fetch_last_payment_hash.js	/^module.exports = function (){$/;"	r
exports	lib/api/get_trust_lines.js	/^module.exports = getTrustLines;$/;"	r
exports	lib/api/get_user_accounts.js	/^module.exports = getUserAccounts;$/;"	r
exports	lib/api/issue_currency.js	/^module.exports = issueCurrency;/;"	r
exports	lib/api/list_cleared.js	/^module.exports = listClearedPayments;$/;"	r
exports	lib/api/list_failed_payments.js	/^module.exports = listFailedPayments;$/;"	r
exports	lib/api/list_incoming_payments.js	/^module.exports = listIncomingPayments;$/;"	r
exports	lib/api/list_outgoing_payments.js	/^module.exports = listOutgoingPayments;$/;"	r
exports	lib/api/list_processes.js	/^module.exports = listProcesses;$/;"	r
exports	lib/api/list_queued_deposits.js	/^module.exports = listQueuedDeposits;$/;"	r
exports	lib/api/list_queued_withdrawals.js	/^module.exports = function(fn) {$/;"	r
exports	lib/api/list_user_external_accounts.js	/^module.exports = listUserExternalAccounts;$/;"	r
exports	lib/api/list_users.js	/^module.exports = listUsers;$/;"	r
exports	lib/api/record_deposit.js	/^module.exports = recordDeposit;$/;"	r
exports	lib/api/record_incoming_payment.js	/^module.exports = recordIncomingPayment;$/;"	r
exports	lib/api/refund_cold_wallet.js	/^module.exports = refundColdWallet;$/;"	r
exports	lib/api/register_user.js	/^module.exports = registerUser;$/;"	r
exports	lib/api/remove_currency.js	/^module.exports = removeCurrency;$/;"	r
exports	lib/api/restart_gateway.js	/^module.exports = restartGateway;$/;"	r
exports	lib/api/retry_failed_payment.js	/^module.exports = retryFailedPayment;$/;"	r
exports	lib/api/ripple_quotes.js	/^module.exports = {$/;"	r
exports	lib/api/set_cold_wallet.js	/^module.exports = setColdWallet;$/;"	r
exports	lib/api/set_hot_wallet.js	/^module.exports = setHotWallet;$/;"	r
exports	lib/api/set_key.js	/^module.exports = setKey;$/;"	r
exports	lib/api/set_last_payment_hash.js	/^module.exports = function(hash){$/;"	r
exports	lib/api/set_ripple_rest_url.js	/^module.exports = function(opts, callback){$/;"	r
exports	lib/api/set_trust_line.js	/^module.exports = setTrustLine;$/;"	r
exports	lib/api/start_gateway.js	/^module.exports = startGateway;$/;"	r
exports	lib/api/stop_gateway.js	/^module.exports = stopGateway;$/;"	r
exports	lib/app.js	/^module.exports = app;$/;"	r
exports	lib/cli/activate_user.js	/^module.exports = activateUser;$/;"	r
exports	lib/cli/add_currency.js	/^module.exports = addCurrency;$/;"	r
exports	lib/cli/add_external_account.js	/^module.exports = addExternalAccount;$/;"	r
exports	lib/cli/clear_withdrawal.js	/^module.exports = clearWithdrawal;$/;"	r
exports	lib/cli/db_ripple_tx_seed.js	/^module.exports = dbRippleTxSeed;$/;"	r
exports	lib/cli/deactivate_user.js	/^module.exports = deactivateUser;$/;"	r
exports	lib/cli/enqueue_outgoing_payment.js	/^module.exports = enqueueOutgoingPayment;$/;"	r
exports	lib/cli/fund_hot_wallet.js	/^module.exports = fundHotWallet;$/;"	r
exports	lib/cli/generate_wallet.js	/^module.exports = function() {$/;"	r
exports	lib/cli/get_key.js	/^module.exports = getKey;$/;"	r
exports	lib/cli/get_last_payment_hash.js	/^module.exports = function (){$/;"	r
exports	lib/cli/get_trust_lines.js	/^module.exports = getTrustLines;$/;"	r
exports	lib/cli/list_cleared.js	/^module.exports = function() {$/;"	r
exports	lib/cli/list_currencies.js	/^module.exports = listCurrencies;$/;"	r
exports	lib/cli/list_failed_payments.js	/^module.exports = listFailedPayments;$/;"	r
exports	lib/cli/list_incoming_payments.js	/^module.exports = listIncomingPayments;$/;"	r
exports	lib/cli/list_outgoing_payments.js	/^module.exports = listOutgoingPayments;$/;"	r
exports	lib/cli/list_processes.js	/^module.exports = function(){$/;"	r
exports	lib/cli/list_queued_deposits.js	/^module.exports = listQueuedDeposits;$/;"	r
exports	lib/cli/list_queued_withdrawals.js	/^module.exports = listQueuedWithdrawals;$/;"	r
exports	lib/cli/list_user_external_accounts.js	/^module.exports = listUserExternalAccounts;$/;"	r
exports	lib/cli/list_users.js	/^module.exports = listUsers;$/;"	r
exports	lib/cli/record_deposit.js	/^module.exports = recordDeposit;$/;"	r
exports	lib/cli/refund_cold_wallet.js	/^module.exports = refundColdWallet;$/;"	r
exports	lib/cli/register_user.js	/^module.exports = registerUser;$/;"	r
exports	lib/cli/remove_currency.js	/^module.exports = removeCurrency;$/;"	r
exports	lib/cli/restart_gateway.js	/^module.exports = gateway.api.restartGateway;$/;"	r
exports	lib/cli/retry_failed_payment.js	/^module.exports = retryFailedPayment;$/;"	r
exports	lib/cli/set_cold_wallet.js	/^module.exports = setColdWallet;$/;"	r
exports	lib/cli/set_hot_wallet.js	/^module.exports = setHotWallet;$/;"	r
exports	lib/cli/set_key.js	/^module.exports = setKey;$/;"	r
exports	lib/cli/set_last_payment_hash.js	/^module.exports = setLastPaymentHash;$/;"	r
exports	lib/cli/set_trust.js	/^module.exports = setTrustLine;$/;"	r
exports	lib/cli/start_gateway.js	/^module.exports = function() {$/;"	r
exports	lib/cli/stop_gateway.js	/^module.exports = gateway.api.stopGateway;$/;"	r
exports	lib/core/deposit_processor.js	/^module.exports = DepositProcessor;$/;"	r
exports	lib/core/incoming_payment.js	/^module.exports = IncomingPayment;$/;"	r
exports	lib/core/outgoing_payment.js	/^module.exports = OutgoingPayment;$/;"	r
exports	lib/core/outgoing_payment_processor.js	/^module.exports = OutgoingPaymentProcessor;$/;"	r
exports	lib/core/policy_engine.js	/^module.exports = PolicyEngine;$/;"	r
exports	lib/core/withdrawal_processor.js	/^module.exports = WithdrawalProcessor;$/;"	r
exports	lib/data/controllers/external_accounts.js	/^module.exports = configure;$/;"	r
exports	lib/data/controllers/external_transactions.js	/^module.exports = configure;$/;"	r
exports	lib/data/controllers/ripple_addresses.js	/^module.exports = configure;$/;"	r
exports	lib/data/controllers/ripple_transactions.js	/^module.exports = configure;$/;"	r
exports	lib/data/controllers/users.js	/^module.exports = configure;$/;"	r
exports	lib/data/logs.js	/^module.exports = winston;$/;"	r
exports	lib/data/models/bridges.js	/^module.exports = Bridge;$/;"	r
exports	lib/data/models/configs.js	/^module.exports = Config;$/;"	r
exports	lib/data/models/external_accounts.js	/^module.exports = ExternalAccount;$/;"	r
exports	lib/data/models/external_transactions.js	/^module.exports = ExternalTransaction;$/;"	r
exports	lib/data/models/gateway_transactions.js	/^module.exports = GatewayTransaction;$/;"	r
exports	lib/data/models/kyc_data.js	/^module.exports = KycData;$/;"	r
exports	lib/data/models/policies.js	/^module.exports = Policy;$/;"	r
exports	lib/data/models/ripple_addresses.js	/^module.exports = RippleAddress;$/;"	r
exports	lib/data/models/ripple_transactions.js	/^module.exports = RippleTransactions;$/;"	r
exports	lib/data/models/users.js	/^module.exports = User;$/;"	r
exports	lib/data/pagination_util.js	/^module.exports = {$/;"	r
exports	lib/data/sequelize.js	/^module.exports = db;$/;"	r
exports	lib/data/utils.js	/^module.exports = {$/;"	r
exports	lib/errors/enqueue_outgoing_payment_error.js	/^module.exports = EnqueueOutgoingPaymentError;$/;"	r
exports	lib/features.js	/^module.exports = flipper;$/;"	r
exports	lib/host_meta/bridge_payment_link.js	/^module.exports = BridgePaymentLink;/;"	r
exports	lib/host_meta/bridge_payment_status_link.js	/^module.exports = BridgePaymentStatusLink;/;"	r
exports	lib/host_meta/bridge_quote_link.js	/^module.exports = BridgeQuoteLink;/;"	r
exports	lib/host_meta/host_meta.js	/^module.exports = HostMeta;/;"	r
exports	lib/host_meta/link.js	/^module.exports = Link;/;"	r
exports	lib/host_meta/webfinger_link.js	/^module.exports = WebfingerLink;/;"	r
exports	lib/http/controllers/admin/login.js	/^module.exports = login;$/;"	r
exports	lib/http/controllers/api/activate_user.js	/^module.exports = function(req, res) {$/;"	r
exports	lib/http/controllers/api/add_currency.js	/^module.exports = function(req, res){$/;"	r
exports	lib/http/controllers/api/clear_withdrawal.js	/^module.exports = function(request, response) {$/;"	r
exports	lib/http/controllers/api/configure_gatewayd.js	/^module.exports = function(request, response) {$/;"	r
exports	lib/http/controllers/api/deactivate_user.js	/^module.exports = function(req, res) {$/;"	r
exports	lib/http/controllers/api/enqueue_outgoing_payment.js	/^module.exports = controller.post;$/;"	r
exports	lib/http/controllers/api/fund_hot_wallet.js	/^module.exports = function(req, res) {$/;"	r
exports	lib/http/controllers/api/generate_wallet.js	/^module.exports = function(req, res){$/;"	r
exports	lib/http/controllers/api/get_balance.js	/^module.exports = function(req, res){$/;"	r
exports	lib/http/controllers/api/get_cold_wallet.js	/^module.exports = function(req, res){$/;"	r
exports	lib/http/controllers/api/get_database_url.js	/^module.exports = function(req, res){$/;"	r
exports	lib/http/controllers/api/get_domain.js	/^module.exports = function(req, res){$/;"	r
exports	lib/http/controllers/api/get_hot_wallet.js	/^module.exports = function(req, res){$/;"	r
exports	lib/http/controllers/api/get_key.js	/^module.exports = function(req, res){$/;"	r
exports	lib/http/controllers/api/get_liabilities.js	/^module.exports = function(req, res){$/;"	r
exports	lib/http/controllers/api/get_ripple_rest_url.js	/^module.exports = function(req, res){$/;"	r
exports	lib/http/controllers/api/get_trust_lines.js	/^module.exports = function(req, res){$/;"	r
exports	lib/http/controllers/api/list_cleared.js	/^module.exports = function(req, res) {$/;"	r
exports	lib/http/controllers/api/list_currencies.js	/^module.exports = function(req, res){$/;"	r
exports	lib/http/controllers/api/list_failed_payments.js	/^module.exports = function(req, res){$/;"	r
exports	lib/http/controllers/api/list_incoming_payments.js	/^module.exports = function(req, res){$/;"	r
exports	lib/http/controllers/api/list_outgoing_payments.js	/^module.exports = function(req, res) {$/;"	r
exports	lib/http/controllers/api/list_processes.js	/^module.exports = function(req, res){$/;"	r
exports	lib/http/controllers/api/list_queued_deposits.js	/^module.exports = function(req, res) {$/;"	r
exports	lib/http/controllers/api/list_queued_withdrawals.js	/^module.exports = function(req, res) {$/;"	r
exports	lib/http/controllers/api/list_user_external_accounts.js	/^module.exports = function(req, res) {$/;"	r
exports	lib/http/controllers/api/record_deposit.js	/^module.exports = function(req, res) {$/;"	r
exports	lib/http/controllers/api/refund_cold_wallet.js	/^module.exports = function(req, res){$/;"	r
exports	lib/http/controllers/api/register_user.js	/^module.exports = function(req, res) {$/;"	r
exports	lib/http/controllers/api/remove_currency.js	/^module.exports = function(req, res){$/;"	r
exports	lib/http/controllers/api/retry_failed_payment.js	/^module.exports = function(req, res){$/;"	r
exports	lib/http/controllers/api/ripple_quotes_incoming.js	/^module.exports = function(request, response) {$/;"	r
exports	lib/http/controllers/api/ripple_quotes_outgoing.js	/^module.exports = function(request, response) {$/;"	r
exports	lib/http/controllers/api/set_cold_wallet.js	/^module.exports = function(req, res){$/;"	r
exports	lib/http/controllers/api/set_database_url.js	/^module.exports = function(req, res){$/;"	r
exports	lib/http/controllers/api/set_domain.js	/^module.exports = function(req, res){$/;"	r
exports	lib/http/controllers/api/set_hot_wallet.js	/^module.exports = function(req, res){$/;"	r
exports	lib/http/controllers/api/set_key.js	/^module.exports = function(req, res){$/;"	r
exports	lib/http/controllers/api/set_ripple_rest_url.js	/^module.exports = function(req, res){$/;"	r
exports	lib/http/controllers/api/set_trust_line.js	/^module.exports = function(req, res){$/;"	r
exports	lib/http/controllers/api/start_gateway.js	/^module.exports = function(req, res) {$/;"	r
exports	lib/http/controllers/public/build_ripple_txt.js	/^module.exports = function(req, res) {$/;"	r
exports	lib/http/controllers/public/currencies.js	/^module.exports = function(req, res) {$/;"	r
exports	lib/http/controllers/public/login_user.js	/^module.exports = function(req, res) {$/;"	r
exports	lib/http/controllers/public/register_user.js	/^module.exports = function(req, res) {$/;"	r
exports	lib/http/controllers/public/setup_wizard.js	/^module.exports = function (req, res){$/;"	r
exports	lib/http/controllers/public/webapp.js	/^module.exports = function(req, res) {$/;"	r
exports	lib/http/controllers/resources/bridges.js	/^module.exports = {$/;"	r
exports	lib/http/controllers/resources/external_accounts.js	/^module.exports = {$/;"	r
exports	lib/http/controllers/resources/external_transactions.js	/^module.exports = {$/;"	r
exports	lib/http/controllers/resources/gateway_transactions.js	/^module.exports = {$/;"	r
exports	lib/http/controllers/resources/policies.js	/^module.exports = policiesController;$/;"	r
exports	lib/http/controllers/resources/ripple_addresses.js	/^module.exports = {$/;"	r
exports	lib/http/controllers/resources/ripple_transactions.js	/^module.exports = {$/;"	r
exports	lib/http/controllers/resources/users.js	/^module.exports = {$/;"	r
exports	lib/http/controllers/users/index.js	/^module.exports = controller;$/;"	r
exports	lib/http/response_handler.js	/^module.exports = {$/;"	r
exports	lib/http/routers/admin_router.js	/^module.exports = router;$/;"	r
exports	lib/http/routers/api_router.js	/^module.exports = router;$/;"	r
exports	lib/http/routers/resources_router.js	/^module.exports = router;$/;"	r
exports	lib/http/routers/user_router.js	/^module.exports = router;$/;"	r
exports	lib/processes/index.js	/^module.exports = new ProcessSet();$/;"	r
exports	lib/processes/process_manager.js	/^module.exports = ProcessManager;$/;"	r
exports	lib/processes/process_set.js	/^module.exports = ProcessSet;$/;"	r
exports	lib/processes/supervisor.js	/^module.exports = Supervisor;$/;"	r
exports	lib/ripple_rest_error_handler.js	/^module.exports = new RippleRestErrorHandler();$/;"	r
exports	lib/validator.js	/^module.exports = validator;$/;"	r
exports	lib/views/text/index.js	/^module.exports = {$/;"	r
exports	processes/deposits.js	/^  module.exports = function(gatewayd) {$/;"	r
exports	processes/incoming.js	/^  module.exports = function(gatewayd) {$/;"	r
exports	processes/outgoing.js	/^  module.exports = function(gatewayd) {$/;"	r
exports	test/fixtures/liabilities.js	/^module.exports = {$/;"	r
exports	test/fixtures/outgoing_payments.js	/^module.exports = {$/;"	r
exports	test/fixtures/ripple_quotes.js	/^module.exports = {$/;"	r
exports	test/fixtures/ripple_rest_integration.js	/^module.exports = {$/;"	r
exports	test/fixtures/transactions.js	/^module.exports = {$/;"	r
exports	test/fixtures/wallets.js	/^module.exports = {$/;"	r
express	lib/app.js	/^var express = require('express');$/;"	r
express	lib/http/routers/admin_router.js	/^var express = require('express');$/;"	r
express	lib/http/routers/api_router.js	/^var express = require('express');$/;"	r
express	lib/http/routers/user_router.js	/^var express = require('express');$/;"	r
express	package.json	/^    "express": "^4.8.3",$/;"	f
express-authorization	package.json	/^    "express-authorization": "0.1.1",$/;"	f
expressApp	test/http/enqueue_outgoing_payment.js	/^var expressApp = require(__dirname+'\/..\/..\/lib\/app.js');$/;"	r
external	lib/api/create_gateway_transaction.js	/^          external = externalTransaction;$/;"	r
external	test/api/create_gateway_transaction.js	/^          external: {$/;"	r
externalAccount	lib/http/controllers/resources/external_accounts.js	/^            externalAccount: externalAccount$/;"	r
externalAccount	lib/http/controllers/resources/external_accounts.js	/^        externalAccount: externalAccount$/;"	r
externalAccount	test/core/deposit_processor.js	/^      externalAccount = registeredUser.external_account;$/;"	r
externalAccount	test/core/deposit_processor.js	/^var externalAccount;$/;"	r
externalAccount	test/core/withdrawal_processor.js	/^      externalAccount = registeredUser.external_account;$/;"	r
externalAccount	test/core/withdrawal_processor.js	/^var externalAccount;$/;"	r
externalAccountCreatedId	test/http/crud/external_accounts.js	/^        externalAccountCreatedId = response.body.external_account.id;$/;"	r
externalAccountCreatedId	test/http/crud/external_accounts.js	/^var externalAccountCreatedId;$/;"	r
externalAccountModel	lib/data/controllers/external_accounts.js	/^var externalAccountModel = require('..\/models\/external_accounts');$/;"	r
externalAccounts	lib/data/index.js	/^var externalAccounts      = require('.\/controllers\/external_accounts');$/;"	r
externalAccounts	lib/http/controllers/users/index.js	/^  externalAccounts: externalAccounts,$/;"	r
externalAccounts	lib/http/controllers/users/index.js	/^function externalAccounts (req, res) {$/;"	r
externalAccounts	lib/views/text/index.js	/^  externalAccounts: printExternalAccountsTable,$/;"	r
externalAccounts	test/fixtures/models.js	/^module.exports.externalAccounts = {$/;"	r
externalTransaction	lib/api/create_gateway_transaction.js	/^          gatewayTransaction.externalTransaction = external;$/;"	r
externalTransaction	lib/http/controllers/resources/external_transactions.js	/^                externalTransaction: externalTransaction$/;"	r
externalTransaction	lib/http/controllers/resources/external_transactions.js	/^          externalTransaction: externalTransaction$/;"	r
externalTransaction	test/fixtures/transactions.js	/^  externalTransaction: {$/;"	r
externalTransaction	test/http/clear_withdrawals.js	/^      externalTransaction = transaction;$/;"	r
externalTransactionCreatedId	test/http/crud/external_transactions.js	/^        externalTransactionCreatedId = response.body.external_transaction.id;$/;"	r
externalTransactionCreatedId	test/http/crud/external_transactions.js	/^var externalTransactionCreatedId;$/;"	r
externalTransactionModel	lib/data/controllers/external_transactions.js	/^var externalTransactionModel = require('..\/models\/external_transactions');$/;"	r
externalTransactionWithdrawal	lib/core/withdrawal_processor.js	/^                self.externalTransactionWithdrawal = withdrawal;$/;"	r
externalTransactions	lib/data/index.js	/^var externalTransactions  = require('.\/controllers\/external_transactions');$/;"	r
externalTransactions	lib/http/controllers/users/index.js	/^  externalTransactions: externalTransactions,$/;"	r
externalTransactions	lib/http/controllers/users/index.js	/^function externalTransactions(req, res) {$/;"	r
externalTransactions	lib/views/text/index.js	/^  externalTransactions: printExternalTransactionsTable,$/;"	r
external_account	lib/api/register_user.js	/^                    response.external_account = account;$/;"	r
external_account_id	config/policies/bridge_policy.js	/^      external_account_id: payment.external_account_id,$/;"	r
external_account_id	lib/api/create_external_payment.js	/^    external_account_id: externalAccount.id,$/;"	r
external_account_id	lib/api/record_deposit.js	/^        external_account_id: options.external_account_id,$/;"	r
external_account_id	lib/cli/record_deposit.js	/^    external_account_id: external_account_id$/;"	r
external_account_id	lib/core/withdrawal_processor.js	/^              external_account_id: address.tag$/;"	r
external_account_id	lib/data/controllers/external_transactions.js	/^        query.external_account_id = opts.external_account_id;$/;"	r
external_account_id	lib/data/migrations/20131216232955-external-transactions.js	/^    external_account_id: { type: 'int', notNull: true },$/;"	r
external_account_id	lib/data/migrations/20140731062106-create-policies.js	/^    external_account_id: {$/;"	r
external_account_id	lib/data/models/external_transactions.js	/^  external_account_id: {$/;"	r
external_account_id	lib/data/models/policies.js	/^  external_account_id: {$/;"	r
external_account_id	lib/http/controllers/api/record_deposit.js	/^    external_account_id: req.body.external_account_id,$/;"	r
external_account_id	lib/views/text/index.js	/^      transaction.external_account_id$/;"	r
external_account_id	test/api/record_deposit.js	/^        external_account_id: externalAccount.id,$/;"	r
external_account_id	test/api/record_deposit.js	/^      external_account_id: 5,$/;"	r
external_account_id	test/core/deposit_processor.js	/^        external_account_id: externalAccount.id,$/;"	r
external_account_id	test/fixtures/transactions.js	/^    external_account_id: 1,$/;"	r
external_account_id	test/fixtures/transactions.js	/^    external_account_id: 2,$/;"	r
external_account_id	test/http/clear_withdrawals.js	/^      external_account_id: 1,$/;"	r
external_account_id	test/models/policies.js	/^      external_account_id: 27,$/;"	r
external_account_id	test/models/policies.js	/^      external_account_id: 97$/;"	r
external_id	lib/data/migrations/20131216193924-users.js	/^    external_id: { type: 'string' },$/;"	r
external_id	lib/data/models/users.js	/^  external_id: Sequelize.STRING,$/;"	r
external_transaction	lib/data/controllers/external_transactions.js	/^    var external_transaction = externalTransactionModel.build(opts);$/;"	r
external_transaction	lib/http/controllers/resources/external_transactions.js	/^        external_transaction: transaction$/;"	r
external_transaction_id	config/policies/invoice_policy.js	/^      external_transaction_id: externalTransaction.id,$/;"	r
external_transaction_id	lib/api/create_gateway_transaction.js	/^            external_transaction_id: external.id,$/;"	r
external_transaction_id	lib/api/create_gateway_transaction.js	/^          input.external_transaction_id = externalTransaction.id;$/;"	r
external_transaction_id	lib/core/deposit_processor.js	/^              external_transaction_id: self.deposit.id,$/;"	r
external_transaction_id	lib/data/migrations/20140819202523-create-gateway-transactions.js	/^    external_transaction_id: {$/;"	r
external_transaction_id	lib/data/models/gateway_transactions.js	/^  external_transaction_id: { $/;"	r
external_transaction_id	lib/data/models/ripple_transactions.js	/^  external_transaction_id: {$/;"	r
external_transaction_id	test/fixtures/outgoing_payments.js	/^      external_transaction_id: 169,$/;"	r
external_transaction_id	test/models/gateway_transactions.js	/^      external_transaction_id: 456$/;"	r
external_transaction_id	test/models/gateway_transactions.js	/^      external_transaction_id: 456,$/;"	r
external_transactions	lib/http/controllers/resources/external_transactions.js	/^          external_transactions: externalTransactions$/;"	r
f	scripts/jsawk	/^                    function f(n) {$/;"	f
f	scripts/jsawk	/^    function f(n) {$/;"	f
failedPayment	test/api/retry_failed_payment.js	/^  var failedPayment, successfulPayment;$/;"	r
features	index.js	/^exports.features = require(__dirname+'\/lib\/features');$/;"	r
features	lib/data/logs.js	/^var features  = require(__dirname + '\/..\/..\/lib\/features.js');$/;"	r
featuresJsonFilePath	lib/features.js	/^var featuresJsonFilePath = __dirname+'\/..\/config\/features.json';$/;"	r
federation_name	lib/data/migrations/20131216193924-users.js	/^    federation_name: { type: 'string' },$/;"	r
federation_name	lib/data/models/users.js	/^  federation_name: Sequelize.STRING,$/;"	r
federation_tag	lib/data/migrations/20131216193924-users.js	/^    federation_tag: { type: 'string' },$/;"	r
federation_tag	lib/data/models/users.js	/^  federation_tag: Sequelize.STRING,$/;"	r
fee	lib/data/migrations/20140731062106-create-policies.js	/^    fee: {$/;"	r
fee	lib/data/models/policies.js	/^    fee: function () {$/;"	r
fee	lib/data/models/policies.js	/^  fee: {$/;"	r
fee	test/fixtures/incoming_payments.js	/^    fee: '0.012',$/;"	r
fee	test/fixtures/ripple_rest_integration.js	/^      fee: '0.000012',$/;"	r
fee	test/models/policies.js	/^      fee: 0.77$/;"	r
fetchLastPaymentHash	lib/data/models/ripple_addresses.js	/^    fetchLastPaymentHash: function() {$/;"	r
field	lib/api/clear_withdrawal.js	/^          field: 'id',$/;"	r
field	lib/api/clear_withdrawal.js	/^        field: 'status',$/;"	r
field	lib/api/enqueue_outgoing_payment.js	/^        field: 'address',$/;"	r
field	lib/api/enqueue_outgoing_payment.js	/^        field: 'amount',$/;"	r
field	lib/api/enqueue_outgoing_payment.js	/^        field: 'currency',$/;"	r
field	lib/api/enqueue_outgoing_payment.js	/^        field: 'destinationTag',$/;"	r
field	lib/api/enqueue_outgoing_payment.js	/^        field: 'issuer',$/;"	r
field	lib/api/retry_failed_payment.js	/^          field: 'id',$/;"	r
field	lib/errors/enqueue_outgoing_payment_error.js	/^  this.field = options.field;$/;"	r
field	lib/http/controllers/api/clear_withdrawal.js	/^            field: 'id',$/;"	r
field	lib/http/controllers/api/retry_failed_payment.js	/^          field: 'id',$/;"	r
field	lib/http/controllers/api/retry_failed_payment.js	/^          field: 'state',$/;"	r
field	test/errors/enqueue_outgoing_payment.js	/^      field: 'address'$/;"	r
fields	lib/host_meta/bridge_payment_link.js	/^    _this.properties.fields = {};$/;"	r
fileModule	lib/cli/start_gateway.js	/^        var fileModule = require(__dirname+'\/..\/..\/processes\/'+path);$/;"	r
filePath	lib/http/controllers/public/webapp.js	/^  var filePath = gateway.config.get('WEBAPP_PATH')+'\/app.html';$/;"	r
filered	lib/api/configure_gatewayd.js	/^      var filered = _.pick(options, filterArr);$/;"	r
files	Gruntfile.js	/^      files: [$/;"	r
fillSimplePayment	lib/data/controllers/ripple_transactions.js	/^    function fillSimplePayment(simple) {$/;"	r
filter	scripts/jsawk	/^   function filter(arr, fun \/*, thisp*\/){$/;"	f
filterArr	lib/api/configure_gatewayd.js	/^    var filterArr = [];$/;"	r
finalizeDeposit	lib/api/finalize_deposit.js	/^function finalizeDeposit(opts, fn) {$/;"	r
fixture	test/api/ripple_quotes.js	/^var fixture            = require(__dirname + '\/..\/fixtures\/ripple_quotes.js');$/;"	r
fixtureExternalTransaction	test/models/external_transactions.js	/^var fixtureExternalTransaction = fixtures.externalTransaction;$/;"	r
fixtureMinimalTransaction	test/models/external_transactions.js	/^var fixtureMinimalTransaction = fixtures.minimalExternalTransaction;$/;"	r
fixtures	test/models/external_accounts.js	/^var fixtures = require(__dirname+'\/..\/fixtures\/models');$/;"	r
fixtures	test/models/external_transactions.js	/^var fixtures = require(__dirname+'\/..\/fixtures\/transactions');$/;"	r
fixturesOutgoingPayment	test/core/outgoing_payment.js	/^var fixturesOutgoingPayment = require(__dirname+'\/..\/fixtures\/outgoing_payments.js');$/;"	r
fixturesRippleRestIntegration	test/core/outgoing_payment.js	/^var fixturesRippleRestIntegration = require(__dirname+'\/..\/fixtures\/ripple_rest_integration.js');$/;"	r
flipper	lib/features.js	/^var flipper = require('flipper');$/;"	r
flipper	package.json	/^    "flipper": "0.0.3",$/;"	f
fn	lib/data/controllers/external_transactions.js	/^      fn = opts;$/;"	r
fn	lib/data/controllers/users.js	/^      fn = opts;$/;"	r
fn	lib/processes/process_manager.js	/^      fn = opts;$/;"	r
forUser	lib/data/controllers/external_transactions.js	/^  api.forUser = function(userId, fn) {$/;"	r
forUser	lib/data/controllers/ripple_transactions.js	/^  api.forUser = function(userId, fn) {$/;"	r
foreignKey	lib/data/index.js	/^  foreignKey: 'destination_account_id',$/;"	r
foreignKey	lib/data/index.js	/^  foreignKey: 'external_transaction_id',$/;"	r
foreignKey	lib/data/index.js	/^  foreignKey: 'from_address_id'$/;"	r
foreignKey	lib/data/index.js	/^  foreignKey: 'from_address_id',$/;"	r
foreignKey	lib/data/index.js	/^  foreignKey: 'ripple_transaction_id',$/;"	r
foreignKey	lib/data/index.js	/^  foreignKey: 'source_account_id',$/;"	r
foreignKey	lib/data/index.js	/^  foreignKey: 'to_account_id'$/;"	r
foreignKey	lib/data/index.js	/^  foreignKey: 'to_address_id'$/;"	r
foreignKey	lib/data/index.js	/^  foreignKey: 'to_address_id',$/;"	r
foreignKeyConstraint	lib/data/index.js	/^  foreignKeyConstraint: true$/;"	r
forever	package.json	/^    "forever": "",$/;"	f
fromAccount	lib/api/get_trust_lines.js	/^    fromAccount: hotWallet,$/;"	r
fromAddress	test/models/ripple_associations.js	/^          fromAddress = address;$/;"	r
fromIssuer	lib/data/models/ripple_transactions.js	/^      var fromIssuer = _.isEmpty(value) ? undefined : value;$/;"	r
fromUser	lib/data/controllers/ripple_transactions.js	/^  api.fromUser = function(userId, fn) {$/;"	r
from_address_id	lib/api/create_ripple_payment.js	/^    from_address_id: fromAddress.id,$/;"	r
from_address_id	lib/api/enqueue_outgoing_payment.js	/^    from_address_id: fromAddress.id,$/;"	r
from_address_id	lib/api/record_incoming_payment.js	/^      from_address_id: result.sourceRecord.id,$/;"	r
from_address_id	lib/cli/db_ripple_tx_seed.js	/^      from_address_id: chance.integer({min: 1, max: 99999}),$/;"	r
from_address_id	lib/core/deposit_processor.js	/^              from_address_id: gateway.config.get('HOT_WALLET').id,$/;"	r
from_address_id	lib/data/controllers/ripple_transactions.js	/^        from_address_id: 'to and from addresses must not be the same'$/;"	r
from_address_id	lib/data/migrations/20131216233400-ripple-transactions.js	/^    from_address_id:   { type: 'int', notNull: true },$/;"	r
from_address_id	lib/data/models/ripple_transactions.js	/^  from_address_id: { $/;"	r
from_address_id	test/api/list_failed_payments.js	/^        from_address_id: 2,$/;"	r
from_address_id	test/api/list_outgoing_payments.js	/^            from_address_id: fromAddress.id,$/;"	r
from_address_id	test/api/retry_failed_payment.js	/^      from_address_id: 1,$/;"	r
from_address_id	test/core/withdrawal_processor.js	/^        from_address_id: 99999,$/;"	r
from_address_id	test/fixtures/incoming_payments.js	/^      from_address_id  : 2,$/;"	r
from_address_id	test/fixtures/outgoing_payments.js	/^      from_address_id: 1,$/;"	r
from_address_id	test/fixtures/outgoing_payments.js	/^      from_address_id: 623,$/;"	r
from_address_id	test/fixtures/transactions.js	/^    from_address_id: 2,$/;"	r
from_address_id	test/http/retry_failed_payment.js	/^      from_address_id: 2,$/;"	r
from_address_id	test/models/ripple_associations.js	/^            from_address_id: fromAddress.id,$/;"	r
from_address_id	test/models/ripple_transactions.js	/^        from_address_id: 2,$/;"	r
from_address_id	test/models/ripple_transactions.js	/^      from_address_id: 2,$/;"	r
from_address_id	test/utils/db_ripple_seed.js	/^      from_address_id: chanceFromAddressId,$/;"	r
from_amount	lib/api/create_ripple_payment.js	/^    from_amount: options.source_amount,$/;"	r
from_amount	lib/api/record_incoming_payment.js	/^      from_amount: incomingPayment.source_amount.value,$/;"	r
from_amount	lib/api/record_incoming_payment.js	/^    from_amount: incomingPayment.from_amount,$/;"	r
from_amount	lib/cli/db_ripple_tx_seed.js	/^      from_amount: chance.floating({fixed: 2}),$/;"	r
from_amount	lib/core/deposit_processor.js	/^              from_amount: self.deposit.amount,$/;"	r
from_amount	lib/core/outgoing_payment.js	/^    _this.record.from_amount = sourceChange.value;$/;"	r
from_amount	lib/data/controllers/ripple_transactions.js	/^      full.from_amount = full.from_amount || full.to_amount;$/;"	r
from_amount	lib/data/migrations/20131216233400-ripple-transactions.js	/^    from_amount:       { type: 'decimal', notNull: true },$/;"	r
from_amount	lib/data/models/ripple_transactions.js	/^    from_amount: function () {$/;"	r
from_amount	lib/data/models/ripple_transactions.js	/^  from_amount: { $/;"	r
from_amount	test/api/list_failed_payments.js	/^        from_amount: 5.00,$/;"	r
from_amount	test/api/list_failed_payments.js	/^        from_amount: 6.00,$/;"	r
from_amount	test/api/list_outgoing_payments.js	/^            from_amount: 5.00,$/;"	r
from_amount	test/api/list_outgoing_payments.js	/^            from_amount: 6.00,$/;"	r
from_amount	test/api/retry_failed_payment.js	/^      from_amount: 10000,$/;"	r
from_amount	test/core/withdrawal_processor.js	/^        from_amount: 100,$/;"	r
from_amount	test/fixtures/incoming_payments.js	/^      from_amount      : '-0.012',$/;"	r
from_amount	test/fixtures/outgoing_payments.js	/^      from_amount: 0.002,$/;"	r
from_amount	test/fixtures/transactions.js	/^    from_amount: 6,$/;"	r
from_amount	test/http/retry_failed_payment.js	/^      from_amount: 10,$/;"	r
from_amount	test/models/ripple_associations.js	/^            from_amount: 5,$/;"	r
from_amount	test/models/ripple_transactions.js	/^        from_amount: 6,$/;"	r
from_amount	test/models/ripple_transactions.js	/^      from_amount: 6,$/;"	r
from_amount	test/utils/db_ripple_seed.js	/^      from_amount: chanceFromAmount,$/;"	r
from_currency	lib/api/create_ripple_payment.js	/^    from_currency: options.source_currency,$/;"	r
from_currency	lib/api/record_incoming_payment.js	/^      from_currency: incomingPayment.source_amount.currency,$/;"	r
from_currency	lib/api/record_incoming_payment.js	/^    from_currency: incomingPayment.from_currency,$/;"	r
from_currency	lib/cli/db_ripple_tx_seed.js	/^      from_currency: chance.currency().code,$/;"	r
from_currency	lib/core/deposit_processor.js	/^              from_currency: self.deposit.currency,$/;"	r
from_currency	lib/core/outgoing_payment.js	/^    _this.record.from_currency = sourceChange.currency;$/;"	r
from_currency	lib/data/controllers/ripple_transactions.js	/^      full.from_currency = full.from_currency || full.to_currency;$/;"	r
from_currency	lib/data/migrations/20131216233400-ripple-transactions.js	/^    from_currency:     { type: 'string', notNull: true },$/;"	r
from_currency	lib/data/models/ripple_transactions.js	/^  from_currency: { $/;"	r
from_currency	test/api/list_failed_payments.js	/^        from_currency: 'USD',$/;"	r
from_currency	test/api/list_outgoing_payments.js	/^            from_currency: 'USD',$/;"	r
from_currency	test/api/retry_failed_payment.js	/^      from_currency: 'XAG',$/;"	r
from_currency	test/core/withdrawal_processor.js	/^        from_currency: 'XAG',$/;"	r
from_currency	test/fixtures/incoming_payments.js	/^      from_currency    : 'XRP',$/;"	r
from_currency	test/fixtures/outgoing_payments.js	/^      from_currency: 'GWD',$/;"	r
from_currency	test/fixtures/outgoing_payments.js	/^      from_currency: 'XRP',$/;"	r
from_currency	test/fixtures/transactions.js	/^    from_currency: 'USD',$/;"	r
from_currency	test/http/retry_failed_payment.js	/^      from_currency: 'XAG',$/;"	r
from_currency	test/models/ripple_associations.js	/^            from_currency: "XAU",$/;"	r
from_currency	test/models/ripple_transactions.js	/^        from_currency: 'USD'$/;"	r
from_currency	test/models/ripple_transactions.js	/^        from_currency: 'USD',$/;"	r
from_currency	test/models/ripple_transactions.js	/^        from_currency: 'XRP',$/;"	r
from_currency	test/models/ripple_transactions.js	/^      from_currency: 'USD',$/;"	r
from_currency	test/utils/db_ripple_seed.js	/^      from_currency: chanceFromCurrency,$/;"	r
from_issuer	lib/api/create_ripple_payment.js	/^    from_issuer: options.source_issuer,$/;"	r
from_issuer	lib/api/enqueue_outgoing_payment.js	/^    from_issuer: options.from_issuer,$/;"	r
from_issuer	lib/api/record_incoming_payment.js	/^      from_issuer: incomingPayment.source_amount.issuer || '',$/;"	r
from_issuer	lib/api/record_incoming_payment.js	/^    from_issuer: incomingPayment.from_issuer,$/;"	r
from_issuer	lib/cli/db_ripple_tx_seed.js	/^      from_issuer: 'rwXNHZD4F6SzyE2yXhjhHZhLzMxtcXLSvt',$/;"	r
from_issuer	lib/core/deposit_processor.js	/^              from_issuer: gateway.config.get('COLD_WALLET'),$/;"	r
from_issuer	lib/core/outgoing_payment.js	/^      from_issuer: _this.record.from_issuer,$/;"	r
from_issuer	lib/data/controllers/ripple_transactions.js	/^      full.from_issuer = full.from_issuer || full.to_issuer;$/;"	r
from_issuer	lib/data/migrations/20131216233400-ripple-transactions.js	/^    from_issuer:       { type: 'string', notNull: true },$/;"	r
from_issuer	lib/data/models/ripple_transactions.js	/^    from_issuer: function(value) {$/;"	r
from_issuer	lib/data/models/ripple_transactions.js	/^  from_issuer: { $/;"	r
from_issuer	test/api/enqueue_outgoing_payment.js	/^      from_issuer: from_issuer$/;"	r
from_issuer	test/api/enqueue_outgoing_payment.js	/^    var from_issuer = 'rHtxC1q5Q57c94TDxmNTnvgVa43AF5t5Ke';$/;"	r
from_issuer	test/api/retry_failed_payment.js	/^      from_issuer: 'rp4u5gEskM8DtBZvonZwbu6dspgVdeAGM6',$/;"	r
from_issuer	test/core/withdrawal_processor.js	/^        from_issuer: gateway.config.get('COLD_WALLET'),$/;"	r
from_issuer	test/fixtures/incoming_payments.js	/^      from_issuer      : undefined,$/;"	r
from_issuer	test/fixtures/outgoing_payments.js	/^      from_issuer: 'r4EwBWxrx5HxYRyisfGzMto3AT8FZiYdWk',$/;"	r
from_issuer	test/fixtures/transactions.js	/^    from_issuer: 'r4EwBWxrx5HxYRyisfGzMto3AT8FZiYdWk',$/;"	r
from_issuer	test/http/retry_failed_payment.js	/^      from_issuer: '',$/;"	r
from_issuer	test/models/ripple_associations.js	/^            from_issuer: 'ra9EVPRsiqncEfrRpJudDV34AqxFao8Zv9',$/;"	r
from_issuer	test/models/ripple_transactions.js	/^        from_issuer: 'r4EwBWxrx5HxYRyisfGzMto3AT8FZiYdWk',$/;"	r
from_issuer	test/models/ripple_transactions.js	/^        from_issuer: 'r67890'$/;"	r
from_issuer	test/models/ripple_transactions.js	/^       from_issuer: [ 'Validation notNull of from_issuer' ]$/;"	r
from_issuer	test/models/ripple_transactions.js	/^      from_issuer: 'r12345'$/;"	r
from_issuer	test/models/ripple_transactions.js	/^      from_issuer: 'r4EwBWxrx5HxYRyisfGzMto3AT8FZiYdWk'$/;"	r
from_issuer	test/models/ripple_transactions.js	/^      from_issuer: 'r4EwBWxrx5HxYRyisfGzMto3AT8FZiYdWk',$/;"	r
from_issuer	test/utils/db_ripple_seed.js	/^      from_issuer: chanceFromIssuer,$/;"	r
fs	lib/data/logs.js	/^var fs        = require('fs');$/;"	r
fs	lib/features.js	/^var fs = require('fs');$/;"	r
fs	lib/http/controllers/public/webapp.js	/^var fs = require('fs');$/;"	r
fs	processes/server.js	/^var fs = require('fs');$/;"	r
full	lib/data/controllers/ripple_transactions.js	/^      var full = simple;$/;"	r
fundColdWallet	lib/api/fund_cold_wallet.js	/^function fundColdWallet(payment, callback) {$/;"	r
fundHotWallet	lib/api/fund_hot_wallet.js	/^function fundHotWallet(payment, callback) {$/;"	r
fundHotWallet	lib/cli/fund_hot_wallet.js	/^function fundHotWallet(amount, currency, secret, callback) {$/;"	r
gateway	lib/app.js	/^var gateway = require(__dirname + '\/..\/');$/;"	r
gateway	lib/cli/activate_user.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	lib/cli/add_currency.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	lib/cli/add_external_account.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	lib/cli/clear_withdrawal.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	lib/cli/deactivate_user.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	lib/cli/fund_hot_wallet.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	lib/cli/generate_wallet.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	lib/cli/get_key.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	lib/cli/get_last_payment_hash.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	lib/cli/get_trust_lines.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	lib/cli/list_cleared.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	lib/cli/list_currencies.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	lib/cli/list_failed_payments.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	lib/cli/list_incoming_payments.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	lib/cli/list_outgoing_payments.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	lib/cli/list_processes.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	lib/cli/list_queued_deposits.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	lib/cli/list_queued_withdrawals.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	lib/cli/list_user_external_accounts.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	lib/cli/list_users.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	lib/cli/record_deposit.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	lib/cli/refund_cold_wallet.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	lib/cli/register_user.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	lib/cli/remove_currency.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	lib/cli/restart_gateway.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	lib/cli/retry_failed_payment.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	lib/cli/set_cold_wallet.js	/^var gateway = require(__dirname+'\/..\/..');$/;"	r
gateway	lib/cli/set_hot_wallet.js	/^var gateway = require(__dirname+'\/..\/..');$/;"	r
gateway	lib/cli/set_key.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	lib/cli/set_last_payment_hash.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	lib/cli/set_trust.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	lib/cli/stop_gateway.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	lib/core/deposit_processor.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	lib/core/withdrawal_processor.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/activate_user.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/add_currency.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/clear_withdrawal.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/deactivate_user.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/fund_hot_wallet.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/generate_wallet.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/get_cold_wallet.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/get_database_url.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/get_domain.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/get_hot_wallet.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/get_key.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/get_ripple_rest_url.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/get_trust_lines.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/list_cleared.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/list_currencies.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/list_failed_payments.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/list_incoming_payments.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/list_outgoing_payments.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/list_processes.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/list_queued_deposits.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/list_queued_withdrawals.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/list_user_external_accounts.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/record_deposit.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/refund_cold_wallet.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/register_user.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/remove_currency.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/retry_failed_payment.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/set_cold_wallet.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/set_database_url.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/set_domain.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/set_hot_wallet.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/set_key.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/set_ripple_rest_url.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/set_trust_line.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/api/start_gateway.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/public/build_ripple_txt.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/public/currencies.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/public/login_user.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/public/register_user.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/public/setup_wizard.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/public/webapp.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/controllers/users/index.js	/^var gateway = require(__dirname+'\/..\/..\/..\/..\/');$/;"	r
gateway	lib/http/passport_auth.js	/^var gateway = require(__dirname + '\/..\/..\/');$/;"	r
gateway	test/api/fund_hot_wallet.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/api/get_trust_lines.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/core/deposit_processor.js	/^var gateway = require(__dirname+'\/..\/..');$/;"	r
gateway	test/core/withdrawal_processor.js	/^var gateway = require(__dirname+'\/..\/..');$/;"	r
gateway	test/errors/enqueue_outgoing_payment.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/activate_user.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/add_currency.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/clear_withdrawals.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/crud/users.js	/^var gateway = require(__dirname+'\/..\/..\/..\/');$/;"	r
gateway	test/http/deactivate_user.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/enqueue_outgoing_payment.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/fund_hot_wallet.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/generate_wallet.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/get_account_balance.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/get_cold_wallet.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/get_database_url.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/get_domain.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/get_hot_wallet.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/get_key.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/get_last_payment_hash.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/get_liabilities_balance.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/get_ripple_rest_url.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/get_trust_line.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/list_cleared_transactions.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/list_currencies.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/list_external_accounts.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/list_external_user_accounts.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/list_failed_payments.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/list_incoming_payments.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/list_outgoing_payment.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/list_processes.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/list_queued_deposits.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/list_trustlines.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/list_users.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/list_withdrawals.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/refund_cold_wallet.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/register_user.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/remove_currency.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/retry_failed_payment.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/set_database_url.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/set_domain.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/set_hot_wallet.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/set_key.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/set_last_payment_hash.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/set_ripple_rest_url.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/set_trust_line.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gateway	test/http/start_gateway.js	/^var gateway = require(__dirname+'\/..\/..\/');$/;"	r
gatewayTransaction	lib/http/controllers/resources/gateway_transactions.js	/^            gatewayTransaction: gatewayTransaction$/;"	r
gatewayTransaction	lib/http/controllers/resources/gateway_transactions.js	/^        gatewayTransaction: gatewayTransaction$/;"	r
gatewayTransaction	test/models/gateway_transactions.js	/^      gatewayTransaction = transaction;$/;"	r
gatewayTransaction	test/models/gateway_transactions.js	/^var gatewayTransaction;$/;"	r
gatewayd	Gatewaydfile.js	/^     gatewayd: gatewayd$/;"	r
gatewayd	config/initializers/bridge_payments.js	/^    gatewayd: gatewayd$/;"	r
gatewayd	config/initializers/host_meta.js	/^    gatewayd: gatewayd$/;"	r
gatewayd	lib/cli/enqueue_outgoing_payment.js	/^var gatewayd = require(__dirname+'\/..\/..\/');$/;"	r
gatewayd	lib/cli/start_gateway.js	/^var gatewayd = require(__dirname+'\/..\/..\/');$/;"	r
gatewayd	package.json	/^    "gatewayd": ".\/bin\/gateway"$/;"	f
gatewayd	processes/deposits.js	/^var gatewayd = require(__dirname+'\/..\/');$/;"	r
gatewayd	processes/incoming.js	/^var gatewayd                = require(__dirname+'\/..\/');$/;"	r
gatewayd	processes/outgoing.js	/^var gatewayd = require(__dirname+'\/..\/');$/;"	r
gatewayd	processes/policy_engine.js	/^var gatewayd = require(__dirname+'\/..\/');$/;"	r
gatewayd	processes/server.js	/^var gatewayd = require(__dirname + '\/..\/');$/;"	r
gatewayd	processes/withdrawals.js	/^var gatewayd = require(__dirname+'\/..\/');$/;"	r
gatewayd	test/api/configure_gatewayd.js	/^var gatewayd          = require(__dirname+'\/..\/..\/');$/;"	r
gatewayd	test/api/create_external_payment.js	/^var gatewayd = require(__dirname+'\/..\/..\/');$/;"	r
gatewayd	test/api/create_gateway_transaction.js	/^var gatewayd = require(__dirname+'\/..\/..\/');$/;"	r
gatewayd	test/api/create_ripple_payment.js	/^var gatewayd        = require(__dirname+'\/..\/..\/');$/;"	r
gatewayd	test/api/list_failed_payments.js	/^var gatewayd = require(__dirname+'\/..\/..\/');$/;"	r
gatewayd	test/api/refund_cold_wallet.js	/^var gatewayd = require(__dirname+'\/..\/..\/');$/;"	r
gatewayd	test/api/retry_failed_payment.js	/^var gatewayd = require(__dirname+'\/..\/..\/');$/;"	r
gatewayd	test/api/ripple_quotes.js	/^var gatewayd           = require(__dirname + '\/..\/..\/');$/;"	r
gatewayd	test/api/set_trust_line.js	/^var gatewayd          = require(__dirname+'\/..\/..\/');$/;"	r
gatewayd	test/core/incoming_payment.js	/^var gatewayd                  = require(__dirname+'\/..\/..\/');$/;"	r
gatewayd	test/features.js	/^var gatewayd = require(__dirname+'\/..\/');$/;"	r
gatewayd	test/http/configure_gatewayd.js	/^var gatewayd          = require(__dirname+'\/..\/..\/');$/;"	r
gatewayd	test/http/crud/external_accounts.js	/^var gatewayd = require(__dirname+'\/..\/..\/..\/');$/;"	r
gatewayd	test/http/crud/external_transactions.js	/^var gatewayd = require(__dirname+'\/..\/..\/..\/');$/;"	r
gatewayd	test/http/crud/policies.js	/^var gatewayd = require(__dirname+'\/..\/..\/..\/');$/;"	r
gatewayd	test/http/crud/ripple_addresses.js	/^var gatewayd = require(__dirname+'\/..\/..\/..\/');$/;"	r
gatewayd	test/http/crud/ripple_transactions.js	/^var gatewayd = require(__dirname+'\/..\/..\/..\/');$/;"	r
gatewayd	test/models/ripple_associations.js	/^var gatewayd = require(__dirname+'\/..\/..\/');$/;"	r
gatewayd	test/processes/pm2.js	/^var gatewayd   = require(path.join(__dirname, '\/..\/..\/'))$/;"	r
gatewayd-admin	package.json	/^    "gatewayd-admin": "crazyquark\/gatewayd-admin",$/;"	f
gatewayd-setup-wizard-plugin	package.json	/^    "gatewayd-setup-wizard-plugin": "crazyquark\/setup-wizard-plugin",$/;"	f
gatewaydLogger	lib/api/configure_gatewayd.js	/^var gatewaydLogger  = require(__dirname+'\/..\/..\/lib\/data\/logs.js');$/;"	r
generateSalt	lib/data/controllers/users.js	/^  api.generateSalt = function() {$/;"	r
generateSalt	lib/data/utils.js	/^  generateSalt: generateSalt,$/;"	r
generateSalt	lib/data/utils.js	/^function generateSalt () {$/;"	r
generateWallet	lib/api/generate_wallet.js	/^function generateWallet(fn) {$/;"	r
get	lib/data/models/configs.js	/^    get: function(key) {$/;"	r
get('/'	lib/http/routers/resources_router.js	/^  router.get('\/' + resource + '\/:id', controllers[resource].show);$/;"	r
get('/'	lib/http/routers/resources_router.js	/^  router.get('\/' + resource, controllers[resource].index);$/;"	r
get('/balances'	lib/http/routers/api_router.js	/^router.get('\/balances', apiController.getAccountBalance);$/;"	r
get('/cleared'	lib/http/routers/api_router.js	/^router.get('\/cleared', apiController.listCleared);$/;"	r
get('/config/database'	lib/http/routers/api_router.js	/^router.get('\/config\/database', apiController.getDatabaseUrl);$/;"	r
get('/config/domain'	lib/http/routers/api_router.js	/^router.get('\/config\/domain', apiController.getDomain);$/;"	r
get('/config/key'	lib/http/routers/api_router.js	/^router.get('\/config\/key', apiController.getKey);$/;"	r
get('/config/ripple/rest'	lib/http/routers/api_router.js	/^router.get('\/config\/ripple\/rest', apiController.getRippleRestUrl);$/;"	r
get('/config/wallets/cold'	lib/http/routers/api_router.js	/^router.get('\/config\/wallets\/cold', apiController.getColdWallet);$/;"	r
get('/config/wallets/hot'	lib/http/routers/api_router.js	/^router.get('\/config\/wallets\/hot', apiController.getHotWallet);$/;"	r
get('/currencies'	lib/http/routers/api_router.js	/^router.get('\/currencies', apiController.listCurrencies);$/;"	r
get('/deposits'	lib/http/routers/api_router.js	/^router.get('\/deposits', apiController.listQueuedDeposits);$/;"	r
get('/liabilities'	lib/http/routers/api_router.js	/^router.get('\/liabilities', apiController.getLiabilities);$/;"	r
get('/payments/failed'	lib/http/routers/api_router.js	/^router.get('\/payments\/failed', apiController.listFailedPayments);$/;"	r
get('/payments/incoming'	lib/http/routers/api_router.js	/^router.get('\/payments\/incoming', apiController.listIncomingPayments);$/;"	r
get('/payments/outgoing'	lib/http/routers/api_router.js	/^router.get('\/payments\/outgoing', apiController.listOutgoingPayments);$/;"	r
get('/processes'	lib/http/routers/api_router.js	/^router.get('\/processes', apiController.listProcesses);$/;"	r
get('/quotes/ripple/incoming'	lib/http/routers/api_router.js	/^router.get('\/quotes\/ripple\/incoming', apiController.rippleQuotesIncoming);$/;"	r
get('/quotes/ripple/outgoing'	lib/http/routers/api_router.js	/^router.get('\/quotes\/ripple\/outgoing', apiController.rippleQuotesOutgoing);$/;"	r
get('/v1/balances'	test/http/get_account_balance.js	/^      .get('\/v1\/balances')$/;"	r
get('/v1/cleared'	test/http/list_cleared_transactions.js	/^      .get('\/v1\/cleared')$/;"	r
get('/v1/config/database'	test/http/get_database_url.js	/^      .get('\/v1\/config\/database')$/;"	r
get('/v1/config/domain'	test/http/get_domain.js	/^      .get('\/v1\/config\/domain')$/;"	r
get('/v1/config/key'	test/http/get_key.js	/^      .get('\/v1\/config\/key')$/;"	r
get('/v1/config/last_payment_hash'	test/http/get_last_payment_hash.js	/^      .get('\/v1\/config\/last_payment_hash')$/;"	r
get('/v1/config/ripple/rest'	test/http/get_ripple_rest_url.js	/^      .get('\/v1\/config\/ripple\/rest')$/;"	r
get('/v1/config/wallets/cold'	test/http/get_cold_wallet.js	/^      .get('\/v1\/config\/wallets\/cold')$/;"	r
get('/v1/config/wallets/hot'	test/http/get_hot_wallet.js	/^      .get('\/v1\/config\/wallets\/hot')$/;"	r
get('/v1/config/wallets/hot'	test/http/list_withdrawals.js	/^      .get('\/v1\/config\/wallets\/hot')$/;"	r
get('/v1/currencies'	test/http/list_currencies.js	/^      .get('\/v1\/currencies')$/;"	r
get('/v1/deposits'	test/http/list_queued_deposits.js	/^      .get('\/v1\/deposits')$/;"	r
get('/v1/external_accounts'	test/http/crud/external_accounts.js	/^      .get('\/v1\/external_accounts')$/;"	r
get('/v1/external_accounts/'	test/http/crud/external_accounts.js	/^      .get('\/v1\/external_accounts\/'+externalAccountCreated.id)$/;"	r
get('/v1/external_transactions'	test/http/crud/external_transactions.js	/^      .get('\/v1\/external_transactions')$/;"	r
get('/v1/external_transactions/'	test/http/crud/external_transactions.js	/^      .get('\/v1\/external_transactions\/'+externalTransactionCreated.id)$/;"	r
get('/v1/liabilities'	test/http/get_liabilities_balance.js	/^      .get('\/v1\/liabilities')$/;"	r
get('/v1/payments/failed'	test/http/list_failed_payments.js	/^      .get('\/v1\/payments\/failed')$/;"	r
get('/v1/payments/incoming'	test/http/list_incoming_payments.js	/^      .get('\/v1\/payments\/incoming')$/;"	r
get('/v1/payments/outgoing'	test/http/list_outgoing_payment.js	/^      .get('\/v1\/payments\/outgoing')$/;"	r
get('/v1/polcies'	test/http/crud/policies.js	/^      .get('\/v1\/polcies')$/;"	r
get('/v1/polcies/'	test/http/crud/policies.js	/^      .get('\/v1\/polcies\/'+policyCreated.id)$/;"	r
get('/v1/processes'	test/http/list_processes.js	/^      .get('\/v1\/processes')$/;"	r
get('/v1/ripple_addresses'	test/http/crud/ripple_addresses.js	/^      .get('\/v1\/ripple_addresses')$/;"	r
get('/v1/ripple_addresses/'	test/http/crud/ripple_addresses.js	/^      .get('\/v1\/ripple_addresses\/'+rippleAddressCreated.id)$/;"	r
get('/v1/ripple_transactions'	test/http/crud/ripple_transactions.js	/^      .get('\/v1\/ripple_transactions')$/;"	r
get('/v1/ripple_transactions/'	test/http/crud/ripple_transactions.js	/^      .get('\/v1\/ripple_transactions\/'+rippleTransactionCreated.id)$/;"	r
get('/v1/trust'	test/http/get_trust_line.js	/^      .get('\/v1\/trust')$/;"	r
get('/v1/trustlines/'	test/http/list_trustlines.js	/^      .get('\/v1\/trustlines\/'+account)$/;"	r
get('/v1/trustlines/12353344ddre'	test/http/list_trustlines.js	/^      .get('\/v1\/trustlines\/12353344ddre')$/;"	r
get('/v1/users'	test/http/crud/users.js	/^      .get('\/v1\/users')$/;"	r
get('/v1/users'	test/http/list_users.js	/^      .get('\/v1\/users')$/;"	r
get('/v1/users/1/external_accounts'	test/http/list_external_accounts.js	/^      .get('\/v1\/users\/1\/external_accounts')$/;"	r
get('/v1/users/1/external_accounts'	test/http/list_external_user_accounts.js	/^      .get('\/v1\/users\/1\/external_accounts')$/;"	r
get('/withdrawals'	lib/http/routers/api_router.js	/^router.get('\/withdrawals', apiController.listQueuedWithdrawals);$/;"	r
get('BASIC_AUTH'	lib/app.js	/^if (gateway.config.get('BASIC_AUTH')) {$/;"	r
get('COLD_WALLET'	lib/api/create_ripple_payment.js	/^      address: config.get('COLD_WALLET'),$/;"	r
get('COLD_WALLET'	lib/api/fund_cold_wallet.js	/^      destination_account: config.get('COLD_WALLET'),$/;"	r
get('COLD_WALLET'	lib/api/fund_hot_wallet.js	/^      source_account: config.get('COLD_WALLET'),$/;"	r
get('COLD_WALLET'	lib/api/fund_hot_wallet.js	/^  account: config.get('COLD_WALLET')$/;"	r
get('COLD_WALLET'	lib/api/get_cold_wallet.js	/^    address: config.get('COLD_WALLET'),$/;"	r
get('COLD_WALLET'	lib/api/get_cold_wallet.js	/^  if (!config.get('COLD_WALLET')) {$/;"	r
get('COLD_WALLET'	lib/api/get_hosted_address.js	/^      address: config.get('COLD_WALLET'),$/;"	r
get('COLD_WALLET'	lib/api/get_liabilities.js	/^    account: config.get('COLD_WALLET')$/;"	r
get('COLD_WALLET'	lib/api/get_trust_lines.js	/^  var coldWallet = config.get('COLD_WALLET');$/;"	r
get('COLD_WALLET'	lib/api/get_user_accounts.js	/^      user.withdraw_address = config.get('COLD_WALLET') + '?dt=' + user.external_account_id;$/;"	r
get('COLD_WALLET'	lib/api/issue_currency.js	/^        source_account: config.get('COLD_WALLET'),$/;"	r
get('COLD_WALLET'	lib/api/issue_currency.js	/^  account: config.get('COLD_WALLET')$/;"	r
get('COLD_WALLET'	lib/api/record_incoming_payment.js	/^      to_issuer: config.get('COLD_WALLET'),$/;"	r
get('COLD_WALLET'	lib/api/refund_cold_wallet.js	/^        issuer: config.get('COLD_WALLET')$/;"	r
get('COLD_WALLET'	lib/api/refund_cold_wallet.js	/^      destination_account: config.get('COLD_WALLET'),$/;"	r
get('COLD_WALLET'	lib/api/refund_cold_wallet.js	/^  account: config.get('COLD_WALLET')$/;"	r
get('COLD_WALLET'	lib/api/register_user.js	/^              var coldWallet = config.get('COLD_WALLET');$/;"	r
get('COLD_WALLET'	lib/api/register_user.js	/^            address: config.get('COLD_WALLET'),$/;"	r
get('COLD_WALLET'	lib/api/ripple_quotes.js	/^      address: config.get('COLD_WALLET'),$/;"	r
get('COLD_WALLET'	lib/api/set_trust_line.js	/^  var coldWallet = config.get('COLD_WALLET');$/;"	r
get('COLD_WALLET'	lib/cli/set_cold_wallet.js	/^  var coldWallet = gateway.config.get('COLD_WALLET');$/;"	r
get('COLD_WALLET'	lib/core/deposit_processor.js	/^              from_issuer: gateway.config.get('COLD_WALLET'),$/;"	r
get('COLD_WALLET'	lib/core/deposit_processor.js	/^              to_issuer: gateway.config.get('COLD_WALLET'),$/;"	r
get('COLD_WALLET'	lib/core/incoming_payment.js	/^      if (payment.destination_account !== gatewayd.config.get('COLD_WALLET')) {$/;"	r
get('COLD_WALLET'	lib/core/incoming_payment.js	/^  account : gatewayd.config.get('COLD_WALLET')$/;"	r
get('COLD_WALLET'	lib/http/controllers/api/get_cold_wallet.js	/^  var coldWallet = gateway.config.get('COLD_WALLET') || {};$/;"	r
get('COLD_WALLET'	lib/http/controllers/api/set_cold_wallet.js	/^      gateway.config.get('COLD_WALLET')$/;"	r
get('COLD_WALLET'	lib/http/controllers/api/set_cold_wallet.js	/^  var coldWallet = gateway.config.get('COLD_WALLET');$/;"	r
get('COLD_WALLET'	lib/http/controllers/public/build_ripple_txt.js	/^    rippleTxt += '[accounts]\\n' + gateway.config.get('COLD_WALLET') + '\\n\\n';$/;"	r
get('COLD_WALLET'	lib/http/controllers/public/build_ripple_txt.js	/^  if (gateway.config.get('COLD_WALLET')) {$/;"	r
get('COLD_WALLET'	processes/incoming.js	/^const coldWallet            = gatewayd.config.get('COLD_WALLET');$/;"	r
get('COLD_WALLET'	test/api/create_ripple_payment.js	/^            assert.strictEqual(address.address, gatewayd.config.get('COLD_WALLET'));$/;"	r
get('COLD_WALLET'	test/api/get_hosted_address.js	/^        chai.assert.strictEqual(hostedAddress.address, gatewayd.config.get('COLD_WALLET'));$/;"	r
get('COLD_WALLET'	test/api/get_trust_lines.js	/^      coldWallet: gateway.config.get('COLD_WALLET')$/;"	r
get('COLD_WALLET'	test/api/record_incoming_payment.js	/^        chai.assert.strictEqual(rippleAddress.address, gatewayd.config.get('COLD_WALLET'));$/;"	r
get('COLD_WALLET'	test/api/record_incoming_payment.js	/^      chai.assert.strictEqual(rippleTransaction.to_issuer, gatewayd.config.get('COLD_WALLET'));$/;"	r
get('COLD_WALLET'	test/api/ripple_quotes.js	/^            address: gatewayd.config.get('COLD_WALLET'),$/;"	r
get('COLD_WALLET'	test/core/withdrawal_processor.js	/^        from_issuer: gateway.config.get('COLD_WALLET'),$/;"	r
get('COLD_WALLET'	test/core/withdrawal_processor.js	/^        to_issuer: gateway.config.get('COLD_WALLET'),$/;"	r
get('COLD_WALLET'	test/http/fund_hot_wallet.js	/^          assert.strictEqual(paymentResponse.hot_wallet.source_account, gateway.config.get('COLD_WALLET'));$/;"	r
get('CURRENCIES'	lib/api/add_currency.js	/^  var currencies = config.get('CURRENCIES') || {};$/;"	r
get('CURRENCIES'	lib/api/remove_currency.js	/^  var currencies = config.get('CURRENCIES') || {};$/;"	r
get('CURRENCIES'	lib/api/ripple_quotes.js	/^      currencies: _.keys(config.get('CURRENCIES'))$/;"	r
get('CURRENCIES'	lib/cli/list_currencies.js	/^  var currencies = gateway.config.get('CURRENCIES') || {};$/;"	r
get('CURRENCIES'	lib/http/controllers/api/list_currencies.js	/^  res.send({ 'CURRENCIES': gateway.config.get('CURRENCIES') });$/;"	r
get('CURRENCIES'	lib/http/controllers/public/build_ripple_txt.js	/^    for (var currency in gateway.config.get('CURRENCIES')) {$/;"	r
get('CURRENCIES'	lib/http/controllers/public/build_ripple_txt.js	/^  var currencies = gateway.config.get('CURRENCIES');$/;"	r
get('CURRENCIES'	lib/http/controllers/public/currencies.js	/^  for (var currency in gateway.config.get('CURRENCIES')) {$/;"	r
get('DATABASE_DIALECT'	lib/data/sequelize.js	/^  dialect: config.get('DATABASE_DIALECT'),$/;"	r
get('DATABASE_HOST'	lib/data/sequelize.js	/^  host: config.get('DATABASE_HOST'),$/;"	r
get('DATABASE_LOGGING'	lib/data/sequelize.js	/^  logging: config.get('DATABASE_LOGGING')$/;"	r
get('DATABASE_NAME'	lib/data/sequelize.js	/^var db = new Sequelize(config.get('DATABASE_NAME'), config.get('DATABASE_USER'), config.get('DATABASE_PASSWORD'), dbOptions);$/;"	r
get('DATABASE_PORT'	lib/data/sequelize.js	/^  port: config.get('DATABASE_PORT'),$/;"	r
get('DATABASE_URL'	lib/app.js	/^process.env.DATABASE_URL = gateway.config.get('DATABASE_URL');$/;"	r
get('DATABASE_URL'	lib/http/controllers/api/get_database_url.js	/^    DATABASE_URL: gateway.config.get('DATABASE_URL')$/;"	r
get('DATABASE_URL'	lib/http/controllers/api/set_database_url.js	/^  res.send({ 'DATABASE_URL': gateway.config.get('DATABASE_URL') });$/;"	r
get('DATABASE_USER'	Gruntfile.js	/^          DATABASE_URL: 'postgres:\/\/' + config.get('DATABASE_USER') + ':' + config.get('DATABASE_PASSWORD') + '@' + config.get('DATABASE_HOST') + ':' + config.get('DATABASE_PORT') + '\/' + config.get('DATABASE_NAME')$/;"	r
get('DEPOSIT_FEE'	lib/core/deposit_processor.js	/^              to_amount: self.deposit.amount * (1 - gateway.config.get('DEPOSIT_FEE')),$/;"	r
get('DOMAIN'	lib/host_meta/bridge_payment_link.js	/^    template: 'https:\/\/' + options.gatewayd.config.get('DOMAIN') + '\/v' + version + '\/bridge_payments'$/;"	r
get('DOMAIN'	lib/host_meta/bridge_payment_status_link.js	/^    template: 'https:\/\/' + options.gatewayd.config.get('DOMAIN') + '\/v' + version + '\/bridge_payments\/{id}'$/;"	r
get('DOMAIN'	lib/host_meta/bridge_quote_link.js	/^    template: 'https:\/\/' + options.gatewayd.config.get('DOMAIN') + '\/v' + version + '\/{sender}\/bridge_payments\/quotes\/{receiver}\/{amount}'$/;"	r
get('DOMAIN'	lib/host_meta/webfinger_link.js	/^    template: 'https:\/\/' + options.gatewayd.config.get('DOMAIN') + '\/.well-known\/webfinger.json?resource={uri}'$/;"	r
get('DOMAIN'	lib/http/controllers/api/get_domain.js	/^  res.send({ DOMAIN: gateway.config.get('DOMAIN') });$/;"	r
get('DOMAIN'	lib/http/controllers/api/set_domain.js	/^    res.send({ 'DOMAIN': gateway.config.get('DOMAIN') });$/;"	r
get('DOMAIN'	lib/http/controllers/public/build_ripple_txt.js	/^var domain = gateway.config.get('DOMAIN');$/;"	r
get('DOMAIN'	lib/http/controllers/public/login_user.js	/^  var adminEmail = 'admin@' + gateway.config.get('DOMAIN');$/;"	r
get('DOMAIN'	test/http/activate_user.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/add_currency.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/clear_withdrawals.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/configure_gatewayd.js	/^      .auth('admin@'+gatewayd.config.get('DOMAIN'), gatewayd.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/crud/external_accounts.js	/^  name: 'admin@'+gatewayd.config.get('DOMAIN'),$/;"	r
get('DOMAIN'	test/http/crud/external_transactions.js	/^  name: 'admin@'+gatewayd.config.get('DOMAIN'),$/;"	r
get('DOMAIN'	test/http/crud/policies.js	/^  name: 'admin@'+gatewayd.config.get('DOMAIN'),$/;"	r
get('DOMAIN'	test/http/crud/ripple_addresses.js	/^  name: 'admin@'+gatewayd.config.get('DOMAIN'),$/;"	r
get('DOMAIN'	test/http/crud/ripple_transactions.js	/^  name: 'admin@'+gatewayd.config.get('DOMAIN'),$/;"	r
get('DOMAIN'	test/http/crud/users.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/deactivate_user.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/enqueue_outgoing_payment.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/fund_hot_wallet.js	/^        .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/generate_wallet.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/get_account_balance.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/get_cold_wallet.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/get_database_url.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/get_domain.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/get_hot_wallet.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/get_key.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/get_last_payment_hash.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/get_liabilities_balance.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/get_ripple_rest_url.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/get_trust_line.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/list_cleared_transactions.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/list_currencies.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/list_external_accounts.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/list_external_user_accounts.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/list_failed_payments.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/list_incoming_payments.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/list_outgoing_payment.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/list_processes.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/list_queued_deposits.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/list_trustlines.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/list_users.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/list_withdrawals.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/refund_cold_wallet.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/register_user.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/remove_currency.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/retry_failed_payment.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/set_database_url.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/set_domain.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/set_hot_wallet.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/set_key.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/set_last_payment_hash.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/set_ripple_rest_url.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/set_trust_line.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('DOMAIN'	test/http/start_gateway.js	/^      .auth('admin@'+gateway.config.get('DOMAIN'), gateway.config.get('KEY'))$/;"	r
get('HOST'	processes/server.js	/^var host = gatewayd.config.get('HOST');$/;"	r
get('HOT_WALLET'	lib/api/create_ripple_payment.js	/^      address: config.get('HOT_WALLET').address,$/;"	r
get('HOT_WALLET'	lib/api/enqueue_outgoing_payment.js	/^    address: config.get('HOT_WALLET').address,$/;"	r
get('HOT_WALLET'	lib/api/enqueue_outgoing_payment.js	/^    tag: config.get('HOT_WALLET').id,$/;"	r
get('HOT_WALLET'	lib/api/fund_hot_wallet.js	/^      destination_account: config.get('HOT_WALLET').address,$/;"	r
get('HOT_WALLET'	lib/api/get_account_balance.js	/^    account: account || config.get('HOT_WALLET').address$/;"	r
get('HOT_WALLET'	lib/api/get_hot_wallet.js	/^    address: config.get('HOT_WALLET').address,$/;"	r
get('HOT_WALLET'	lib/api/get_hot_wallet.js	/^  if (!config.get('HOT_WALLET').address) {$/;"	r
get('HOT_WALLET'	lib/api/get_trust_lines.js	/^  var hotWallet = config.get('HOT_WALLET').address;$/;"	r
get('HOT_WALLET'	lib/api/issue_currency.js	/^        destination_account: config.get('HOT_WALLET').address,$/;"	r
get('HOT_WALLET'	lib/api/refund_cold_wallet.js	/^      source_account: config.get('HOT_WALLET').address,$/;"	r
get('HOT_WALLET'	lib/api/refund_cold_wallet.js	/^    secret: config.get('HOT_WALLET').secret,$/;"	r
get('HOT_WALLET'	lib/api/ripple_quotes.js	/^      address: config.get('HOT_WALLET').address,$/;"	r
get('HOT_WALLET'	lib/api/set_trust_line.js	/^  var hotWallet = config.get('HOT_WALLET');$/;"	r
get('HOT_WALLET'	lib/cli/fund_hot_wallet.js	/^  account: gateway.config.get('HOT_WALLET').address$/;"	r
get('HOT_WALLET'	lib/core/deposit_processor.js	/^              from_address_id: gateway.config.get('HOT_WALLET').id,$/;"	r
get('HOT_WALLET'	lib/core/outgoing_payment.js	/^const hotWallet = gatewayd.config.get('HOT_WALLET');$/;"	r
get('HOT_WALLET'	lib/http/controllers/api/get_hot_wallet.js	/^  var hotWallet = gateway.config.get('HOT_WALLET') || {};$/;"	r
get('HOT_WALLET'	lib/http/controllers/public/build_ripple_txt.js	/^    rippleTxt += '[hotwallets]\\n' + gateway.config.get('HOT_WALLET').address;$/;"	r
get('HOT_WALLET'	lib/http/controllers/public/build_ripple_txt.js	/^  if (gateway.config.get('HOT_WALLET') && gateway.config.get('HOT_WALLET').address) {$/;"	r
get('HOT_WALLET'	test/api/create_ripple_payment.js	/^              assert.strictEqual(address.address, gatewayd.config.get('HOT_WALLET').address);$/;"	r
get('HOT_WALLET'	test/api/ripple_quotes.js	/^            address: gatewayd.config.get('HOT_WALLET'),$/;"	r
get('HOT_WALLET'	test/http/fund_hot_wallet.js	/^          assert.strictEqual(paymentResponse.hot_wallet.destination_account, gateway.config.get('HOT_WALLET').address);$/;"	r
get('HOT_WALLET'	test/http/list_trustlines.js	/^var account = gateway.config.get('HOT_WALLET').address;$/;"	r
get('HTTP_SERVER'	lib/processes/process_manager.js	/^  if (config.get('HTTP_SERVER')) {$/;"	r
get('KEY'	lib/api/get_key.js	/^  var key = config.get('KEY');$/;"	r
get('KEY'	lib/api/set_key.js	/^      fn(null, config.get('KEY'));$/;"	r
get('KEY'	lib/http/controllers/api/get_key.js	/^  res.send({ 'KEY': gateway.config.get('KEY') });$/;"	r
get('KEY'	lib/http/controllers/api/set_key.js	/^        KEY: gateway.config.get('KEY')$/;"	r
get('KEY'	lib/http/controllers/public/login_user.js	/^    if (password === gateway.config.get('KEY')) {$/;"	r
get('KEY'	lib/http/passport_auth.js	/^      password === gateway.config.get('KEY')) {$/;"	r
get('KEY'	lib/http/passport_auth.js	/^  if (username === gateway.config.get('KEY') ||$/;"	r
get('KEY'	test/http/crud/external_accounts.js	/^  key: gatewayd.config.get('KEY')$/;"	r
get('KEY'	test/http/crud/external_transactions.js	/^  key: gatewayd.config.get('KEY')$/;"	r
get('KEY'	test/http/crud/policies.js	/^  key: gatewayd.config.get('KEY')$/;"	r
get('KEY'	test/http/crud/ripple_addresses.js	/^  key: gatewayd.config.get('KEY')$/;"	r
get('KEY'	test/http/crud/ripple_transactions.js	/^  key: gatewayd.config.get('KEY')$/;"	r
get('LOGGLY'	lib/data/logs.js	/^    auth: config.get('LOGGLY').auth,$/;"	r
get('LOGGLY'	lib/data/logs.js	/^    inputToken: config.get('LOGGLY').inputToken$/;"	r
get('LOGGLY'	lib/data/logs.js	/^    subdomain: config.get('LOGGLY').subdomain,$/;"	r
get('LOGGLY'	lib/data/logs.js	/^if (config.get('LOGGLY')) {$/;"	r
get('NODE_DEBUG'	lib/processes/supervisor.js	/^    var debug = config.get('NODE_DEBUG');$/;"	r
get('NODE_ENV'	config/environment.js	/^var dbConfig = DBConfigFile[nconf.get('NODE_ENV')];$/;"	r
get('NODE_ENV'	lib/data/logs.js	/^  logFile = path.join(__dirname,'\/..\/..\/logs\/'+config.get('NODE_ENV')+'.log');$/;"	r
get('NODE_ENV'	lib/data/logs.js	/^  winston.add(winston.transports.File, { filename: __dirname + '..\/..\/..\/logs\/' + config.get('NODE_ENV') + '.log' });$/;"	r
get('NODE_ENV'	lib/data/logs.js	/^if (!config.get('NODE_ENV').match('test')) {$/;"	r
get('PORT'	processes/server.js	/^var port = gatewayd.config.get('PORT');$/;"	r
get('RAYGUN_KEY'	lib/data/logs.js	/^      apiKey: config.get('RAYGUN_KEY')$/;"	r
get('RAYGUN_KEY'	lib/data/logs.js	/^  if (config.get('RAYGUN_KEY')) {$/;"	r
get('RIPPLE_REST_API'	lib/api/fund_cold_wallet.js	/^  api: config.get('RIPPLE_REST_API'),$/;"	r
get('RIPPLE_REST_API'	lib/api/fund_hot_wallet.js	/^  api: config.get('RIPPLE_REST_API'),$/;"	r
get('RIPPLE_REST_API'	lib/api/get_account_balance.js	/^    api: config.get('RIPPLE_REST_API'),$/;"	r
get('RIPPLE_REST_API'	lib/api/get_liabilities.js	/^    api: config.get('RIPPLE_REST_API'),$/;"	r
get('RIPPLE_REST_API'	lib/api/get_trust_lines.js	/^    api: config.get('RIPPLE_REST_API'),$/;"	r
get('RIPPLE_REST_API'	lib/api/issue_currency.js	/^  api: config.get('RIPPLE_REST_API'),$/;"	r
get('RIPPLE_REST_API'	lib/api/refund_cold_wallet.js	/^  api: config.get('RIPPLE_REST_API'),$/;"	r
get('RIPPLE_REST_API'	lib/api/register_user.js	/^                api: config.get('RIPPLE_REST_API'),$/;"	r
get('RIPPLE_REST_API'	lib/api/register_user.js	/^              api: config.get('RIPPLE_REST_API'),$/;"	r
get('RIPPLE_REST_API'	lib/api/ripple_quotes.js	/^  rippleRestUrl: config.get('RIPPLE_REST_API')$/;"	r
get('RIPPLE_REST_API'	lib/api/set_ripple_rest_url.js	/^      callback(null, config.get('RIPPLE_REST_API'));$/;"	r
get('RIPPLE_REST_API'	lib/api/set_trust_line.js	/^    api: config.get('RIPPLE_REST_API'),$/;"	r
get('RIPPLE_REST_API'	lib/cli/fund_hot_wallet.js	/^  api: gateway.config.get('RIPPLE_REST_API'),$/;"	r
get('RIPPLE_REST_API'	lib/core/incoming_payment.js	/^const rippleRestBaseUrl = gatewayd.config.get('RIPPLE_REST_API');$/;"	r
get('RIPPLE_REST_API'	lib/core/outgoing_payment.js	/^    api: gatewayd.config.get('RIPPLE_REST_API'),$/;"	r
get('RIPPLE_REST_API'	lib/data/models/ripple_addresses.js	/^        api: config.get('RIPPLE_REST_API'),$/;"	r
get('RIPPLE_REST_API'	lib/http/controllers/api/get_ripple_rest_url.js	/^  res.send({ 'RIPPLE_REST_API': gateway.config.get('RIPPLE_REST_API') });$/;"	r
get('RIPPLE_REST_API'	processes/incoming.js	/^const rippleRestBaseUrl     = gatewayd.config.get('RIPPLE_REST_API');$/;"	r
get('SSL'	processes/server.js	/^var ssl = (gatewayd.config.get('SSL') && (gatewayd.config.get('SSL') !== 'false'));$/;"	r
get('SSL_CERTIFICATE_PATH'	processes/server.js	/^    cert: fs.readFileSync(gatewayd.config.get('SSL_CERTIFICATE_PATH'))$/;"	r
get('SSL_KEY_PATH'	processes/server.js	/^    key: fs.readFileSync(gatewayd.config.get('SSL_KEY_PATH')),$/;"	r
get('USER_AUTH'	lib/app.js	/^if (gateway.config.get('USER_AUTH')) {$/;"	r
get('VERSION'	lib/host_meta/bridge_payment_link.js	/^  this.properties.version = options.gatewayd.config.get('VERSION');$/;"	r
get('VERSION'	lib/host_meta/bridge_payment_link.js	/^  var version = options.gatewayd.config.get('VERSION') || '1';$/;"	r
get('VERSION'	lib/host_meta/bridge_payment_status_link.js	/^  this.properties.version = options.gatewayd.config.get('VERSION');$/;"	r
get('VERSION'	lib/host_meta/bridge_payment_status_link.js	/^  var version = options.gatewayd.config.get('VERSION') || '1';$/;"	r
get('VERSION'	lib/host_meta/bridge_quote_link.js	/^  this.properties.version = options.gatewayd.config.get('VERSION');$/;"	r
get('VERSION'	lib/host_meta/bridge_quote_link.js	/^  var version = options.gatewayd.config.get('VERSION') || '1';$/;"	r
get('WEBAPP_PATH'	lib/app.js	/^app.use('\/', express.static(gateway.config.get('WEBAPP_PATH')));$/;"	r
get('WEBAPP_PATH'	lib/http/controllers/public/webapp.js	/^  var filePath = gateway.config.get('WEBAPP_PATH')+'\/app.html';$/;"	r
get('WITHDRAWAL_FEE'	lib/core/withdrawal_processor.js	/^    \/\/ var amountMinusFees = rippleTransaction.to_amount * (1 - gateway.config.get('WITHDRAWAL_FEE'));$/;"	r
get('address'	lib/data/models/ripple_addresses.js	/^        account: _this.get('address')$/;"	r
get('identifier'	test/models/configs.js	/^      Config.get('identifier').then(function(config) {$/;"	r
get('nonexistantKeyItem'	test/models/configs.js	/^    Config.get('nonexistantKeyItem').then(function(config) {$/;"	r
getAccountBalance	lib/api/get_account_balance.js	/^module.exports = function getAccountBalance(account, fn){$/;"	r
getAccountBalanceFixture	test/api/get_liabilities.js	/^var getAccountBalanceFixture = require(__dirname+'\/..\/fixtures\/liabilities');$/;"	r
getColdWallet	lib/api/get_or_fetch_last_payment_hash.js	/^var getColdWallet = require(__dirname+'\/get_cold_wallet.js');$/;"	r
getColdWallet	lib/api/set_last_payment_hash.js	/^var getColdWallet = require(__dirname+'\/get_cold_wallet.js');$/;"	r
getConfigStub	test/api/configure_gatewayd.js	/^    var getConfigStub = sinon.stub(gatewayd.config, 'get');$/;"	r
getGatewayTransaction	config/policies/invoice_policy.js	/^function getGatewayTransaction(externalTransaction) {$/;"	r
getHostedAddress	lib/api/get_hosted_address.js	/^function getHostedAddress(tag) {$/;"	r
getHostedAddress	lib/api/record_incoming_payment.js	/^ * @requires config, getHostedAddress, Promise, RippleTransactions, RippleAddresses$/;"	r
getIncoming	lib/api/ripple_quotes.js	/^  getIncoming: getRippleQuoteIncoming,$/;"	r
getKey	lib/api/get_key.js	/^function getKey(fn){$/;"	r
getKey	lib/cli/get_key.js	/^function getKey(){$/;"	r
getLastPaymentHash	lib/data/models/ripple_addresses.js	/^    getLastPaymentHash: function() {$/;"	r
getLiabilities	lib/api/get_liabilities.js	/^module.exports = function getLiabilities(fn) {$/;"	r
getLiabilities	test/api/get_liabilities.js	/^var getLiabilities = require(__dirname+'\/..\/..\/lib\/api\/get_liabilities');$/;"	r
getLink	lib/host_meta/host_meta.js	/^HostMeta.prototype.getLink = function getLink(link) {$/;"	r
getLinks	lib/host_meta/host_meta.js	/^HostMeta.prototype.getLinks = function getLinks() {$/;"	r
getOutgoing	lib/api/ripple_quotes.js	/^  getOutgoing: getRippleQuoteOutgoing$/;"	r
getPaymentSpy	test/core/incoming_payment.js	/^    getPaymentSpy = sinon.spy();$/;"	r
getPaymentSpy	test/core/incoming_payment.js	/^  var getPaymentSpy;$/;"	r
getPaymentsSpy	test/api/get_or_fetch_last_payment_hash.js	/^    getPaymentsSpy        = sinon.spy();$/;"	r
getPaymentsSpy	test/api/get_or_fetch_last_payment_hash.js	/^  var getPaymentsSpy;$/;"	r
getRippleQuoteIncoming	lib/api/ripple_quotes.js	/^function getRippleQuoteIncoming(options) {$/;"	r
getRippleQuoteOutgoing	lib/api/ripple_quotes.js	/^function getRippleQuoteOutgoing(options) {$/;"	r
getRippleTransaction	config/policies/invoice_policy.js	/^function getRippleTransaction(payment) {$/;"	r
getTrustLines	lib/api/get_trust_lines.js	/^function getTrustLines(options, fn){$/;"	r
getTrustLines	lib/cli/get_trust_lines.js	/^function getTrustLines(){$/;"	r
getUserAccounts	lib/api/get_user_accounts.js	/^function getUserAccounts(fn) {$/;"	r
getWebfingerLinks	lib/host_meta/host_meta.js	/^HostMeta.prototype.getWebfingerLinks = function getWebfingerLinks() {$/;"	r
get_type	scripts/jsawk	/^	function get_type(variable) {$/;"	f
getterMethods	lib/data/models/external_accounts.js	/^  getterMethods: {$/;"	r
getterMethods	lib/data/models/external_transactions.js	/^  getterMethods: {$/;"	r
getterMethods	lib/data/models/kyc_data.js	/^  getterMethods: {$/;"	r
getterMethods	lib/data/models/policies.js	/^  getterMethods: {$/;"	r
getterMethods	lib/data/models/ripple_addresses.js	/^  getterMethods: {$/;"	r
getterMethods	lib/data/models/ripple_transactions.js	/^  getterMethods: {$/;"	r
grunt	package.json	/^    "grunt": "^0.4.4",$/;"	f
grunt-cli	package.json	/^    "grunt-cli": "^0.1.13",$/;"	f
grunt-contrib-jshint	package.json	/^    "grunt-contrib-jshint": "^0.10.0",$/;"	f
grunt-db-migrate	package.json	/^    "grunt-db-migrate": "^0.2.0",$/;"	f
grunt-env	package.json	/^    "grunt-env": "^0.4.2",$/;"	f
grunt-jsdoc	package.json	/^    "grunt-jsdoc": "^0.5.4",$/;"	f
grunt-mocha-test	package.json	/^    "grunt-mocha-test": "^0.11.0",$/;"	f
gtlt	lib/data/pagination_util.js	/^      gtlt = sortParams.sortDirection === 'DESC' ? 'lt' : 'gt';$/;"	r
handled	lib/core/outgoing_payment.js	/^          resolve({ record: record.toJSON(), handled: normalizedError });$/;"	r
hash	lib/core/incoming_payment.js	/^            _this.payment.hash = _this.paymentNotification.hash;$/;"	r
hash	lib/core/incoming_payment.js	/^      hash                 :  payment.hash,$/;"	r
hash	lib/data/models/ripple_transactions.js	/^      var hash            = crypto.randomBytes(32).toString('hex');$/;"	r
hash	test/fixtures/incoming_payments.js	/^    hash: 'B664743F640F0F2E79BC9C9887C6A569844EB91B5D9B4F17E5E9570AB78F8F53',$/;"	r
hash	test/fixtures/incoming_payments.js	/^    payment.hash              = 'B664743F640F0F2E79BC9C9887C6A569844EB91B5D9B4F17E5E9570AB78F8F53';$/;"	r
hash	test/fixtures/ripple_rest_integration.js	/^      hash: '9DDCEBAB6D751C22755F9303B59E1E2FDC8308B551A4C5AE89343BD6F2255169',$/;"	r
head	lib/views/text/index.js	/^    head: ['#', 'Address Id', 'Amount', 'Currency'],$/;"	r
head	lib/views/text/index.js	/^    head: ['#', 'Created', 'Amount', 'Currency', 'Account Id'],$/;"	r
head	lib/views/text/index.js	/^    head: ['#', 'Name', 'Created At'],$/;"	r
head	lib/views/text/index.js	/^    head: ['#', 'User Id', 'Managed', 'Type', 'Tag', 'Created At'],$/;"	r
head	lib/views/text/index.js	/^    head: ['#', 'User Id', 'Name'],$/;"	r
head	lib/views/text/index.js	/^    head: ['Account', 'Currency', 'Limit'],$/;"	r
head	lib/views/text/index.js	/^    head: ['Currency', 'Amount', 'Counterpary'],$/;"	r
hooks	lib/data/models/gateway_transactions.js	/^  hooks: {$/;"	r
host	lib/data/database.json	/^    "host": "",$/;"	f
host	lib/data/database.json	/^    "host": "localhost",$/;"	f
host	lib/data/sequelize.js	/^  host: config.get('DATABASE_HOST'),$/;"	r
host	processes/server.js	/^var host = gatewayd.config.get('HOST');$/;"	r
host-meta-plugin	package.json	/^    "host-meta-plugin": "^0.2.0",$/;"	f
hostMeta	config/initializers/host_meta.js	/^  gatewayd.hostMeta = new HostMeta({$/;"	r
hostedAddress	test/core/withdrawal_processor.js	/^      hostedAddress = registeredUser.hosted_address;$/;"	r
hostedAddress	test/core/withdrawal_processor.js	/^  var hostedAddress, withdrawalProcessor;$/;"	r
hosted_address	lib/api/register_user.js	/^                    response.hosted_address = hosted_address;$/;"	r
hotWallet	lib/api/get_trust_lines.js	/^    hotWallet = options.coldWallet;$/;"	r
hotWallet	lib/api/get_trust_lines.js	/^    hotWallet = options.hotWallet;$/;"	r
hotWallet	lib/api/get_trust_lines.js	/^  var hotWallet = config.get('HOT_WALLET').address;$/;"	r
hotWallet	lib/api/set_trust_line.js	/^  var hotWallet = config.get('HOT_WALLET');$/;"	r
hotWallet	lib/http/controllers/api/get_hot_wallet.js	/^  var hotWallet = gateway.config.get('HOT_WALLET') || {};$/;"	r
hotWallet	test/api/get_trust_lines.js	/^      hotWallet: 'r1234...e',$/;"	r
hotWallet	test/api/get_trust_lines.js	/^      hotWallet: walletsFixture.HOT_WALLET.address,$/;"	r
hot_wallet	lib/api/set_hot_wallet.js	/^      var hot_wallet = config.get(key);$/;"	r
hot_wallet	lib/http/controllers/api/fund_hot_wallet.js	/^      res.send(200, { success: true, hot_wallet: response });$/;"	r
http	test/http/enqueue_outgoing_payment.js	/^var http = require('supertest');$/;"	r
https	processes/server.js	/^var https = require('https');$/;"	r
i	lib/cli/db_ripple_tx_seed.js	/^  var i = howMany || 1;$/;"	r
id	config-example.json	/^    "id": 6$/;"	f
id	lib/api/clear_withdrawal.js	/^        id: withdrawal.id,$/;"	r
id	lib/api/clear_withdrawal.js	/^      id: id,$/;"	r
id	lib/api/finalize_deposit.js	/^    id: opts.id,$/;"	r
id	lib/api/set_hot_wallet.js	/^      id: address.id$/;"	r
id	lib/core/deposit_processor.js	/^            id: self.deposit.ripple_transaction_id,$/;"	r
id	lib/core/deposit_processor.js	/^      id: self.deposit.external_account_id$/;"	r
id	lib/core/deposit_processor.js	/^      id: self.deposit.id,$/;"	r
id	lib/core/withdrawal_processor.js	/^            id: gatewayTransaction.external_transaction_id,$/;"	r
id	lib/data/migrations/20131216193924-users.js	/^	id: { type: 'int', primaryKey: true, autoIncrement: true },$/;"	r
id	lib/data/migrations/20131216232955-external-transactions.js	/^		id: { type: 'int', primaryKey: true, autoIncrement: true },$/;"	r
id	lib/data/migrations/20131216233400-ripple-transactions.js	/^		id:                { type: 'int', primaryKey: true, autoIncrement: true },$/;"	r
id	lib/data/migrations/20131217004626-gateway-accounts.js	/^    id: { type: 'int', primaryKey: true, autoIncrement: true },$/;"	r
id	lib/data/migrations/20131219233339-ripple-addresses.js	/^    id: { type: 'int', primaryKey: true, autoIncrement: true },	 	$/;"	r
id	lib/data/migrations/20140119011932-external-accounts.js	/^    id: { type: 'int', primaryKey: true, autoIncrement: true },	 	$/;"	r
id	lib/data/migrations/20140418131831-create-kyc-data.js	/^    id: { type: 'int', primaryKey: true, autoIncrement: true },	 	$/;"	r
id	lib/data/migrations/20140731062106-create-policies.js	/^    id: {$/;"	r
id	lib/data/migrations/20140819202523-create-gateway-transactions.js	/^    id: {$/;"	r
id	lib/data/migrations/20140918033326-create-bridges.js	/^    id: {$/;"	r
id	lib/data/migrations/20141015171506-create-configs.js	/^    id: {$/;"	r
id	lib/data/models/bridges.js	/^  id: {$/;"	r
id	lib/data/models/configs.js	/^  id: {$/;"	r
id	lib/data/models/external_accounts.js	/^  id: { type: Sequelize.INTEGER, primaryKey: true, autoIncrement: true },$/;"	r
id	lib/data/models/external_transactions.js	/^  id: {$/;"	r
id	lib/data/models/gateway_transactions.js	/^  id: {$/;"	r
id	lib/data/models/kyc_data.js	/^  id: { $/;"	r
id	lib/data/models/policies.js	/^  id: {$/;"	r
id	lib/data/models/ripple_addresses.js	/^  id: { $/;"	r
id	lib/data/models/ripple_transactions.js	/^  id: { $/;"	r
id	lib/data/models/users.js	/^  id: { $/;"	r
id	lib/http/controllers/resources/policies.js	/^        id: request.params.id$/;"	r
id	lib/views/text/index.js	/^      account.id,$/;"	r
id	lib/views/text/index.js	/^      address.id,$/;"	r
id	lib/views/text/index.js	/^      payment.id,$/;"	r
id	lib/views/text/index.js	/^      transaction.id,$/;"	r
id	lib/views/text/index.js	/^      user.id,$/;"	r
id	test/fixtures/incoming_payments.js	/^      id               : 1$/;"	r
id	test/fixtures/outgoing_payments.js	/^      id: 820,$/;"	r
inLedger	test/fixtures/incoming_payments.js	/^    inLedger: 10481721,$/;"	r
include	lib/api/list_outgoing_payments.js	/^    include: [$/;"	r
include	lib/http/controllers/resources/external_transactions.js	/^    include: [$/;"	r
include	lib/http/controllers/resources/external_transactions.js	/^  query.include = [$/;"	r
include	lib/http/controllers/resources/ripple_transactions.js	/^    include: [$/;"	r
include	lib/http/controllers/resources/ripple_transactions.js	/^  include: [$/;"	r
include	lib/http/controllers/resources/ripple_transactions.js	/^  query.include = [$/;"	r
include	test/models/ripple_associations.js	/^      include: [$/;"	r
incoming	test/fixtures/ripple_quotes.js	/^    incoming: {$/;"	r
incomingPayment	lib/core/incoming_payment.js	/^    var incomingPayment   = {$/;"	r
incomingPayment	lib/core/withdrawal_processor.js	/^  this.incomingPayment = incomingPayment;$/;"	r
incomingPayment	processes/incoming.js	/^      var incomingPayment = new IncomingPayment(paymentNotification);$/;"	r
incomingPayment	test/core/incoming_payment.js	/^    var incomingPayment = new IncomingPayment(incomingPaymentFixtures.incoming_payments.notification);$/;"	r
incomingPayments	test/fixtures/incoming_payments.js	/^    var incomingPayments      = {};$/;"	r
incomingTransaction	test/core/withdrawal_processor.js	/^        incomingTransaction = transaction;$/;"	r
incomingTransaction	test/core/withdrawal_processor.js	/^var incomingTransaction;$/;"	r
incoming_payments	test/fixtures/incoming_payments.js	/^module.exports.incoming_payments = {$/;"	r
independentAddress	test/core/deposit_processor.js	/^      independentAddress = registeredUser.ripple_address;$/;"	r
independentAddress	test/core/deposit_processor.js	/^var independentAddress;$/;"	r
independentAddress	test/core/withdrawal_processor.js	/^      independentAddress = registeredUser.ripple_address;$/;"	r
independentAddress	test/core/withdrawal_processor.js	/^var independentAddress;$/;"	r
index	lib/http/controllers/resources/bridges.js	/^  index: index,$/;"	r
index	lib/http/controllers/resources/bridges.js	/^function index(req, res){$/;"	r
index	lib/http/controllers/resources/external_accounts.js	/^  index: index,$/;"	r
index	lib/http/controllers/resources/external_accounts.js	/^function index(req, res){$/;"	r
index	lib/http/controllers/resources/external_transactions.js	/^  index: index,$/;"	r
index	lib/http/controllers/resources/external_transactions.js	/^function index(req, res){$/;"	r
index	lib/http/controllers/resources/gateway_transactions.js	/^  index: index,$/;"	r
index	lib/http/controllers/resources/gateway_transactions.js	/^function index(req, res){$/;"	r
index	lib/http/controllers/resources/policies.js	/^  index: function(request, response) {$/;"	r
index	lib/http/controllers/resources/ripple_addresses.js	/^  index: index,$/;"	r
index	lib/http/controllers/resources/ripple_addresses.js	/^function index(req, res){$/;"	r
index	lib/http/controllers/resources/ripple_transactions.js	/^  index: index,$/;"	r
index	lib/http/controllers/resources/ripple_transactions.js	/^function index(req, res){$/;"	r
index	lib/http/controllers/resources/users.js	/^  index: index,$/;"	r
index	lib/http/controllers/resources/users.js	/^function index(req, res){$/;"	r
index	test/utils/pagination_util.js	/^      index: '015-01-24 00:47:25.172000'$/;"	r
index	test/utils/pagination_util.js	/^      index: '015-01-24 00:47:25.172000',$/;"	r
initModel	lib/data/models/external_transactions.js	/^ExternalTransaction.initModel = function(forced) {$/;"	r
initModel	lib/data/models/ripple_addresses.js	/^RippleAddress.initModel = function(forced) {$/;"	r
initModel	lib/data/models/ripple_transactions.js	/^RippleTransactions.initModel = function(forced) {$/;"	r
initializers	index.js	/^var initializers = requireAll(__dirname+'\/config\/initializers\/');$/;"	r
input	lib/api/create_gateway_transaction.js	/^      input            = options.external;$/;"	r
input	lib/api/create_gateway_transaction.js	/^      input  = options.ripple;$/;"	r
input	lib/api/create_gateway_transaction.js	/^    var input, output, ripple, external;$/;"	r
inputToken	lib/data/logs.js	/^    inputToken: config.get('LOGGLY').inputToken$/;"	r
instanceMethods	lib/data/models/ripple_addresses.js	/^  instanceMethods: {$/;"	r
insufficient_balance	lib/ripple_rest_error_handler.js	/^    insufficient_balance: 'insufficientFeeBalance'$/;"	r
insufficient_balance	lib/ripple_rest_error_handler.js	/^    insufficient_balance: 'terINSUF_FEE_B',$/;"	r
insufficient_funds	test/fixtures/ripple_rest_integration.js	/^    insufficient_funds: {$/;"	r
internalError	lib/http/response_handler.js	/^  internalError: internalError,$/;"	r
internalError	lib/http/response_handler.js	/^function internalError(response, message, body) {$/;"	r
internalServerError	lib/http/response_handler.js	/^  internalServerError: 500$/;"	r
invalid	test/fixtures/liabilities.js	/^  invalid: {$/;"	r
invalid	test/fixtures/ripple_quotes.js	/^  invalid: {$/;"	r
invalidPayment	test/core/incoming_payment.js	/^    var invalidPayment = incomingPaymentFixtures.incoming_payments.valid;$/;"	r
invalidRequest	lib/http/response_handler.js	/^  invalidRequest: 'invalid_request',$/;"	r
invalidRequest	lib/http/response_handler.js	/^  invalidRequest: invalidRequestError,$/;"	r
invalidRequestError	lib/http/response_handler.js	/^function invalidRequestError(response, message, body) {$/;"	r
invalid_address	test/fixtures/outgoing_payments.js	/^    invalid_address: {$/;"	r
invalid_amount	test/fixtures/outgoing_payments.js	/^    invalid_amount: {$/;"	r
invalid_currency	test/fixtures/outgoing_payments.js	/^    invalid_currency: {$/;"	r
invalid_destination_tag	test/fixtures/outgoing_payments.js	/^    invalid_destination_tag: {$/;"	r
invalid_issuer_address	test/fixtures/outgoing_payments.js	/^    invalid_issuer_address: {$/;"	r
invalid_request	lib/ripple_rest_error_handler.js	/^    invalid_request: function(error) {$/;"	r
invalid_requests	test/fixtures/ripple_rest_integration.js	/^    invalid_requests: {$/;"	r
invoiceIdValue	lib/data/models/ripple_transactions.js	/^      var invoiceIdValue  = _.isEmpty(value) ? hash : value;$/;"	r
invoice_id	lib/api/create_ripple_payment.js	/^    invoice_id: options.invoice_id$/;"	r
invoice_id	lib/api/enqueue_outgoing_payment.js	/^    invoice_id: options.invoice_id$/;"	r
invoice_id	lib/api/record_incoming_payment.js	/^        invoice_id: options.invoice_id,$/;"	r
invoice_id	lib/api/record_incoming_payment.js	/^      invoice_id: incomingPayment.invoice_id,$/;"	r
invoice_id	lib/cli/db_ripple_tx_seed.js	/^      invoice_id: crypto.randomBytes(32).toString('hex').toUpperCase(),$/;"	r
invoice_id	lib/core/incoming_payment.js	/^      invoice_id           :  payment.invoice_id,$/;"	r
invoice_id	lib/core/outgoing_payment.js	/^        paymentObject.payment.invoice_id = _this.record.invoice_id;$/;"	r
invoice_id	lib/data/models/external_transactions.js	/^  invoice_id: {$/;"	r
invoice_id	lib/data/models/ripple_transactions.js	/^    invoice_id: function (value) {$/;"	r
invoice_id	lib/data/models/ripple_transactions.js	/^  invoice_id: {$/;"	r
invoice_id	test/fixtures/incoming_payments.js	/^    invoice_id: '',$/;"	r
invoice_id	test/fixtures/outgoing_payments.js	/^      invoice_id: '03AC674216F3E15C761EE1A5E255F067953623C8B388B4459E13F978D7C846F4',$/;"	r
invoice_id	test/fixtures/ripple_rest_integration.js	/^      invoice_id: '',$/;"	r
invoice_id	test/fixtures/transactions.js	/^    invoice_id: '',$/;"	r
invoice_id	test/fixtures/transactions.js	/^    invoice_id: 'bc7e8a24e2911a5827c9b33d618531ef094937f2b3803a591c625d0ede1fffc6',$/;"	r
invoice_id	test/models/ripple_transactions.js	/^      invoice_id: '03AC674216F3E15C761EE1A5E255F067953623C8B388B4459E13F978D7C846F4',$/;"	r
invoice_id	test/models/ripple_transactions.js	/^      invoice_id: '12323'$/;"	r
invoice_id	test/models/ripple_transactions.js	/^      invoice_id: [ 'Must be a valid SHA-256 hash' ]$/;"	r
invoice_id	test/utils/db_ripple_seed.js	/^      invoice_id: chanceInvoiceId,$/;"	r
isAlphanumeric	lib/data/models/ripple_addresses.js	/^      isAlphanumeric: true$/;"	r
isAlphanumeric	lib/data/models/ripple_transactions.js	/^      isAlphanumeric: true$/;"	r
isDecimal	lib/data/models/ripple_transactions.js	/^      isDecimal: true$/;"	r
isIn	lib/data/models/bridges.js	/^      isIn: [['to-ripple', 'from-ripple']]$/;"	r
isIn	lib/data/models/gateway_transactions.js	/^      isIn: [['to-ripple', 'from-ripple']]$/;"	r
isIn	lib/data/models/ripple_addresses.js	/^      isIn: [['hot','cold','hosted','independent']]$/;"	r
isIn	lib/data/models/ripple_transactions.js	/^      isIn: [['to-ripple', 'from-ripple']]$/;"	r
isInt	lib/data/models/ripple_addresses.js	/^      isInt: true$/;"	r
isInt	lib/data/models/ripple_transactions.js	/^      isInt: true$/;"	r
isRippleAddress	lib/data/models/ripple_addresses.js	/^      isRippleAddress: function(value) {$/;"	r
isRippleAddress	lib/data/models/ripple_transactions.js	/^      isRippleAddress: function(value) {$/;"	r
isUUID	lib/data/models/gateway_transactions.js	/^      isUUID: 4$/;"	r
isValidHash	lib/data/models/external_transactions.js	/^      isValidHash: function(value) {$/;"	r
isValidHash	lib/data/models/ripple_transactions.js	/^      isValidHash: function(value) {$/;"	r
issueCurrency	lib/api/issue_currency.js	/^function issueCurrency(amount, currency, secret, callback) {$/;"	r
issuer	lib/api/fund_cold_wallet.js	/^        issuer: payment.issuer || ''$/;"	r
issuer	lib/api/fund_hot_wallet.js	/^        issuer: payment.issuer || ''$/;"	r
issuer	lib/api/issue_currency.js	/^          issuer: ''$/;"	r
issuer	lib/api/refund_cold_wallet.js	/^        issuer: config.get('COLD_WALLET')$/;"	r
issuer	lib/api/register_user.js	/^                    issuer: ''$/;"	r
issuer	lib/core/utils.js	/^      issuer: nonXrpChanges[0].issuer$/;"	r
issuer	lib/core/utils.js	/^    issuer: changes[0].issuer$/;"	r
issuer	test/api/record_incoming_payment.js	/^        issuer: 'r123'$/;"	r
issuer	test/api/record_incoming_payment.js	/^        issuer: address$/;"	r
issuer	test/fixtures/incoming_payments.js	/^          issuer: 'rMinhWxZz4jeHoJGyddtmwg6dWhyqQKtJz' } ],$/;"	r
issuer	test/fixtures/incoming_payments.js	/^        issuer: 'rMinhWxZz4jeHoJGyddtmwg6dWhyqQKtJz' } ],$/;"	r
issuer	test/fixtures/incoming_payments.js	/^      issuer: 'rMinhWxZz4jeHoJGyddtmwg6dWhyqQKtJz' },$/;"	r
issuer	test/fixtures/incoming_payments.js	/^      issuer: 'rMinhWxZz4jeHoJGyddtmwg6dWhyqQKtJz',$/;"	r
issuer	test/fixtures/incoming_payments.js	/^      issuer: 'rscJF4TWS2jBe43MvUomTtCcyrbtTRMSNr',$/;"	r
issuer	test/fixtures/outgoing_payments.js	/^      issuer: 'r123'$/;"	r
issuer	test/fixtures/transactions.js	/^      issuer: ''$/;"	r
issuer	test/http/enqueue_outgoing_payment.js	/^        issuer:  '456inv@lid'$/;"	r
istanbul	package.json	/^    "istanbul": "^0.3.2",$/;"	f
isuser	lib/cli/enqueue_outgoing_payment.js	/^    isuser: issuer$/;"	r
jbuilder	package.json	/^    "jbuilder": "",$/;"	f
job	processes/deposits.js	/^    job: function(deposit, callback) {$/;"	r
job	processes/outgoing.js	/^    job: function(outgoingPayment, callback) {$/;"	r
job	processes/policy_engine.js	/^  job: function(deposit, next) {$/;"	r
job	processes/withdrawals.js	/^  job: function(incomingPayment, callback) {$/;"	r
jsdoc	Gruntfile.js	/^    jsdoc : {$/;"	r
jshint	Gruntfile.js	/^    jshint: {$/;"	r
jshint	package.json	/^    "jshint": "^2.5.0",$/;"	f
jshintrc	Gruntfile.js	/^        jshintrc: '.jshintrc'$/;"	r
json	lib/data/migrations/20141015171506-create-configs.js	/^    json: {$/;"	r
json	lib/data/models/configs.js	/^  json: {$/;"	r
key	lib/api/get_key.js	/^  var key = config.get('KEY');$/;"	r
key	lib/api/set_cold_wallet.js	/^  var key = 'COLD_WALLET';$/;"	r
key	lib/api/set_hot_wallet.js	/^    var key = 'HOT_WALLET';$/;"	r
key	lib/data/migrations/20141015171506-create-configs.js	/^    key: {$/;"	r
key	lib/data/models/configs.js	/^  key: {$/;"	r
key	processes/server.js	/^    key: fs.readFileSync(gatewayd.config.get('SSL_KEY_PATH')),$/;"	r
key	test/http/crud/external_accounts.js	/^  key: gatewayd.config.get('KEY')$/;"	r
key	test/http/crud/external_transactions.js	/^  key: gatewayd.config.get('KEY')$/;"	r
key	test/http/crud/policies.js	/^  key: gatewayd.config.get('KEY')$/;"	r
key	test/http/crud/ripple_addresses.js	/^  key: gatewayd.config.get('KEY')$/;"	r
key	test/http/crud/ripple_transactions.js	/^  key: gatewayd.config.get('KEY')$/;"	r
kill	lib/processes/supervisor.js	/^pm2.kill       = Promise.promisify(pm2.killDaemon);$/;"	r
kyc_id	lib/data/migrations/20131216193924-users.js	/^    kyc_id: { type: 'int' },$/;"	r
kyc_id	lib/data/models/users.js	/^  kyc_id: Sequelize.INTEGER,$/;"	r
lastHash	processes/incoming.js	/^      monitor.lastHash = paymentHash;$/;"	r
lastPaymentHash	lib/api/get_or_fetch_last_payment_hash.js	/^      var lastPaymentHash = address.getLastPaymentHash();$/;"	r
lastPaymentHash	lib/data/models/ripple_addresses.js	/^      data.lastPaymentHash = hash;$/;"	r
ledger	test/fixtures/incoming_payments.js	/^    ledger: '10326017',$/;"	r
ledger	test/fixtures/ripple_rest_integration.js	/^      ledger: '',$/;"	r
ledger_index	test/fixtures/incoming_payments.js	/^    ledger_index: 10481721,$/;"	r
limit	lib/api/register_user.js	/^                limit: userOpts.amount,$/;"	r
limit	lib/api/set_trust_line.js	/^    limit: amount,$/;"	r
limit	lib/data/pagination_util.js	/^      limit: 30$/;"	r
limit	lib/data/pagination_util.js	/^      limit: request.count$/;"	r
limit	lib/data/pagination_util.js	/^    query.limit = sortParams.limit;$/;"	r
limit	lib/views/text/index.js	/^      line.limit$/;"	r
limit	test/utils/pagination_util.js	/^      limit: '10',$/;"	r
lint	package.json	/^    "lint": "grunt jshint"$/;"	f
listClearedPayments	lib/api/list_cleared.js	/^function listClearedPayments(fn) {$/;"	r
listCurrencies	lib/cli/list_currencies.js	/^function listCurrencies(){$/;"	r
listFailedPayments	lib/api/list_failed_payments.js	/^function listFailedPayments(fn){$/;"	r
listFailedPayments	lib/cli/list_failed_payments.js	/^function listFailedPayments() {$/;"	r
listIncomingPayments	lib/api/list_incoming_payments.js	/^function listIncomingPayments(fn) {$/;"	r
listIncomingPayments	lib/cli/list_incoming_payments.js	/^function listIncomingPayments() {$/;"	r
listOutgoingPayments	lib/api/list_outgoing_payments.js	/^function listOutgoingPayments(callback) {$/;"	r
listOutgoingPayments	lib/cli/list_outgoing_payments.js	/^function listOutgoingPayments() {$/;"	r
listOutgoingPayments	test/api/list_outgoing_payments.js	/^var listOutgoingPayments = require(__dirname+'\/..\/..\/lib\/api\/list_outgoing_payments.js');$/;"	r
listProcesses	lib/api/list_processes.js	/^function listProcesses(opts, fn) {$/;"	r
listProcesses	lib/processes/process_manager.js	/^  listProcesses: function(opts, fn) {$/;"	r
listQueuedDeposits	lib/api/list_queued_deposits.js	/^function listQueuedDeposits(fn) {$/;"	r
listQueuedDeposits	lib/cli/list_queued_deposits.js	/^function listQueuedDeposits() {$/;"	r
listQueuedWithdrawals	lib/cli/list_queued_withdrawals.js	/^function listQueuedWithdrawals(){$/;"	r
listUserExternalAccounts	lib/api/list_user_external_accounts.js	/^function listUserExternalAccounts(userId, fn){$/;"	r
listUserExternalAccounts	lib/cli/list_user_external_accounts.js	/^function listUserExternalAccounts(userId) {$/;"	r
listUsers	lib/api/list_users.js	/^function listUsers(fn){$/;"	r
listUsers	lib/cli/list_users.js	/^function listUsers() {$/;"	r
lodash	package.json	/^    "lodash": "^2.4.1",$/;"	f
logDirectory	lib/data/logs.js	/^  logDirectory = path.join(__dirname,'\/..\/..\/logs');$/;"	r
logDirectory	lib/data/logs.js	/^var logDirectory, logFile, Raygun;$/;"	r
logFile	lib/data/logs.js	/^  logFile = path.join(__dirname,'\/..\/..\/logs\/'+config.get('NODE_ENV')+'.log');$/;"	r
logFunction	lib/cli/db_ripple_tx_seed.js	/^function logFunction() {$/;"	r
logger	index.js	/^exports.logger = require(__dirname+'\/lib\/data\/logs.js');$/;"	r
logger	lib/api/ripple_quotes.js	/^  logger: logs,$/;"	r
logger	lib/data/logs.js	/^global.logger  = winston;$/;"	r
logger	lib/data/migrations/20140221022445-add-unique-dual-index.js	/^var logger = require('winston');$/;"	r
logger	lib/processes/supervisor.js	/^var logger  = require(__dirname+'\/..\/..\/lib\/data\/logs.js');$/;"	r
logging	lib/data/database.json	/^    "logging": false$/;"	f
logging	lib/data/sequelize.js	/^  logging: config.get('DATABASE_LOGGING')$/;"	r
login	lib/http/controllers/admin/login.js	/^function login(request, response) {$/;"	r
lookupRippleAddressDestination	config/policies/bridge_policy.js	/^function lookupRippleAddressDestination(payment) {$/;"	r
lookupRippleAddressDestination	config/policies/user_policy.js	/^function lookupRippleAddressDestination(deposit) {$/;"	r
lt	test/utils/pagination_util.js	/^          lt: '015-01-24 00:47:25.172000'$/;"	r
main	lib/data/package.json	/^  "main": "index.js",$/;"	f
makeArrayOfPayments	test/fixtures/incoming_payments.js	/^  makeArrayOfPayments: function() {$/;"	r
makeRegex	scripts/jsawk	/^    function makeRegex(t,a,b,c,d){$/;"	f
managed	lib/api/create_ripple_payment.js	/^      managed: false,$/;"	r
managed	lib/api/create_ripple_payment.js	/^      managed: true,$/;"	r
managed	lib/api/enqueue_outgoing_payment.js	/^    managed: false,$/;"	r
managed	lib/api/enqueue_outgoing_payment.js	/^    managed: true,$/;"	r
managed	lib/api/get_cold_wallet.js	/^    managed: true$/;"	r
managed	lib/api/get_hosted_address.js	/^      managed: true$/;"	r
managed	lib/api/get_hot_wallet.js	/^    managed: true$/;"	r
managed	lib/api/record_incoming_payment.js	/^      managed: false,$/;"	r
managed	lib/api/register_user.js	/^            managed: true,$/;"	r
managed	lib/api/register_user.js	/^        managed: false,$/;"	r
managed	lib/api/set_hot_wallet.js	/^        managed: true,$/;"	r
managed	lib/data/migrations/20131219233339-ripple-addresses.js	/^    managed: { type: 'boolean', default: false, notNull: true},$/;"	r
managed	lib/data/models/ripple_addresses.js	/^  managed: { $/;"	r
managed	lib/views/text/index.js	/^      address.managed,$/;"	r
managed	test/api/list_outgoing_payments.js	/^        managed: true,$/;"	r
managed	test/api/list_outgoing_payments.js	/^      managed: true,$/;"	r
managed	test/fixtures/outgoing_payments.js	/^      managed: false,$/;"	r
managed	test/models/ripple_addresses.js	/^      managed: false,$/;"	r
managed	test/models/ripple_associations.js	/^          managed: false,$/;"	r
managed	test/models/ripple_associations.js	/^        managed: false,$/;"	r
map	scripts/jsawk	/^    function map(arr, fun \/*, thisp*\/){$/;"	f
max	lib/cli/db_ripple_tx_seed.js	/^      direction: direction[chance.integer({min: 0, max: 1})]$/;"	r
max	lib/cli/db_ripple_tx_seed.js	/^      from_address_id: chance.integer({min: 1, max: 99999}),$/;"	r
max	lib/cli/db_ripple_tx_seed.js	/^      to_address_id: chance.integer({min: 1, max: 99999}),$/;"	r
max	test/utils/db_ripple_seed.js	/^        chanceFromAddressId = chance.integer({min: 1, max: 99999}),$/;"	r
max	test/utils/db_ripple_seed.js	/^    var chanceToAddressId = chance.integer({min: 1, max: 99999}),$/;"	r
max_ledger	lib/ripple_rest_error_handler.js	/^    max_ledger: 'tefMAX_LEDGER',$/;"	r
memos	lib/api/create_ripple_payment.js	/^    memos: options.memos,$/;"	r
memos	lib/api/enqueue_outgoing_payment.js	/^    memos: options.memos,$/;"	r
memos	lib/api/record_incoming_payment.js	/^      memos: incomingPayment.memos,$/;"	r
memos	lib/api/record_incoming_payment.js	/^    memos: incomingPayment.memos$/;"	r
memos	lib/core/incoming_payment.js	/^      memos                :  payment.memos$/;"	r
memos	lib/core/outgoing_payment.js	/^        paymentObject.payment.memos = _this.record.memos;$/;"	r
memos	lib/data/models/external_transactions.js	/^  memos: {$/;"	r
memos	lib/data/models/ripple_transactions.js	/^    memos: function () {$/;"	r
memos	lib/data/models/ripple_transactions.js	/^    memos: function (value) {$/;"	r
memos	lib/data/models/ripple_transactions.js	/^  memos: {$/;"	r
memos	test/api/record_incoming_payment.js	/^      memos: [{ MemoData: '7274312E302E3132', MemoType: '636C69656E74' }]$/;"	r
memos	test/fixtures/incoming_payments.js	/^      memos            : '[{"MemoData":"7274312E312E33","MemoType":"636C69656E74"}]',$/;"	r
memos	test/fixtures/incoming_payments.js	/^    memos: [ { MemoData: '7274312E312E33', MemoType: '636C69656E74' } ]$/;"	r
memos	test/fixtures/outgoing_payments.js	/^      memos: [$/;"	r
memos	test/fixtures/transactions.js	/^    memos: 'this is a memo 123',$/;"	r
memos	test/models/ripple_transactions.js	/^      memos: [{ MemoData: '7274312E302E3132', MemoType: '636C69656E74' }]$/;"	r
mergeQueryParams	lib/data/pagination_util.js	/^  mergeQueryParams: function(request, query) {$/;"	r
message	lib/api/clear_withdrawal.js	/^          message: 'not found'$/;"	r
message	lib/api/clear_withdrawal.js	/^        message: 'already cleared'$/;"	r
message	lib/api/enqueue_outgoing_payment.js	/^        message: 'invalid ripple address'$/;"	r
message	lib/api/enqueue_outgoing_payment.js	/^        message: 'must be a currency code'$/;"	r
message	lib/api/enqueue_outgoing_payment.js	/^        message: 'must be an unsigned integer'$/;"	r
message	lib/api/enqueue_outgoing_payment.js	/^        message: 'must be numeric'$/;"	r
message	lib/api/retry_failed_payment.js	/^          message: 'does not exist'$/;"	r
message	lib/errors/enqueue_outgoing_payment_error.js	/^  this.message = options.message;$/;"	r
message	lib/http/controllers/api/clear_withdrawal.js	/^            message: 'not found'$/;"	r
message	lib/http/controllers/api/retry_failed_payment.js	/^          message: 'does not exist'$/;"	r
message	lib/http/controllers/api/retry_failed_payment.js	/^          message: 'is not failed'$/;"	r
message	lib/http/response_handler.js	/^    content.message = message;$/;"	r
message	lib/http/response_handler.js	/^function internalError(response, message, body) {$/;"	r
message	lib/http/response_handler.js	/^function invalidRequestError(response, message, body) {$/;"	r
message	lib/http/response_handler.js	/^function notFoundError(response, message, body) {$/;"	r
message	lib/http/response_handler.js	/^function transactionError(response, message, body) {$/;"	r
message	test/errors/enqueue_outgoing_payment.js	/^      message: 'invalid ripple address',$/;"	r
message	test/fixtures/ripple_rest_integration.js	/^        message: 'A transaction hash was not supplied and there were no entries matching the client_resource_id.'$/;"	r
message	test/fixtures/ripple_rest_integration.js	/^        message: 'Please ensure that the source_account has sufficient funds to execute the payment. If it does there may be insufficient liquidity in the network to execute this payment right now'$/;"	r
message	test/fixtures/ripple_rest_integration.js	/^        message: 'The server is experiencing heavy load and is unable to process the request right now. Please try again.'$/;"	r
migrate	Gruntfile.js	/^    migrate: {$/;"	r
minimalExternalTransaction	test/fixtures/transactions.js	/^  minimalExternalTransaction: {$/;"	r
mocha	lib/data/package.json	/^    "mocha": "1.18.0",$/;"	f
mocha	package.json	/^    "mocha": "~1.14.0",$/;"	f
mochaTest	Gruntfile.js	/^    mochaTest: {$/;"	r
model	lib/data/controllers/external_accounts.js	/^    var model = externalAccountModel.build(opts);$/;"	r
model	lib/data/controllers/ripple_addresses.js	/^    var model = rippleAddressModel.build(opts);$/;"	r
model	lib/data/controllers/ripple_transactions.js	/^    var model = rippleTransactionModel.build(opts); $/;"	r
model	lib/data/controllers/users.js	/^    var model = userModel.build(opts);$/;"	r
models	index.js	/^exports.models = requireAll(__dirname +'\/lib\/data\/models\/');$/;"	r
models	lib/data/index.js	/^exports.models = models; $/;"	r
models	lib/data/index.js	/^var models = requireAll(__dirname+'\/models');$/;"	r
monitor	processes/incoming.js	/^  var monitor = new Monitor(gatewayd);$/;"	r
name	.settings/launch.json	/^			"name": "Attach gatewayd:deposits",$/;"	f
name	.settings/launch.json	/^			"name": "Attach gatewayd:incoming",$/;"	f
name	.settings/launch.json	/^			"name": "Attach gatewayd:outgoing",$/;"	f
name	.settings/launch.json	/^			"name": "Attach gatewayd:server",$/;"	f
name	.settings/launch.json	/^			"name": "Attach gatewayd:withdrawals",$/;"	f
name	.settings/launch.json	/^			"name": "Generate wallet",$/;"	f
name	.settings/launch.json	/^			"name": "Launch gatewayd",$/;"	f
name	lib/api/register_user.js	/^    name: opts.name,$/;"	r
name	lib/cli/register_user.js	/^    name: username,$/;"	r
name	lib/core/policy_engine.js	/^      name: name,$/;"	r
name	lib/data/controllers/external_accounts.js	/^            name: error, $/;"	r
name	lib/data/migrations/20131216193924-users.js	/^    name: { type: 'string', notNull: true, unique: true },$/;"	r
name	lib/data/migrations/20140119011932-external-accounts.js	/^    name: { type: 'string', notNull: true },$/;"	r
name	lib/data/migrations/20140418131831-create-kyc-data.js	/^    name: { type: 'string', notNull: true },$/;"	r
name	lib/data/migrations/20140731062106-create-policies.js	/^    name: {$/;"	r
name	lib/data/models/external_accounts.js	/^  name: { $/;"	r
name	lib/data/models/kyc_data.js	/^  name: {$/;"	r
name	lib/data/models/policies.js	/^  name: {$/;"	r
name	lib/data/models/users.js	/^  name: { type: Sequelize.STRING, unique: true },$/;"	r
name	lib/data/package.json	/^  "name": "ripple-gateway-data-sequelize",$/;"	f
name	lib/errors/enqueue_outgoing_payment_error.js	/^  this.name = 'EnqueueOutgoingPaymentError';$/;"	r
name	lib/http/controllers/api/register_user.js	/^    name: req.body.name,$/;"	r
name	lib/http/controllers/public/login_user.js	/^  var name = req.body.name;$/;"	r
name	lib/http/passport_auth.js	/^  auth.name = name;$/;"	r
name	lib/http/passport_auth.js	/^  userBasic.name = name;$/;"	r
name	lib/processes/supervisor.js	/^            name: processName,$/;"	r
name	lib/views/text/index.js	/^      account.name$/;"	r
name	lib/views/text/index.js	/^      user.name,$/;"	r
name	package.json	/^  "name": "gatewayd",$/;"	f
name	test/api/record_deposit.js	/^      name: 'test',$/;"	r
name	test/core/deposit_processor.js	/^      name: random(),$/;"	r
name	test/core/withdrawal_processor.js	/^      name: random(),$/;"	r
name	test/http/crud/external_accounts.js	/^  name: 'admin@'+gatewayd.config.get('DOMAIN'),$/;"	r
name	test/http/crud/external_transactions.js	/^  name: 'admin@'+gatewayd.config.get('DOMAIN'),$/;"	r
name	test/http/crud/policies.js	/^  name: 'admin@'+gatewayd.config.get('DOMAIN'),$/;"	r
name	test/http/crud/ripple_addresses.js	/^  name: 'admin@'+gatewayd.config.get('DOMAIN'),$/;"	r
name	test/http/crud/ripple_transactions.js	/^  name: 'admin@'+gatewayd.config.get('DOMAIN'),$/;"	r
name	test/http/crud/users.js	/^        name: name,$/;"	r
name	test/http/crud/users.js	/^    var name = random();$/;"	r
name	test/models/policies.js	/^      name: "default",$/;"	r
nconf	config/environment.js	/^nconf$/;"	r
nconf	config/environment.js	/^var nconf = require('nconf');$/;"	r
nconf	package.json	/^    "nconf": "~0.6",$/;"	f
newHash	lib/api/get_or_fetch_last_payment_hash.js	/^              var newHash = JSON.parse(record.dataValues.data);$/;"	r
newHash	lib/api/set_last_payment_hash.js	/^        var newHash = JSON.parse(record.dataValues.data);$/;"	r
newHash	lib/core/incoming_payment.js	/^    var newHash = payment.dataValues.transaction_hash;$/;"	r
no_direct_ripple	test/fixtures/incoming_payments.js	/^    no_direct_ripple: false,$/;"	r
no_direct_ripple	test/fixtures/ripple_rest_integration.js	/^      no_direct_ripple: false$/;"	r
no_direct_ripple	test/fixtures/ripple_rest_integration.js	/^      no_direct_ripple: false,$/;"	r
no_direct_ripple	test/fixtures/transactions.js	/^    no_direct_ripple: false,$/;"	r
no_paths_found	lib/ripple_rest_error_handler.js	/^    no_paths_found: 'No paths found',$/;"	r
no_paths_found	lib/ripple_rest_error_handler.js	/^    no_paths_found: 'noPathsFound',$/;"	r
no_paths_found	lib/ripple_rest_error_handler.js	/^    no_paths_found: 'tecPATH_DRY',$/;"	r
no_paths_found	test/fixtures/ripple_rest_integration.js	/^      no_paths_found: {$/;"	r
no_rippled_connection	test/fixtures/ripple_rest_integration.js	/^      no_rippled_connection: {$/;"	r
node-uuid	package.json	/^    "node-uuid": "1.4.1",$/;"	f
nodeArgs	lib/processes/supervisor.js	/^            args.nodeArgs = ['--debug=' + debugPort];$/;"	r
nonXrpChanges	lib/core/utils.js	/^    nonXrpChanges = _.reject(changes, function(change) {$/;"	r
nonXrpChanges	lib/core/utils.js	/^  var nonXrpChanges;$/;"	r
non_whitelisted	test/http/configure_gatewayd.js	/^      .send({ notifications_url: 'https:\/\/ripple.com', non_whitelisted: 'value' })$/;"	r
normalizedError	lib/core/outgoing_payment.js	/^        normalizedError = retry;$/;"	r
normalizedError	lib/core/outgoing_payment.js	/^        normalizedError = rippleRestResponseHandler[error.error_type](error);$/;"	r
normalizedError	lib/core/outgoing_payment.js	/^    var normalizedError;$/;"	r
normalized_error_messages	lib/ripple_rest_error_handler.js	/^  this.normalized_error_messages = {$/;"	r
notFound	lib/http/response_handler.js	/^  notFound: 404,$/;"	r
notFoundError	lib/http/response_handler.js	/^  notFoundError: notFoundError$/;"	r
notFoundError	lib/http/response_handler.js	/^function notFoundError(response, message, body) {$/;"	r
notNull	lib/data/migrations/20131216193924-users.js	/^    createdAt: { type: 'datetime', notNull: true },$/;"	r
notNull	lib/data/migrations/20131216193924-users.js	/^    name: { type: 'string', notNull: true, unique: true },$/;"	r
notNull	lib/data/migrations/20131216193924-users.js	/^    password_hash: { type: 'string', notNull: true },$/;"	r
notNull	lib/data/migrations/20131216193924-users.js	/^    salt: { type: 'string', notNull: true },$/;"	r
notNull	lib/data/migrations/20131216232955-external-transactions.js	/^    amount: { type: 'decimal', notNull: true },$/;"	r
notNull	lib/data/migrations/20131216232955-external-transactions.js	/^    createdAt: { type: 'datetime', notNull: true },$/;"	r
notNull	lib/data/migrations/20131216232955-external-transactions.js	/^    currency: { type: 'string', notNull: true },$/;"	r
notNull	lib/data/migrations/20131216232955-external-transactions.js	/^    deposit: { type: 'boolean', notNull: true },$/;"	r
notNull	lib/data/migrations/20131216232955-external-transactions.js	/^    external_account_id: { type: 'int', notNull: true },$/;"	r
notNull	lib/data/migrations/20131216233400-ripple-transactions.js	/^    createdAt:         { type: 'datetime', notNull: true },$/;"	r
notNull	lib/data/migrations/20131216233400-ripple-transactions.js	/^    from_address_id:   { type: 'int', notNull: true },$/;"	r
notNull	lib/data/migrations/20131216233400-ripple-transactions.js	/^    from_amount:       { type: 'decimal', notNull: true },$/;"	r
notNull	lib/data/migrations/20131216233400-ripple-transactions.js	/^    from_currency:     { type: 'string', notNull: true },$/;"	r
notNull	lib/data/migrations/20131216233400-ripple-transactions.js	/^    from_issuer:       { type: 'string', notNull: true },$/;"	r
notNull	lib/data/migrations/20131216233400-ripple-transactions.js	/^    to_address_id:     { type: 'int', notNull: true },$/;"	r
notNull	lib/data/migrations/20131216233400-ripple-transactions.js	/^    to_amount:         { type: 'decimal', notNull: true },$/;"	r
notNull	lib/data/migrations/20131216233400-ripple-transactions.js	/^    to_currency:       { type: 'string', notNull: true },$/;"	r
notNull	lib/data/migrations/20131216233400-ripple-transactions.js	/^    to_issuer:         { type: 'string', notNull: true },$/;"	r
notNull	lib/data/migrations/20131217004626-gateway-accounts.js	/^    createdAt: { type: 'datetime', notNull: true },$/;"	r
notNull	lib/data/migrations/20131219233339-ripple-addresses.js	/^    address: { type: 'string', notNull: true },$/;"	r
notNull	lib/data/migrations/20131219233339-ripple-addresses.js	/^    type: { type: 'string', notNull: true },$/;"	r
notNull	lib/data/migrations/20140119011932-external-accounts.js	/^    createdAt: { type: 'datetime', notNull: true},$/;"	r
notNull	lib/data/migrations/20140119011932-external-accounts.js	/^    name: { type: 'string', notNull: true },$/;"	r
notNull	lib/data/migrations/20140119011932-external-accounts.js	/^    updatedAt: { type: 'datetime', notNull: true},$/;"	r
notNull	lib/data/migrations/20140119011932-external-accounts.js	/^    user_id: { type: 'int', notNull: true},$/;"	r
notNull	lib/data/migrations/20140418131831-create-kyc-data.js	/^    createdAt: { type: 'datetime', notNull: true},$/;"	r
notNull	lib/data/migrations/20140418131831-create-kyc-data.js	/^    name: { type: 'string', notNull: true },$/;"	r
notNull	lib/data/migrations/20140418131831-create-kyc-data.js	/^    type: { type: 'string', notNull: true},$/;"	r
notNull	lib/data/migrations/20140418131831-create-kyc-data.js	/^    updatedAt: { type: 'datetime', notNull: true},$/;"	r
notNull	lib/data/migrations/20140418131831-create-kyc-data.js	/^    user_id: { type: 'int', notNull: true},$/;"	r
notNull	lib/data/migrations/20140731062106-create-policies.js	/^      notNull: true$/;"	r
notNull	lib/data/migrations/20140731062106-create-policies.js	/^    createdAt: { type: 'datetime', notNull: true},$/;"	r
notNull	lib/data/migrations/20140731062106-create-policies.js	/^    updatedAt: { type: 'datetime', notNull: true},$/;"	r
notNull	lib/data/migrations/20140802043032-user-id-not-required-external-account.js	/^    notNull: true$/;"	r
notNull	lib/data/migrations/20140819202523-create-gateway-transactions.js	/^      notNull: true$/;"	r
notNull	lib/data/migrations/20140918033326-create-bridges.js	/^      notNull: true \/\/ may be removed in version 4$/;"	r
notNull	lib/data/migrations/20140918033326-create-bridges.js	/^      notNull: true$/;"	r
notNull	lib/data/migrations/20140930174005-rename-external-accounts-columns.js	/^        notNull: true$/;"	r
notNull	lib/data/migrations/20140930174005-rename-external-accounts-columns.js	/^        notNull: true,$/;"	r
notNull	lib/data/migrations/20140930223803-name-not-required-external-accounts.js	/^    notNull: false$/;"	r
notNull	lib/data/migrations/20140930223803-name-not-required-external-accounts.js	/^    notNull: true$/;"	r
notNull	lib/data/migrations/20141015171506-create-configs.js	/^      notNull: true,$/;"	r
notNull	lib/data/migrations/20141015171506-create-configs.js	/^      type: 'datetime', notNull: true$/;"	r
notNull	lib/data/migrations/20141114205150-remove-issuer-requirement.js	/^      notNull: false$/;"	r
notNull	lib/data/migrations/20141114205150-remove-issuer-requirement.js	/^      notNull: true$/;"	r
notNull	lib/data/migrations/20141114205150-remove-issuer-requirement.js	/^    notNull: false$/;"	r
notNull	lib/data/migrations/20141212230605-make-amount-and-currency-optional-external-xfer.js	/^      notNull: false$/;"	r
notNull	lib/data/migrations/20141212230605-make-amount-and-currency-optional-external-xfer.js	/^      notNull: true$/;"	r
notNull	lib/data/migrations/20150107040036-remove-from-amount-requirement.js	/^      notNull: false$/;"	r
notNull	lib/data/migrations/20150107040036-remove-from-amount-requirement.js	/^      notNull: true$/;"	r
notNull	lib/data/migrations/20150107040036-remove-from-amount-requirement.js	/^    notNull: false$/;"	r
notNull	lib/data/migrations/20150107040036-remove-from-amount-requirement.js	/^    notNull: true$/;"	r
notNull	lib/data/migrations/20150108211416-remove-to--requirement.js	/^      notNull: false$/;"	r
notNull	lib/data/migrations/20150108211416-remove-to--requirement.js	/^      notNull: true$/;"	r
notNull	lib/data/migrations/20150108211416-remove-to--requirement.js	/^    notNull: false$/;"	r
notNull	lib/data/migrations/20150108211416-remove-to--requirement.js	/^    notNull: true$/;"	r
notNull	lib/data/models/bridges.js	/^      notNull: true$/;"	r
notNull	lib/data/models/configs.js	/^      notNull: true$/;"	r
notNull	lib/data/models/external_accounts.js	/^      notNull: true$/;"	r
notNull	lib/data/models/gateway_transactions.js	/^      notNull: true$/;"	r
notNull	lib/data/models/gateway_transactions.js	/^      notNull: true,$/;"	r
notNull	lib/data/models/policies.js	/^      notNull: true$/;"	r
notNull	lib/data/models/ripple_addresses.js	/^      notNull: true $/;"	r
notNull	lib/data/models/ripple_addresses.js	/^      notNull: true,$/;"	r
notNull	lib/data/models/ripple_transactions.js	/^      notNull: false,$/;"	r
notNull	lib/data/models/ripple_transactions.js	/^      notNull: true,$/;"	r
notNull	lib/data/models/users.js	/^		notNull: true,$/;"	r
notification	test/fixtures/incoming_payments.js	/^  notification: {$/;"	r
notifications_url	lib/api/configure_gatewayd.js	/^    notifications_url: true$/;"	r
notifications_url	test/api/configure_gatewayd.js	/^      configureGatewayd._filterWhiteListed({ some_other_thing: 'value', notifications_url: 'https:\/\/ripple.com'})$/;"	r
notifications_url	test/api/configure_gatewayd.js	/^      configureGatewayd.set({ some_other_thing: 'value', notifications_url: 'https:\/\/ripple.com'})$/;"	r
null	lib/http/controllers/api/ripple_quotes_incoming.js	/^      responseHandler.transactionError(response, null, error);$/;"	r
null	lib/http/controllers/api/ripple_quotes_outgoing.js	/^      responseHandler.transactionError(response, null, error);$/;"	r
ok	lib/http/response_handler.js	/^  ok: 200,$/;"	r
onError	processes/incoming.js	/^    onError: function(error) {$/;"	r
onPayment	processes/incoming.js	/^    onPayment: function(paymentNotification, next) {$/;"	r
onTransaction	processes/incoming.js	/^    onTransaction: function(transaction, next) {$/;"	r
options	Gruntfile.js	/^        options: {$/;"	r
options	Gruntfile.js	/^      options: {$/;"	r
options	lib/api/fund_cold_wallet.js	/^  var options = {$/;"	r
options	lib/api/fund_hot_wallet.js	/^  var options = {$/;"	r
options	lib/api/issue_currency.js	/^	var options = {$/;"	r
options	lib/api/refund_cold_wallet.js	/^  var options = {$/;"	r
options	lib/api/register_user.js	/^            var options = {$/;"	r
options	lib/cli/fund_hot_wallet.js	/^  var options = {$/;"	r
options	lib/cli/refund_cold_wallet.js	/^  var options = {$/;"	r
options	lib/errors/enqueue_outgoing_payment_error.js	/^  options = options || {};$/;"	r
options	lib/http/controllers/api/fund_hot_wallet.js	/^  var options = {$/;"	r
options	test/api/configure_gatewayd.js	/^  var options = { notifications_url: 'https:\/\/ripple.com' };$/;"	r
options	test/api/create_external_payment.js	/^      var options = {$/;"	r
options	test/api/create_ripple_payment.js	/^      var options = {$/;"	r
options	test/api/fund_hot_wallet.js	/^    var options = {$/;"	r
options	test/api/get_trust_lines.js	/^    var options = {$/;"	r
options	test/api/refund_cold_wallet.js	/^    var options = {$/;"	r
opts	lib/api/get_trust_lines.js	/^  var opts = {$/;"	r
opts	lib/cli/register_user.js	/^  var opts = {$/;"	r
opts	lib/data/controllers/ripple_transactions.js	/^    opts = fillSimplePayment(opts);$/;"	r
opts	lib/data/controllers/users.js	/^      opts = {};$/;"	r
opts	lib/http/controllers/api/record_deposit.js	/^  var opts =  {$/;"	r
opts	lib/http/controllers/api/register_user.js	/^  var opts = {$/;"	r
opts	lib/processes/process_manager.js	/^      opts = { json: true };$/;"	r
or	scripts/jsawk	/^                        function or an array of strings.$/;"	f
order	lib/data/pagination_util.js	/^      order: '"createdAt"',$/;"	r
order	lib/data/pagination_util.js	/^      order: request.sort_field,$/;"	r
order	lib/data/pagination_util.js	/^    query.order = sortParams.order + ' ' + sortParams.sortDirection;$/;"	r
order	test/utils/pagination_util.js	/^      order: 'status DESC'$/;"	r
outgoing	test/fixtures/ripple_quotes.js	/^    outgoing: {$/;"	r
outgoingPayment	lib/core/deposit_processor.js	/^                self.outgoingPayment = payment;$/;"	r
outgoingPayment	lib/core/outgoing_payment_processor.js	/^  this.outgoingPayment = new OutgoingPayment(payment);$/;"	r
outgoingPayment	test/core/outgoing_payment.js	/^          var outgoingPayment = new OutgoingPayment(rippleTransaction);$/;"	r
outgoingPayment	test/core/outgoing_payment.js	/^        outgoingPayment = new OutgoingPayment(rippleTransaction);$/;"	r
outgoingPayment	test/core/outgoing_payment.js	/^        var outgoingPayment = new OutgoingPayment(rippleTransaction);$/;"	r
outgoingPayment	test/core/outgoing_payment.js	/^    outgoingPayment$/;"	r
outgoingPayment	test/core/outgoing_payment.js	/^    var outgoingPayment = new OutgoingPayment(fixturesOutgoingPayment.requests.outgoing_record);$/;"	r
outgoingPayment	test/core/outgoing_payment.js	/^    var outgoingPayment;$/;"	r
outgoingPaymentProcessor	processes/outgoing.js	/^      var outgoingPaymentProcessor = new OutgoingPaymentProcessor(outgoingPayment);$/;"	r
outgoing_record	test/fixtures/outgoing_payments.js	/^    outgoing_record: {$/;"	r
outgoing_record_invoice_id_memos	test/fixtures/outgoing_payments.js	/^    outgoing_record_invoice_id_memos: {$/;"	r
output	lib/api/create_gateway_transaction.js	/^      output           = options.ripple;$/;"	r
output	lib/api/create_gateway_transaction.js	/^      output = options.external;$/;"	r
output	lib/processes/process_manager.js	/^    var output = '';$/;"	r
parseDestinationBalanceChanges	lib/core/utils.js	/^module.exports.parseDestinationBalanceChanges = function(changes) {$/;"	r
parseNameFromPath	lib/processes/supervisor.js	/^function parseNameFromPath(path) {$/;"	r
parseSourceBalanceChanges	lib/core/utils.js	/^module.exports.parseSourceBalanceChanges = function(changes) {$/;"	r
parsedChanges	test/core/utils.js	/^    var parsedChanges = utils.parseDestinationBalanceChanges(changes);$/;"	r
parsedChanges	test/core/utils.js	/^    var parsedChanges = utils.parseDestinationBalanceChanges(destination_balance_changes);$/;"	r
parsedChanges	test/core/utils.js	/^    var parsedChanges = utils.parseSourceBalanceChanges(changes);$/;"	r
parsedChanges	test/core/utils.js	/^    var parsedChanges = utils.parseSourceBalanceChanges(source_balance_changes);$/;"	r
partial_payment	test/fixtures/incoming_payments.js	/^    partial_payment: false,$/;"	r
partial_payment	test/fixtures/ripple_rest_integration.js	/^      partial_payment: false,$/;"	r
partial_payment	test/fixtures/transactions.js	/^    partial_payment: false,$/;"	r
passport	lib/app.js	/^var passport = require('passport');$/;"	r
passport	package.json	/^    "passport": "",$/;"	f
passport-http	package.json	/^    "passport-http": "",$/;"	f
passportAuth	lib/app.js	/^var passportAuth = require(__dirname + '\/http\/passport_auth');$/;"	r
password	lib/api/register_user.js	/^    password: opts.password,$/;"	r
password	lib/api/set_key.js	/^    var password = crypto.randomBytes(32).toString('hex');$/;"	r
password	lib/cli/register_user.js	/^    password: password,$/;"	r
password	lib/cli/register_user.js	/^function registerUser(username, password, rippleAddress, secret, currency, amount){$/;"	r
password	lib/data/database.json	/^    "password": "",$/;"	f
password	lib/data/database.json	/^    "password": "password",$/;"	f
password	lib/http/controllers/api/register_user.js	/^    password: req.body.password,$/;"	r
password	lib/http/controllers/public/login_user.js	/^  var password = req.body.password;$/;"	r
password	lib/http/passport_auth.js	/^      password === gateway.config.get('KEY')) {$/;"	r
password	lib/http/passport_auth.js	/^    function(username, password, done) {$/;"	r
password	test/core/deposit_processor.js	/^      password: random(),$/;"	r
password	test/core/withdrawal_processor.js	/^      password: random(),$/;"	r
password	test/http/crud/users.js	/^        password: random()$/;"	r
password	test/http/register_user.js	/^    var testUser = { name: 'testUser@ripple.com', password: 'passw0rd', ripple_address: 'rscJF4TWS2jBe43MvUomTtCcyrbtTRMSNr' };$/;"	r
password_hash	lib/data/controllers/users.js	/^    opts.password_hash = api.saltPassword(opts.password, opts.salt);$/;"	r
password_hash	lib/data/migrations/20131216193924-users.js	/^    password_hash: { type: 'string', notNull: true },$/;"	r
password_hash	lib/data/models/users.js	/^  password_hash: Sequelize.STRING,$/;"	r
path	lib/api/start_gateway.js	/^var path       = require('path');$/;"	r
path	lib/api/stop_gateway.js	/^var path       = require('path');$/;"	r
path	lib/cli/start_gateway.js	/^        logger.error('supervisor:exception', path, error.message);$/;"	r
path	lib/data/logs.js	/^var path      = require('path');$/;"	r
path	lib/processes/process_set.js	/^var path = require('path');$/;"	r
path	test/core/utils.js	/^var path   = require('path'); var utils  = require(path.join(__dirname, '\/..\/..\/lib\/core\/utils'));$/;"	r
path	test/processes/pm2.js	/^var path       = require('path')$/;"	r
paths	test/fixtures/incoming_payments.js	/^    paths: '[[{"account":"rPtzajzE295BsGecxqNdUxtfrEiH2VGUVA","type":1,"type_hex":"0000000000000001"}]]',$/;"	r
paths	test/fixtures/ripple_rest_integration.js	/^      paths: '[]',$/;"	r
payment	lib/api/fund_cold_wallet.js	/^    payment: {$/;"	r
payment	lib/api/fund_hot_wallet.js	/^    payment: {$/;"	r
payment	lib/api/issue_currency.js	/^      payment: {$/;"	r
payment	lib/api/refund_cold_wallet.js	/^    payment: {$/;"	r
payment	lib/api/register_user.js	/^                payment: {$/;"	r
payment	lib/core/incoming_payment.js	/^          _this.payment = payment;$/;"	r
payment	lib/core/incoming_payment.js	/^  this.payment = {};$/;"	r
payment	lib/core/outgoing_payment.js	/^          var payment = response.payments[0];$/;"	r
payment	lib/core/outgoing_payment.js	/^        payment: payment,$/;"	r
payment	lib/http/controllers/api/enqueue_outgoing_payment.js	/^            payment: payment.toJSON()$/;"	r
payment	lib/views/text/index.js	/^    var payment = payments[i];$/;"	r
payment	test/core/incoming_payment.js	/^    incomingPayment.payment = invalidPayment;$/;"	r
payment	test/core/incoming_payment.js	/^    incomingPayment.payment = tecPacthDryPayment;$/;"	r
payment	test/fixtures/incoming_payments.js	/^    payment.payment           = this.valid;$/;"	r
payment	test/fixtures/incoming_payments.js	/^    var payment               = {};$/;"	r
payment	test/fixtures/ripple_rest_integration.js	/^    payment: {$/;"	r
payment	test/http/fund_hot_wallet.js	/^      var payment = {$/;"	r
paymentNotification	lib/core/incoming_payment.js	/^  this.paymentNotification  = paymentNotification;$/;"	r
paymentObject	lib/core/outgoing_payment.js	/^      var paymentObject = {$/;"	r
paymentObject	lib/core/outgoing_payment.js	/^    var paymentObject = {$/;"	r
paymentObject	test/api/get_or_fetch_last_payment_hash.js	/^    var paymentObject = incomingPaymentFixtures.incoming_payments.makeArrayOfPayments();$/;"	r
paymentResponse	test/http/fund_hot_wallet.js	/^          var paymentResponse = resp.body;$/;"	r
payments	lib/views/text/index.js	/^  payments: printPaymentsTable,$/;"	r
payments	test/fixtures/incoming_payments.js	/^    incomingPayments.payments = [];$/;"	r
pending_payment	test/fixtures/ripple_rest_integration.js	/^    pending_payment: {$/;"	r
pg	lib/data/package.json	/^    "pg": "2.11.1",$/;"	f
pg	package.json	/^    "pg": "^3.0.3",$/;"	f
plugin	config/initializers/host_meta.js	/^  var plugin = new HostMetaPlugin({$/;"	r
pm2	lib/processes/process_manager.js	/^      var pm2 = spawn('pm2', ['list']);$/;"	r
pm2	lib/processes/process_manager.js	/^    var pm2 = exec('pm2 '+command);$/;"	r
pm2	lib/processes/supervisor.js	/^var pm2        = require('pm2');$/;"	r
pm2	package.json	/^    "pm2": "^0.12.3",$/;"	f
pm2	test/processes/pm2.js	/^var pm2        = Promise.promisifyAll(require('pm2'))$/;"	r
policies	lib/core/policy_engine.js	/^  this.policies = [];$/;"	r
policies	lib/http/controllers/resources/policies.js	/^          policies: policies $/;"	r
policiesOrder	lib/core/policy_engine.js	/^  this.policiesOrder = [$/;"	r
policy	lib/core/policy_engine.js	/^      policy: policies[name]$/;"	r
policy	lib/http/controllers/resources/policies.js	/^              policy: policy $/;"	r
policy	lib/http/controllers/resources/policies.js	/^            policy: policy $/;"	r
policy	lib/http/controllers/resources/policies.js	/^          policy: policy $/;"	r
policy	test/models/policies.js	/^    var policy = Policy.build({$/;"	r
policyCreatedId	test/http/crud/policies.js	/^        policyCreatedId = response.body.policy.id;$/;"	r
policyCreatedId	test/http/crud/policies.js	/^var policyCreatedId;$/;"	r
policyEngine	processes/policy_engine.js	/^var policyEngine = new PolicyEngine();$/;"	r
policyMatch	lib/core/policy_engine.js	/^          policyMatch = policy;$/;"	r
policyMatch	lib/core/policy_engine.js	/^    var policyMatch;$/;"	r
policy_id	lib/api/create_gateway_transaction.js	/^            policy_id: 0$/;"	r
policy_id	lib/data/migrations/20140819202523-create-gateway-transactions.js	/^    policy_id: {$/;"	r
policy_id	lib/data/migrations/20140918033326-create-bridges.js	/^    policy_id: {$/;"	r
policy_id	lib/data/models/bridges.js	/^  policy_id: {$/;"	r
policy_id	lib/data/models/gateway_transactions.js	/^  policy_id: { $/;"	r
policy_id	test/models/gateway_transactions.js	/^      policy_id: 789$/;"	r
policy_id	test/models/gateway_transactions.js	/^      policy_id: 789,$/;"	r
port	.settings/launch.json	/^			"port": 5858$/;"	f
port	.settings/launch.json	/^			"port": 6868$/;"	f
port	.settings/launch.json	/^			"port": 7878$/;"	f
port	.settings/launch.json	/^			"port": 8888$/;"	f
port	.settings/launch.json	/^			"port": 9898$/;"	f
port	lib/data/database.json	/^    "port": "",$/;"	f
port	lib/data/database.json	/^    "port": "5432",$/;"	f
port	lib/data/sequelize.js	/^  port: config.get('DATABASE_PORT'),$/;"	r
port	lib/processes/supervisor.js	/^            logger.warn('[DEBUG]Starting ' + processName + ' in debug mode, port: ' + debugPort);$/;"	r
port	processes/server.js	/^var port = gatewayd.config.get('PORT');$/;"	r
post	lib/http/controllers/api/enqueue_outgoing_payment.js	/^  post: function(request, response) {$/;"	r
post('/'	lib/http/routers/resources_router.js	/^  router.post('\/' + resource, controllers[resource].create);$/;"	r
post('/config'	lib/http/routers/api_router.js	/^router.post('\/config', apiController.configureGatewayd);$/;"	r
post('/config/database'	lib/http/routers/api_router.js	/^router.post('\/config\/database', apiController.setDatabaseUrl);$/;"	r
post('/config/domain'	lib/http/routers/api_router.js	/^router.post('\/config\/domain', apiController.setDomain);$/;"	r
post('/config/key'	lib/http/routers/api_router.js	/^router.post('\/config\/key', apiController.setKey);$/;"	r
post('/config/ripple/rest'	lib/http/routers/api_router.js	/^router.post('\/config\/ripple\/rest', apiController.setRippleRestUrl);$/;"	r
post('/config/wallets/cold'	lib/http/routers/api_router.js	/^router.post('\/config\/wallets\/cold', apiController.setColdWallet);$/;"	r
post('/config/wallets/hot'	lib/http/routers/api_router.js	/^router.post('\/config\/wallets\/hot', apiController.setHotWallet);$/;"	r
post('/currencies'	lib/http/routers/api_router.js	/^router.post('\/currencies', apiController.addCurrency);$/;"	r
post('/deposits'	lib/http/routers/api_router.js	/^router.post('\/deposits', apiController.recordDeposit);$/;"	r
post('/login'	lib/http/routers/admin_router.js	/^router.post('\/login', adminController.login);$/;"	r
post('/payments/outgoing'	lib/http/routers/api_router.js	/^router.post('\/payments\/outgoing', apiController.enqueueOutgoingPayment);$/;"	r
post('/registrations'	lib/http/routers/api_router.js	/^router.post('\/registrations', apiController.registerUser);$/;"	r
post('/start'	lib/http/routers/api_router.js	/^router.post('\/start', apiController.startGateway);$/;"	r
post('/users/login'	lib/http/routers/user_router.js	/^router.post('\/users\/login', publicCtrl.loginUser);$/;"	r
post('/v1/config'	test/http/configure_gatewayd.js	/^      .post('\/v1\/config')$/;"	r
post('/v1/config/database'	test/http/set_database_url.js	/^      .post('\/v1\/config\/database')$/;"	r
post('/v1/config/domain'	test/http/set_domain.js	/^      .post('\/v1\/config\/domain')$/;"	r
post('/v1/config/key'	test/http/set_key.js	/^      .post('\/v1\/config\/key')$/;"	r
post('/v1/config/last_payment_hash'	test/http/set_last_payment_hash.js	/^      .post('\/v1\/config\/last_payment_hash')$/;"	r
post('/v1/config/ripple/rest'	test/http/set_ripple_rest_url.js	/^      .post('\/v1\/config\/ripple\/rest')$/;"	r
post('/v1/config/wallets/hot'	test/http/set_hot_wallet.js	/^      .post('\/v1\/config\/wallets\/hot')$/;"	r
post('/v1/currencies'	test/http/add_currency.js	/^      .post('\/v1\/currencies')$/;"	r
post('/v1/external_accounts'	test/http/crud/external_accounts.js	/^      .post('\/v1\/external_accounts')$/;"	r
post('/v1/external_transactions'	test/http/crud/external_transactions.js	/^      .post('\/v1\/external_transactions')$/;"	r
post('/v1/payments/failed/'	test/http/retry_failed_payment.js	/^      .post('\/v1\/payments\/failed\/'+rippleTransaction.id+'\/retry')$/;"	r
post('/v1/payments/failed/111/retry'	test/http/retry_failed_payment.js	/^      .post('\/v1\/payments\/failed\/111\/retry')$/;"	r
post('/v1/payments/failed/999998/retry'	test/http/retry_failed_payment.js	/^      .post('\/v1\/payments\/failed\/999998\/retry')$/;"	r
post('/v1/payments/outgoing'	test/http/enqueue_outgoing_payment.js	/^      .post('\/v1\/payments\/outgoing')$/;"	r
post('/v1/polcies'	test/http/crud/policies.js	/^      .post('\/v1\/polcies')$/;"	r
post('/v1/register'	lib/app.js	/^  app.post('\/v1\/register', publicCtrl.registerUser);$/;"	r
post('/v1/registrations'	test/http/register_user.js	/^      .post('\/v1\/registrations')$/;"	r
post('/v1/ripple_addresses'	test/http/crud/ripple_addresses.js	/^      .post('\/v1\/ripple_addresses')$/;"	r
post('/v1/ripple_transactions'	test/http/crud/ripple_transactions.js	/^      .post('\/v1\/ripple_transactions')$/;"	r
post('/v1/start'	test/http/start_gateway.js	/^      .post('\/v1\/start')$/;"	r
post('/v1/trust'	test/http/set_trust_line.js	/^      .post('\/v1\/trust')$/;"	r
post('/v1/users'	test/http/crud/users.js	/^      .post('\/v1\/users')$/;"	r
post('/v1/users/1/activate'	test/http/activate_user.js	/^      .post('\/v1\/users\/1\/activate')$/;"	r
post('/v1/users/1/deactivate'	test/http/deactivate_user.js	/^      .post('\/v1\/users\/1\/deactivate')$/;"	r
post('/v1/wallets/cold/refund'	test/http/refund_cold_wallet.js	/^      .post('\/v1\/wallets\/cold\/refund')$/;"	r
post('/v1/wallets/generate'	test/http/generate_wallet.js	/^      .post('\/v1\/wallets\/generate')$/;"	r
post('/v1/wallets/hot/fund'	test/http/fund_hot_wallet.js	/^        .post('\/v1\/wallets\/hot\/fund')$/;"	r
post('/v1/wallets/hot/fund'	test/http/fund_hot_wallet.js	/^      .post('\/v1\/wallets\/hot\/fund')$/;"	r
post('/v1/withdrawals/'	test/http/clear_withdrawals.js	/^      .post('\/v1\/withdrawals\/'+externalTransaction.id+'\/clear')$/;"	r
post('/v1/withdrawals/110/clear'	test/http/clear_withdrawals.js	/^      .post('\/v1\/withdrawals\/110\/clear')$/;"	r
post('/v1/withdrawals/999998/clear'	test/http/clear_withdrawals.js	/^      .post('\/v1\/withdrawals\/999998\/clear')$/;"	r
post('/wallets/cold/refund'	lib/http/routers/api_router.js	/^router.post('\/wallets\/cold\/refund', apiController.refundColdWallet);$/;"	r
post('/wallets/generate'	lib/http/routers/api_router.js	/^router.post('\/wallets\/generate', apiController.generateWallet);$/;"	r
post('/wallets/hot/fund'	lib/http/routers/api_router.js	/^router.post('\/wallets\/hot\/fund', apiController.fundHotWallet);$/;"	r
predicate	processes/deposits.js	/^    predicate: { where: {$/;"	r
predicate	processes/outgoing.js	/^    predicate: { where: {$/;"	r
predicate	processes/policy_engine.js	/^  predicate: { where: {$/;"	r
predicate	processes/withdrawals.js	/^  predicate: { where: {$/;"	r
prepared_payment	test/fixtures/outgoing_payments.js	/^      prepared_payment: {$/;"	r
previous_transaction_hash	lib/data/migrations/20131219233339-ripple-addresses.js	/^    previous_transaction_hash: { type: 'string' },$/;"	r
previous_transaction_hash	lib/data/models/ripple_addresses.js	/^  previous_transaction_hash: { $/;"	r
previous_transaction_hash	test/fixtures/outgoing_payments.js	/^      previous_transaction_hash: null,$/;"	r
primaryKey	lib/data/migrations/20131216193924-users.js	/^	id: { type: 'int', primaryKey: true, autoIncrement: true },$/;"	r
primaryKey	lib/data/migrations/20131216232955-external-transactions.js	/^		id: { type: 'int', primaryKey: true, autoIncrement: true },$/;"	r
primaryKey	lib/data/migrations/20131216233400-ripple-transactions.js	/^		id:                { type: 'int', primaryKey: true, autoIncrement: true },$/;"	r
primaryKey	lib/data/migrations/20131217004626-gateway-accounts.js	/^    id: { type: 'int', primaryKey: true, autoIncrement: true },$/;"	r
primaryKey	lib/data/migrations/20131219233339-ripple-addresses.js	/^    id: { type: 'int', primaryKey: true, autoIncrement: true },	 	$/;"	r
primaryKey	lib/data/migrations/20140119011932-external-accounts.js	/^    id: { type: 'int', primaryKey: true, autoIncrement: true },	 	$/;"	r
primaryKey	lib/data/migrations/20140418131831-create-kyc-data.js	/^    id: { type: 'int', primaryKey: true, autoIncrement: true },	 	$/;"	r
primaryKey	lib/data/migrations/20140731062106-create-policies.js	/^      primaryKey: true,$/;"	r
primaryKey	lib/data/migrations/20140819202523-create-gateway-transactions.js	/^      primaryKey: true,$/;"	r
primaryKey	lib/data/migrations/20140918033326-create-bridges.js	/^      primaryKey: true,$/;"	r
primaryKey	lib/data/migrations/20141015171506-create-configs.js	/^      primaryKey: true,$/;"	r
primaryKey	lib/data/models/bridges.js	/^    primaryKey: true,$/;"	r
primaryKey	lib/data/models/configs.js	/^    primaryKey: true,$/;"	r
primaryKey	lib/data/models/external_accounts.js	/^  id: { type: Sequelize.INTEGER, primaryKey: true, autoIncrement: true },$/;"	r
primaryKey	lib/data/models/external_transactions.js	/^    primaryKey: true,$/;"	r
primaryKey	lib/data/models/gateway_transactions.js	/^    primaryKey: true,$/;"	r
primaryKey	lib/data/models/kyc_data.js	/^		primaryKey: true,$/;"	r
primaryKey	lib/data/models/policies.js	/^    primaryKey: true,$/;"	r
primaryKey	lib/data/models/ripple_addresses.js	/^		primaryKey: true,$/;"	r
primaryKey	lib/data/models/ripple_transactions.js	/^    primaryKey: true, $/;"	r
primaryKey	lib/data/models/users.js	/^		primaryKey: true,$/;"	r
printAccountBalance	lib/views/text/index.js	/^function printAccountBalance(balances){$/;"	r
printClearedTransactions	lib/views/text/index.js	/^function printClearedTransactions(transactions){$/;"	r
printExternalAccountsTable	lib/views/text/index.js	/^function printExternalAccountsTable(accounts) {$/;"	r
printExternalTransactionsTable	lib/views/text/index.js	/^function printExternalTransactionsTable(transactions) {$/;"	r
printPaymentsTable	lib/views/text/index.js	/^function printPaymentsTable(payments) {$/;"	r
printRippleAddressesTable	lib/views/text/index.js	/^function printRippleAddressesTable(addresses) {$/;"	r
printTrustLinesTable	lib/views/text/index.js	/^function printTrustLinesTable(lines) {$/;"	r
printUsersTable	lib/views/text/index.js	/^function printUsersTable(users) {$/;"	r
processDeposit	lib/core/deposit_processor.js	/^  processDeposit: function(callback) {$/;"	r
processIncomingPayment	lib/core/withdrawal_processor.js	/^  processIncomingPayment: function(callback) {$/;"	r
processManager	lib/api/list_processes.js	/^  var processManager = new GatewayProcessManager();$/;"	r
processManager	lib/api/restart_gateway.js	/^  var processManager = new ProcessManager();$/;"	r
processName	lib/processes/supervisor.js	/^          var processName = parseNameFromPath(path);$/;"	r
processNum	lib/processes/supervisor.js	/^    var processNum = 0;$/;"	r
processOutgoingPayment	lib/core/outgoing_payment.js	/^  processOutgoingPayment: function(callback) {$/;"	r
processOutgoingPayment	lib/core/outgoing_payment_processor.js	/^  processOutgoingPayment: function(callback) {$/;"	r
processPath	lib/processes/process_set.js	/^function processPath(name) {$/;"	r
processPayment	lib/core/incoming_payment.js	/^  processPayment: function() {$/;"	r
processSet	lib/processes/process_manager.js	/^  this.processSet = processSet;$/;"	r
processSet	lib/processes/process_manager.js	/^var processSet = require(__dirname+'\/index.js');$/;"	r
processSet	lib/processes/supervisor.js	/^var processSet = require(__dirname+'\/index.js');$/;"	r
processes	index.js	/^exports.processes = require(__dirname+'\/lib\/processes\/');$/;"	r
processes	lib/cli/start_gateway.js	/^    var processes = [$/;"	r
processes	lib/http/controllers/api/start_gateway.js	/^  var processes = req.body.processes;$/;"	r
processes	lib/processes/process_set.js	/^  this.processes = {};$/;"	r
processes	lib/processes/supervisor.js	/^        processes = started;$/;"	r
processes	lib/processes/supervisor.js	/^    var processes;$/;"	r
production	lib/data/database.json	/^  "production": {$/;"	f
program	.settings/launch.json	/^			"program": "bin\/gateway",$/;"	f
promptly	package.json	/^    "promptly": "~0.2.0"$/;"	f
properties	lib/host_meta/link.js	/^  this.properties = options.properties || {};$/;"	r
protocol	processes/server.js	/^gatewayd.logger.info('Serving REST API and Angular WebApp at', protocol, ':\/\/', host, ':', port);$/;"	r
protocol	processes/server.js	/^var protocol = ssl ? 'https' : 'http';$/;"	r
prototype	lib/api/configure_gatewayd.js	/^ConfigureGatewayd.prototype = {$/;"	r
prototype	lib/core/deposit_processor.js	/^DepositProcessor.prototype = {$/;"	r
prototype	lib/core/incoming_payment.js	/^IncomingPayment.prototype = {$/;"	r
prototype	lib/core/outgoing_payment.js	/^OutgoingPayment.prototype = {$/;"	r
prototype	lib/core/outgoing_payment_processor.js	/^OutgoingPaymentProcessor.prototype = {$/;"	r
prototype	lib/core/withdrawal_processor.js	/^WithdrawalProcessor.prototype = {$/;"	r
prototype	lib/errors/enqueue_outgoing_payment_error.js	/^EnqueueOutgoingPaymentError.prototype = Object.create(Error.prototype);$/;"	r
prototype	lib/host_meta/bridge_payment_link.js	/^BridgePaymentLink.prototype = Object.create(Link.prototype);$/;"	r
prototype	lib/host_meta/bridge_payment_status_link.js	/^BridgePaymentStatusLink.prototype = Object.create(Link.prototype);$/;"	r
prototype	lib/host_meta/bridge_quote_link.js	/^BridgeQuoteLink.prototype = Object.create(Link.prototype);$/;"	r
prototype	lib/host_meta/webfinger_link.js	/^WebfingerLink.prototype = Object.create(Link.prototype);$/;"	r
prototype	lib/http/controllers/api/enqueue_outgoing_payment.js	/^OutgoingRipplePaymentsController.prototype = {$/;"	r
prototype	lib/processes/process_manager.js	/^ProcessManager.prototype = {$/;"	r
prototype	lib/processes/process_set.js	/^ProcessSet.prototype = {$/;"	r
prototype	lib/ripple_rest_error_handler.js	/^RippleRestErrorHandler.prototype = {$/;"	r
publicCtrl	lib/app.js	/^var publicCtrl = require(__dirname + '\/http\/controllers\/public');$/;"	r
publicCtrl	lib/http/routers/user_router.js	/^var publicCtrl = require(__dirname+'\/..\/controllers\/public\/');$/;"	r
put('/'	lib/http/routers/resources_router.js	/^  router.put('\/' + resource + '\/:id', controllers[resource].update);$/;"	r
put('/v1/external_accounts/'	test/http/crud/external_accounts.js	/^      .put('\/v1\/external_accounts\/'+externalAccountCreated.id)$/;"	r
put('/v1/external_transactions/'	test/http/crud/external_transactions.js	/^      .put('\/v1\/external_transactions\/'+externalTransactionCreated.id)$/;"	r
put('/v1/polcies/'	test/http/crud/policies.js	/^      .put('\/v1\/polcies\/'+policyCreated.id)$/;"	r
put('/v1/ripple_addresses/'	test/http/crud/ripple_addresses.js	/^      .put('\/v1\/ripple_addresses\/'+rippleAddressCreated.id)$/;"	r
put('/v1/ripple_transactions/'	test/http/crud/ripple_transactions.js	/^      .put('\/v1\/ripple_transactions\/'+rippleTransactionCreated.id)$/;"	r
query	lib/api/get_user_accounts.js	/^  var query = 'select u.id, u.name, address as independent_address, ea.id as external_account_id from users u inner join (select * from ripple_addresses where type=\\'independent\\') ra on ra.user_id = u.id inner join (select * from external_accounts where name=\\'default\\') ea on ea.user_id = u.id;';$/;"	r
query	lib/data/controllers/external_transactions.js	/^    var query = 'select external_transactions.id, currency, amount, deposit, ripple_transaction_id,';$/;"	r
query	lib/data/controllers/external_transactions.js	/^    var query = {$/;"	r
query	lib/data/controllers/ripple_transactions.js	/^    var query = 'select * from (select address, tag, id as ripple_address_id from ripple_addresses where user_id = ' + userId + ') addresses join ripple_transactions on ripple_transactions.to_address_id = addresses.ripple_address_id or ripple_transactions.from_address_id = addresses.ripple_address_id;';$/;"	r
query	lib/data/controllers/ripple_transactions.js	/^    var query = 'select * from (select address, tag, id as ripple_address_id from ripple_addresses where user_id = ' + userId + ') addresses join ripple_transactions on ripple_transactions.to_address_id = addresses.ripple_address_id;';$/;"	r
query	lib/data/controllers/ripple_transactions.js	/^    var query = 'select * from (select address, tag, id as ripple_address_id from ripple_addresses where user_id = '+userId+') addresses join ripple_transactions on ripple_transactions.from_address_id = addresses.ripple_address_id;';$/;"	r
query	lib/data/pagination_util.js	/^    var query = { where: {} };$/;"	r
query	lib/http/controllers/resources/external_transactions.js	/^  var query = PaginationUtil.buildModelPagination(req.query);$/;"	r
query	lib/http/controllers/resources/ripple_transactions.js	/^  var query = PaginationUtil.buildModelPagination(req.query);$/;"	r
query	test/utils/pagination_util.js	/^    var query = PaginationUtil.buildModelPagination({$/;"	r
query	test/utils/pagination_util.js	/^    var query = PaginationUtil.mergeQueryParams({$/;"	r
quote	scripts/jsawk	/^    function quote(string) {$/;"	f
random	test/core/deposit_processor.js	/^var random = function(){ return crypto.randomBytes(16).toString('hex'); };$/;"	r
random	test/core/withdrawal_processor.js	/^var random = function(){ return crypto.randomBytes(16).toString('hex'); };$/;"	r
random	test/http/crud/external_accounts.js	/^var random = function(){ return crypto.randomBytes(16).toString('hex'); };$/;"	r
random	test/http/crud/external_transactions.js	/^var random = function(){ return crypto.randomBytes(16).toString('hex'); };$/;"	r
random	test/http/crud/policies.js	/^var random = function(){ return crypto.randomBytes(16).toString('hex'); };$/;"	r
random	test/http/crud/ripple_addresses.js	/^var random = function(){ return crypto.randomBytes(16).toString('hex'); };$/;"	r
random	test/http/crud/ripple_transactions.js	/^var random = function(){ return crypto.randomBytes(16).toString('hex'); };$/;"	r
random	test/http/crud/users.js	/^var random = function(){ return crypto.randomBytes(16).toString('hex'); };$/;"	r
raygun	config/features-available.json	/^  "raygun": true$/;"	f
read	lib/data/controllers/external_accounts.js	/^  api.read = function(opts, fn){$/;"	r
read	lib/data/controllers/external_transactions.js	/^  api.read = function(opts, fn){$/;"	r
read	lib/data/controllers/ripple_addresses.js	/^  api.read = function(opts, fn){$/;"	r
read	lib/data/controllers/ripple_transactions.js	/^  api.read = function(opts, fn){$/;"	r
read	lib/data/controllers/users.js	/^  api.read = function(opts, fn) {$/;"	r
readAll	lib/data/controllers/external_accounts.js	/^  api.readAll = function(opts, fn){$/;"	r
readAll	lib/data/controllers/external_transactions.js	/^  api.readAll = function(opts, fn) {$/;"	r
readAll	lib/data/controllers/ripple_addresses.js	/^  api.readAll = function(opts, fn){$/;"	r
readAll	lib/data/controllers/ripple_transactions.js	/^  api.readAll = function(opts, fn){$/;"	r
readAll	lib/data/controllers/users.js	/^  api.readAll = function(opts, fn) {$/;"	r
readAllPending	lib/data/controllers/external_transactions.js	/^  api.readAllPending = function(opts, fn){$/;"	r
recipient	lib/core/outgoing_payment.js	/^      recipient: address.address$/;"	r
record	lib/core/outgoing_payment.js	/^  this.record = outgoingPaymentRecord;$/;"	r
recordDeposit	lib/api/record_deposit.js	/^function recordDeposit(options, callback) {$/;"	r
recordDeposit	lib/cli/record_deposit.js	/^function recordDeposit(amount, currency, external_account_id) {$/;"	r
recordDeposit	test/api/record_deposit.js	/^var recordDeposit = gatewayd.api.recordDeposit;$/;"	r
recordIncomingPayment	lib/api/record_incoming_payment.js	/^function recordIncomingPayment(options) {$/;"	r
recorded_payment	test/fixtures/incoming_payments.js	/^  recorded_payment: {$/;"	r
refundColdWallet	lib/api/refund_cold_wallet.js	/^function refundColdWallet(options, callback){$/;"	r
refundColdWallet	lib/cli/refund_cold_wallet.js	/^function refundColdWallet(amount, currency){$/;"	r
registerUser	lib/api/register_user.js	/^function registerUser(opts, fn) {$/;"	r
registerUser	lib/cli/register_user.js	/^function registerUser(username, password, rippleAddress, secret, currency, amount){$/;"	r
rel	lib/host_meta/bridge_payment_link.js	/^    rel: 'https:\/\/gatewayd.org\/gateway-services\/bridge_payments',$/;"	r
rel	lib/host_meta/bridge_payment_status_link.js	/^    rel: 'https:\/\/gatewayd.org\/gateway-services\/bridge_payment_status',$/;"	r
rel	lib/host_meta/bridge_quote_link.js	/^    rel: 'https:\/\/gatewayd.org\/gateway-services\/bridge_payments\/quotes',$/;"	r
rel	lib/host_meta/link.js	/^  this.rel = options.rel;$/;"	r
rel	lib/host_meta/webfinger_link.js	/^    rel: 'lrdd',$/;"	r
remove	lib/processes/process_set.js	/^  remove: function(name) {$/;"	r
removeCurrency	lib/api/remove_currency.js	/^function removeCurrency(currency, fn){$/;"	r
removeCurrency	lib/cli/remove_currency.js	/^function removeCurrency(currency){$/;"	r
reporter	Gruntfile.js	/^          reporter: 'spec'$/;"	r
repository	package.json	/^  "repository": {$/;"	f
request	package.json	/^    "request": "",$/;"	f
request	test/http/activate_user.js	/^var request = require('supertest');$/;"	r
request	test/http/add_currency.js	/^var request = require('supertest');$/;"	r
request	test/http/clear_withdrawals.js	/^var request = require('supertest');$/;"	r
request	test/http/crud/external_accounts.js	/^var request = require('supertest');$/;"	r
request	test/http/crud/external_transactions.js	/^var request = require('supertest');$/;"	r
request	test/http/crud/policies.js	/^var request = require('supertest');$/;"	r
request	test/http/crud/ripple_addresses.js	/^var request = require('supertest');$/;"	r
request	test/http/crud/ripple_transactions.js	/^var request = require('supertest');$/;"	r
request	test/http/crud/users.js	/^var request = require('supertest');$/;"	r
request	test/http/deactivate_user.js	/^var request = require('supertest');$/;"	r
request	test/http/fund_hot_wallet.js	/^var request = require('supertest');$/;"	r
request	test/http/generate_wallet.js	/^var request = require('supertest');$/;"	r
request	test/http/get_account_balance.js	/^var request = require('supertest');$/;"	r
request	test/http/get_cold_wallet.js	/^var request = require('supertest');$/;"	r
request	test/http/get_database_url.js	/^var request = require('supertest');$/;"	r
request	test/http/get_domain.js	/^var request = require('supertest');$/;"	r
request	test/http/get_hot_wallet.js	/^var request = require('supertest');$/;"	r
request	test/http/get_key.js	/^var request = require('supertest');$/;"	r
request	test/http/get_last_payment_hash.js	/^var request = require('supertest');$/;"	r
request	test/http/get_liabilities_balance.js	/^var request = require('supertest');$/;"	r
request	test/http/get_ripple_rest_url.js	/^var request = require('supertest');$/;"	r
request	test/http/get_trust_line.js	/^var request = require('supertest');$/;"	r
request	test/http/list_cleared_transactions.js	/^var request = require('supertest');$/;"	r
request	test/http/list_currencies.js	/^var request = require('supertest');$/;"	r
request	test/http/list_external_accounts.js	/^var request = require('supertest');$/;"	r
request	test/http/list_external_user_accounts.js	/^var request = require('supertest');$/;"	r
request	test/http/list_failed_payments.js	/^var request = require('supertest');$/;"	r
request	test/http/list_incoming_payments.js	/^var request = require('supertest');$/;"	r
request	test/http/list_outgoing_payment.js	/^var request = require('supertest');$/;"	r
request	test/http/list_processes.js	/^var request = require('supertest');$/;"	r
request	test/http/list_queued_deposits.js	/^var request = require('supertest');$/;"	r
request	test/http/list_trustlines.js	/^var request = require('supertest');$/;"	r
request	test/http/list_users.js	/^var request = require('supertest');$/;"	r
request	test/http/list_withdrawals.js	/^var request = require('supertest');$/;"	r
request	test/http/refund_cold_wallet.js	/^var request = require('supertest');$/;"	r
request	test/http/register_user.js	/^var request = require('supertest');$/;"	r
request	test/http/remove_currency.js	/^var request = require('supertest');$/;"	r
request	test/http/retry_failed_payment.js	/^var request = require('supertest');$/;"	r
request	test/http/set_database_url.js	/^var request = require('supertest');$/;"	r
request	test/http/set_domain.js	/^var request = require('supertest');$/;"	r
request	test/http/set_hot_wallet.js	/^var request = require('supertest');$/;"	r
request	test/http/set_key.js	/^var request = require('supertest');$/;"	r
request	test/http/set_last_payment_hash.js	/^var request = require('supertest');$/;"	r
request	test/http/set_ripple_rest_url.js	/^var request = require('supertest');$/;"	r
request	test/http/set_trust_line.js	/^var request = require('supertest');$/;"	r
request	test/http/start_gateway.js	/^var request = require('supertest');$/;"	r
requests	test/fixtures/outgoing_payments.js	/^  requests: {$/;"	r
requests	test/fixtures/ripple_rest_integration.js	/^  requests: {$/;"	r
require-all	package.json	/^    "require-all": "",$/;"	f
require-all-to-camel	lib/data/package.json	/^    "require-all-to-camel": "^1.0.0"$/;"	f
require-all-to-camel	package.json	/^    "require-all-to-camel": "^1.0.0",$/;"	f
requireAll	index.js	/^var requireAll = require('require-all-to-camel');$/;"	r
requireAll	lib/api.js	/^var requireAll = require('require-all-to-camel');$/;"	r
requireAll	lib/data/index.js	/^var requireAll = require('require-all-to-camel');$/;"	r
resource	lib/http/controllers/api/enqueue_outgoing_payment.js	/^  this.resource = '\/payments\/outgoing';$/;"	r
resourcesRouter	lib/app.js	/^var resourcesRouter = require(__dirname+'\/http\/routers\/resources_router.js');$/;"	r
response	lib/api/register_user.js	/^                    var response = user.toJSON();$/;"	r
response	lib/http/controllers/resources/bridges.js	/^        response$/;"	r
response	lib/http/controllers/resources/bridges.js	/^      response$/;"	r
response	lib/http/controllers/resources/bridges.js	/^    response$/;"	r
response	lib/http/controllers/resources/external_accounts.js	/^        response$/;"	r
response	lib/http/controllers/resources/external_accounts.js	/^      response$/;"	r
response	lib/http/controllers/resources/external_accounts.js	/^    response$/;"	r
response	lib/http/controllers/resources/external_transactions.js	/^            response$/;"	r
response	lib/http/controllers/resources/external_transactions.js	/^        response$/;"	r
response	lib/http/controllers/resources/external_transactions.js	/^      response$/;"	r
response	lib/http/controllers/resources/gateway_transactions.js	/^        response$/;"	r
response	lib/http/controllers/resources/gateway_transactions.js	/^      response$/;"	r
response	lib/http/controllers/resources/gateway_transactions.js	/^    response$/;"	r
response	lib/http/controllers/resources/policies.js	/^          response$/;"	r
response	lib/http/controllers/resources/policies.js	/^        response$/;"	r
response	lib/http/controllers/resources/policies.js	/^      response$/;"	r
response	lib/http/controllers/resources/ripple_addresses.js	/^        response$/;"	r
response	lib/http/controllers/resources/ripple_addresses.js	/^      response$/;"	r
response	lib/http/controllers/resources/ripple_addresses.js	/^    response$/;"	r
response	lib/http/controllers/resources/ripple_transactions.js	/^            response$/;"	r
response	lib/http/controllers/resources/ripple_transactions.js	/^        response$/;"	r
response	lib/http/controllers/resources/ripple_transactions.js	/^      response$/;"	r
response	lib/http/controllers/resources/users.js	/^        response$/;"	r
response	lib/http/controllers/resources/users.js	/^      response$/;"	r
response	lib/http/controllers/resources/users.js	/^    response$/;"	r
responses	test/fixtures/outgoing_payments.js	/^  responses: {$/;"	r
restart	lib/processes/process_manager.js	/^  restart: function() {$/;"	r
restartGateway	lib/api/restart_gateway.js	/^function restartGateway() {$/;"	r
result	test/api/fund_hot_wallet.js	/^      .yields(null, {destination_account: walletsFixture.COLD_WALLET, source_account: walletsFixture.HOT_WALLET.address, result: 'tesSUCCESS'});$/;"	r
result	test/core/incoming_payment.js	/^    tecPacthDryPayment.result = 'tecPATH_DRY';$/;"	r
result	test/core/outgoing_payment.js	/^        confirmationResponse.result = 'temPATH_DRY';$/;"	r
result	test/fixtures/incoming_payments.js	/^    result: 'tesSUCCESS',$/;"	r
result	test/fixtures/ripple_rest_integration.js	/^      result: 'tesSUCCESS',$/;"	r
results	lib/http/controllers/public/setup_wizard.js	/^      res.send(200, { success: true, results: resp });$/;"	r
retry	lib/ripple_rest_error_handler.js	/^  this.retry = 'retry';$/;"	r
retryFailedPayment	lib/api/retry_failed_payment.js	/^function retryFailedPayment(rippleTransactionId, callback){$/;"	r
retryFailedPayment	lib/cli/retry_failed_payment.js	/^function retryFailedPayment(rippleTransactionId) {$/;"	r
return	lib/api/register_user.js	/^                    if (err) { sqlTransaction.rollback(); fn(err, null); return; }$/;"	r
return	lib/api/register_user.js	/^          if (err) { fn(err, null); return; }$/;"	r
return	lib/api/register_user.js	/^      if (err) { sqlTransaction.rollback(); fn(err, null); return; }$/;"	r
return	lib/api/register_user.js	/^    return;$/;"	r
return	lib/cli/clear_withdrawal.js	/^      return;$/;"	r
return	lib/cli/get_key.js	/^      return;$/;"	r
return	lib/cli/list_cleared.js	/^      return;$/;"	r
return	lib/cli/list_queued_withdrawals.js	/^      return;$/;"	r
return	lib/cli/list_user_external_accounts.js	/^      return;$/;"	r
return	lib/cli/list_users.js	/^      return;$/;"	r
return	lib/data/controllers/external_transactions.js	/^      return;$/;"	r
return	lib/data/controllers/ripple_addresses.js	/^      return;$/;"	r
return	lib/data/controllers/ripple_transactions.js	/^      return;  $/;"	r
return	lib/data/utils.js	/^		return;$/;"	r
return	lib/http/controllers/public/login_user.js	/^        return;$/;"	r
return	lib/http/controllers/users/index.js	/^    if (err) { res.send(500, { error: err }); return; }$/;"	r
return	lib/http/controllers/users/index.js	/^  if (!userIsAuthorized(req)) { res.send(401); return; }$/;"	r
return	lib/ripple_rest_error_handler.js	/^          return;$/;"	r
ripple	lib/api/create_gateway_transaction.js	/^          ripple = rippleTransaction;$/;"	r
ripple	lib/api/get_trust_lines.js	/^\/**@requires config, ripple$/;"	r
ripple	test/api/create_gateway_transaction.js	/^          ripple: {$/;"	r
ripple-account-monitor	package.json	/^    "ripple-account-monitor": "^2.2.0",$/;"	f
ripple-lib	package.json	/^    "ripple-lib": "",$/;"	f
ripple-rest-client	package.json	/^    "ripple-rest-client": "crazyquark\/ripple-rest-client",$/;"	f
ripple-wallet	lib/data/package.json	/^    "ripple-wallet": "0.1.1",$/;"	f
ripple-wallet	package.json	/^    "ripple-wallet": "1.0.0",$/;"	f
rippleAddress	lib/api/set_hot_wallet.js	/^  var rippleAddress = address;$/;"	r
rippleAddress	lib/http/controllers/resources/ripple_addresses.js	/^            rippleAddress: rippleAddress$/;"	r
rippleAddress	lib/http/controllers/resources/ripple_addresses.js	/^        rippleAddress: rippleAddress$/;"	r
rippleAddress	test/models/ripple_addresses.js	/^      rippleAddress = address;$/;"	r
rippleAddress	test/models/ripple_addresses.js	/^  var rippleAddress;$/;"	r
rippleAddressCreatedId	test/http/crud/ripple_addresses.js	/^        rippleAddressCreatedId = response.body.ripple_address.id;$/;"	r
rippleAddressCreatedId	test/http/crud/ripple_addresses.js	/^var rippleAddressCreatedId;$/;"	r
rippleAddressModel	lib/data/controllers/ripple_addresses.js	/^var rippleAddressModel = require('..\/models\/ripple_addresses');$/;"	r
rippleAddresses	lib/api/get_hosted_address.js	/^\/**@requires config, rippleAddresses$/;"	r
rippleAddresses	lib/data/index.js	/^var rippleAddresses       = require('.\/controllers\/ripple_addresses');$/;"	r
rippleAddresses	lib/http/controllers/users/index.js	/^  rippleAddresses: rippleAddresses,$/;"	r
rippleAddresses	lib/http/controllers/users/index.js	/^function rippleAddresses(req, res) {$/;"	r
rippleAddresses	lib/views/text/index.js	/^  rippleAddresses: printRippleAddressesTable,$/;"	r
rippleQuoteService	lib/api/ripple_quotes.js	/^var rippleQuoteService = new RippleQuoteService({$/;"	r
rippleQuotes	test/api/ripple_quotes.js	/^var rippleQuotes       = require(__dirname + '\/..\/..\/lib\/api\/ripple_quotes.js');$/;"	r
rippleRestClient	lib/api/fund_cold_wallet.js	/^var rippleRestClient = new RippleRestClient({$/;"	r
rippleRestClient	lib/api/fund_hot_wallet.js	/^var rippleRestClient = new RippleRestClient({$/;"	r
rippleRestClient	lib/api/get_trust_lines.js	/^  var rippleRestClient = new RippleRestClient({$/;"	r
rippleRestClient	lib/api/issue_currency.js	/^var rippleRestClient = new RippleRestClient({$/;"	r
rippleRestClient	lib/api/refund_cold_wallet.js	/^var rippleRestClient = new RippleRestClient({$/;"	r
rippleRestClient	lib/api/register_user.js	/^              var rippleRestClient = new RippleRestClient({$/;"	r
rippleRestClient	lib/api/set_trust_line.js	/^  var rippleRestClient = new RippleRestClient({$/;"	r
rippleRestClient	lib/cli/fund_hot_wallet.js	/^var rippleRestClient = new RippleRestClient({$/;"	r
rippleRestClient	lib/core/incoming_payment.js	/^var rippleRestClient  = new RippleRestClient({$/;"	r
rippleRestClient	lib/core/outgoing_payment.js	/^  this.rippleRestClient = new RippleRestClient({$/;"	r
rippleRestClient	lib/data/models/ripple_addresses.js	/^      var rippleRestClient = new RippleRestClient({$/;"	r
rippleRestGetPayments	test/api/get_or_fetch_last_payment_hash.js	/^    rippleRestGetPayments = sinon.stub(RippleRestClient.prototype, 'getPayments');$/;"	r
rippleRestGetPayments	test/api/get_or_fetch_last_payment_hash.js	/^  var rippleRestGetPayments;$/;"	r
rippleRestStub	test/api/set_trust_line.js	/^    var rippleRestStub = sinon.stub(RippleRestClient.prototype, 'setTrustLines');$/;"	r
rippleRestUrl	lib/api/ripple_quotes.js	/^  rippleRestUrl: config.get('RIPPLE_REST_API')$/;"	r
rippleRestUrl	processes/incoming.js	/^    rippleRestUrl: rippleRestBaseUrl,$/;"	r
rippleRootRestClient	lib/api/register_user.js	/^            var rippleRootRestClient = new RippleRestClient({$/;"	r
rippleTransaction	lib/api/create_gateway_transaction.js	/^          gatewayTransaction.rippleTransaction = ripple;$/;"	r
rippleTransaction	lib/api/record_incoming_payment.js	/^            logger.error('[record_incoming_payment.js:recordIncomingPayment] Failed to update ripple_transaction [%j] with fields [%j], ERROR: ' + error, rippleTransaction, options);$/;"	r
rippleTransaction	lib/core/withdrawal_processor.js	/^    var rippleTransaction = self.incomingPayment;$/;"	r
rippleTransaction	lib/http/controllers/resources/ripple_transactions.js	/^                rippleTransaction: rippleTransaction$/;"	r
rippleTransaction	lib/http/controllers/resources/ripple_transactions.js	/^          rippleTransaction: rippleTransaction$/;"	r
rippleTransaction	test/fixtures/transactions.js	/^  rippleTransaction: {$/;"	r
rippleTransaction	test/http/retry_failed_payment.js	/^      rippleTransaction = transaction;$/;"	r
rippleTransaction	test/models/ripple_associations.js	/^            rippleTransaction = transaction;$/;"	r
rippleTransactionCreatedId	test/http/crud/ripple_transactions.js	/^        rippleTransactionCreatedId = response.body.ripple_transaction.id;$/;"	r
rippleTransactionCreatedId	test/http/crud/ripple_transactions.js	/^var rippleTransactionCreatedId;$/;"	r
rippleTransactionModel	lib/data/controllers/ripple_transactions.js	/^var rippleTransactionModel = require('..\/models\/ripple_transactions');$/;"	r
rippleTransactions	lib/data/index.js	/^var rippleTransactions    = require('.\/controllers\/ripple_transactions');$/;"	r
rippleTransactions	lib/http/controllers/users/index.js	/^  rippleTransactions: rippleTransactions,$/;"	r
rippleTransactions	lib/http/controllers/users/index.js	/^function rippleTransactions(req, res) {$/;"	r
rippleTxt	lib/http/controllers/public/build_ripple_txt.js	/^  var rippleTxt = '';$/;"	r
ripple_address	lib/api/register_user.js	/^                    response.ripple_address = ripple_address;$/;"	r
ripple_address	lib/cli/register_user.js	/^    ripple_address: rippleAddress,$/;"	r
ripple_address	lib/http/controllers/api/register_user.js	/^    ripple_address: req.body.ripple_address,$/;"	r
ripple_address	test/core/deposit_processor.js	/^      ripple_address: 'r4EwBWxrx5HxYRyisfGzMto3AT8FZiYdWk'$/;"	r
ripple_address	test/core/withdrawal_processor.js	/^      ripple_address: 'r4EwBWxrx5HxYRyisfGzMto3AT8FZiYdWk'$/;"	r
ripple_address	test/fixtures/outgoing_payments.js	/^    ripple_address: {$/;"	r
ripple_address_id	lib/data/migrations/20140731062106-create-policies.js	/^    ripple_address_id: {$/;"	r
ripple_address_id	lib/data/models/policies.js	/^  ripple_address_id: {$/;"	r
ripple_address_id	test/models/policies.js	/^      ripple_address_id: 97$/;"	r
ripple_address_id	test/models/policies.js	/^      ripple_address_id: 99,$/;"	r
ripple_rest_errors	lib/ripple_rest_error_handler.js	/^  this.ripple_rest_errors = {$/;"	r
ripple_transaction_id	lib/api/create_external_payment.js	/^    ripple_transaction_id: options.ripple_transaction_id,$/;"	r
ripple_transaction_id	lib/api/create_gateway_transaction.js	/^            ripple_transaction_id: ripple.id,$/;"	r
ripple_transaction_id	lib/api/create_gateway_transaction.js	/^            ripple_transaction_id: rippleTransaction.id,$/;"	r
ripple_transaction_id	lib/api/create_gateway_transaction.js	/^          input.ripple_transaction_id = rippleTransaction.id;$/;"	r
ripple_transaction_id	lib/api/finalize_deposit.js	/^    ripple_transaction_id: opts.ripple_transaction_id,$/;"	r
ripple_transaction_id	lib/core/deposit_processor.js	/^      ripple_transaction_id: payment.id$/;"	r
ripple_transaction_id	lib/core/withdrawal_processor.js	/^              ripple_transaction_id: rippleTransaction.id,$/;"	r
ripple_transaction_id	lib/core/withdrawal_processor.js	/^        ripple_transaction_id: rippleTransaction.id$/;"	r
ripple_transaction_id	lib/data/migrations/20131216232955-external-transactions.js	/^    ripple_transaction_id: { type: 'int'},$/;"	r
ripple_transaction_id	lib/data/migrations/20140819202523-create-gateway-transactions.js	/^    ripple_transaction_id: {$/;"	r
ripple_transaction_id	lib/data/models/external_transactions.js	/^  ripple_transaction_id: {$/;"	r
ripple_transaction_id	lib/data/models/gateway_transactions.js	/^  ripple_transaction_id: { $/;"	r
ripple_transaction_id	test/models/gateway_transactions.js	/^      ripple_transaction_id: 123,$/;"	r
ripple_transaction_id	test/models/gateway_transactions.js	/^      ripple_transaction_id: 456,$/;"	r
rippled_busy	lib/ripple_rest_error_handler.js	/^    rippled_busy: 'Rippled Busy'$/;"	r
rippled_busy	test/fixtures/ripple_rest_integration.js	/^      rippled_busy: {$/;"	r
rippled_error_codes	lib/ripple_rest_error_handler.js	/^  this.rippled_error_codes = {$/;"	r
router	lib/http/routers/admin_router.js	/^var router = new express.Router();$/;"	r
router	lib/http/routers/api_router.js	/^var router = new express.Router();$/;"	r
router	lib/http/routers/resources_router.js	/^var router = new express.Router();$/;"	r
router	lib/http/routers/user_router.js	/^var router = new express.Router();$/;"	r
runtimeExecutable	.settings/launch.json	/^			"runtimeExecutable": null,$/;"	f
salt	lib/data/controllers/users.js	/^    opts.salt = api.generateSalt();$/;"	r
salt	lib/data/controllers/users.js	/^  api.verifyPassword = function(password, salt, passwordHash) {$/;"	r
salt	lib/data/migrations/20131216193924-users.js	/^    salt: { type: 'string', notNull: true },$/;"	r
salt	lib/data/models/users.js	/^  salt: Sequelize.STRING,$/;"	r
salt	lib/data/utils.js	/^function verifyPassword (password, salt, passwordHash) {$/;"	r
saltPassword	lib/data/controllers/users.js	/^  api.saltPassword = function(password, salt) {$/;"	r
saltPassword	lib/data/utils.js	/^  saltPassword: saltPassword,$/;"	r
saltPassword	lib/data/utils.js	/^function saltPassword (password, salt) {$/;"	r
sanitized	lib/data/controllers/ripple_transactions.js	/^        var sanitized = {$/;"	r
saveConfigStub	test/api/configure_gatewayd.js	/^    var saveConfigStub = sinon.stub(gatewayd.config, 'save');$/;"	r
saveHotWallet	lib/api/set_hot_wallet.js	/^  function saveHotWallet(address) {$/;"	r
scripts	package.json	/^  "scripts": {$/;"	f
secret	config-example.json	/^    "secret": "ssZ4Yy1hhCwYERNpg7s1PsCmAuuEM",$/;"	f
secret	config/environment.js	/^  'HOT_WALLET': { address: false, secret: false }, \/\/ Required$/;"	r
secret	lib/api/fund_cold_wallet.js	/^    secret: payment.secret,$/;"	r
secret	lib/api/fund_hot_wallet.js	/^    secret: payment.secret,$/;"	r
secret	lib/api/issue_currency.js	/^    secret: secret,$/;"	r
secret	lib/api/refund_cold_wallet.js	/^    secret: config.get('HOT_WALLET').secret,$/;"	r
secret	lib/api/register_user.js	/^                secret: 'masterpassphrase',$/;"	r
secret	lib/api/register_user.js	/^                secret: userOpts.secret,$/;"	r
secret	lib/api/register_user.js	/^    secret: opts.secret,$/;"	r
secret	lib/api/set_hot_wallet.js	/^      secret: secret,$/;"	r
secret	lib/api/set_hot_wallet.js	/^function setHotWallet(address, secret, fn) {$/;"	r
secret	lib/api/set_trust_line.js	/^    secret: hotWallet.secret,$/;"	r
secret	lib/cli/fund_hot_wallet.js	/^    secret: secret$/;"	r
secret	lib/cli/register_user.js	/^    secret: secret,$/;"	r
secret	lib/cli/set_hot_wallet.js	/^  gateway.api.setHotWallet(address, secret, logger.info);$/;"	r
secret	lib/core/outgoing_payment.js	/^        secret: hotWallet.secret$/;"	r
secret	lib/core/outgoing_payment.js	/^    secret: hotWallet.secret$/;"	r
secret	lib/data/migrations/20131219233339-ripple-addresses.js	/^    secret: { type: 'string' },$/;"	r
secret	lib/data/models/ripple_addresses.js	/^  secret: { $/;"	r
secret	lib/http/controllers/api/fund_hot_wallet.js	/^    secret: req.body.secret$/;"	r
secret	lib/http/controllers/api/register_user.js	/^    secret: req.body.secret,$/;"	r
secret	lib/http/controllers/api/set_hot_wallet.js	/^      secret = wallet.secret;$/;"	r
secret	lib/http/controllers/api/set_hot_wallet.js	/^  gateway.api.setHotWallet(address, secret, function(err, wallet){$/;"	r
secret	lib/http/controllers/api/set_hot_wallet.js	/^  var secret = req.body.secret;$/;"	r
secret	test/api/fund_hot_wallet.js	/^      secret: 'invalidSecret'$/;"	r
secret	test/fixtures/outgoing_payments.js	/^      secret: null,$/;"	r
secret	test/http/fund_hot_wallet.js	/^        secret: SECRET$/;"	r
secret	test/http/set_hot_wallet.js	/^      .send({ address: 'rscJF4TWS2jBe43MvUomTtCcyrbtTRMSNr', secret: 'ssuBBapjuJ2hE5wto254aNWERa8VV' })$/;"	r
self	lib/core/deposit_processor.js	/^    var self = this;$/;"	r
self	lib/core/outgoing_payment_processor.js	/^    var self = this;$/;"	r
self	lib/core/withdrawal_processor.js	/^    var self = this;$/;"	r
send	lib/http/response_handler.js	/^function send(response, body, statusCode) {$/;"	r
sender_claims	lib/host_meta/bridge_payment_link.js	/^  _this.properties.fields.sender_claims = senderClaims;$/;"	r
sequelize	lib/data/controllers/external_transactions.js	/^var sequelize = require('..\/sequelize.js');$/;"	r
sequelize	lib/data/controllers/ripple_transactions.js	/^var sequelize = require('..\/sequelize.js');$/;"	r
sequelize	lib/data/package.json	/^    "sequelize": "1.7.0",$/;"	f
sequelize	package.json	/^    "sequelize": "^1.7.10",$/;"	f
series	lib/core/policy_engine.js	/^    var series = [];$/;"	r
server	index.js	/^exports.server = require(__dirname+'\/lib\/app.js');$/;"	r
server	lib/http/response_handler.js	/^  server:         'server'$/;"	r
server	lib/ripple_rest_error_handler.js	/^    server: function() {$/;"	r
server	test/fixtures/ripple_rest_integration.js	/^      server: {$/;"	r
set	lib/api/configure_gatewayd.js	/^  set: function(options) {$/;"	r
set	lib/data/models/configs.js	/^    set: function(key, value) {$/;"	r
setColdWallet	lib/api/set_cold_wallet.js	/^function setColdWallet(address, fn){$/;"	r
setColdWallet	lib/cli/set_cold_wallet.js	/^function setColdWallet(address){$/;"	r
setConfigStub	test/api/configure_gatewayd.js	/^    var setConfigStub = sinon.stub(gatewayd.config, 'set');$/;"	r
setHotWallet	lib/api/set_hot_wallet.js	/^function setHotWallet(address, secret, fn) {$/;"	r
setHotWallet	lib/cli/set_hot_wallet.js	/^function setHotWallet(address, secret){$/;"	r
setKey	lib/api/get_key.js	/^var setKey = require(__dirname+'\/set_key.js');$/;"	r
setKey	lib/api/set_key.js	/^function setKey(fn){$/;"	r
setKey	lib/cli/set_key.js	/^function setKey(){$/;"	r
setLastPaymentHash	lib/cli/set_last_payment_hash.js	/^function setLastPaymentHash(hash){$/;"	r
setLastPaymentHash	lib/data/models/ripple_addresses.js	/^    setLastPaymentHash: function(hash) {$/;"	r
setSenderClaims	lib/host_meta/bridge_payment_link.js	/^BridgePaymentLink.prototype.setSenderClaims = function setSenderClaims(senderClaims) {$/;"	r
setTrustLine	lib/api/set_trust_line.js	/^function setTrustLine(currency, amount, callback) {$/;"	r
setTrustLine	lib/cli/set_trust.js	/^function setTrustLine(currency, amount){$/;"	r
setterMethods	lib/data/models/external_accounts.js	/^  setterMethods: {$/;"	r
setterMethods	lib/data/models/external_transactions.js	/^  setterMethods: {$/;"	r
setterMethods	lib/data/models/kyc_data.js	/^  setterMethods: {$/;"	r
setterMethods	lib/data/models/ripple_addresses.js	/^  setterMethods: {$/;"	r
setterMethods	lib/data/models/ripple_transactions.js	/^  setterMethods: {$/;"	r
sha	lib/data/controllers/users.js	/^    var sha = crypto.createHash('sha256');$/;"	r
sha	lib/data/utils.js	/^	var sha = crypto.createHash('sha256');$/;"	r
show	lib/http/controllers/resources/bridges.js	/^  show: show,$/;"	r
show	lib/http/controllers/resources/bridges.js	/^function show(req, res){$/;"	r
show	lib/http/controllers/resources/external_accounts.js	/^  show: show,$/;"	r
show	lib/http/controllers/resources/external_accounts.js	/^function show(req, res){$/;"	r
show	lib/http/controllers/resources/external_transactions.js	/^  show: show,$/;"	r
show	lib/http/controllers/resources/external_transactions.js	/^function show(req, res){$/;"	r
show	lib/http/controllers/resources/gateway_transactions.js	/^  show: show,$/;"	r
show	lib/http/controllers/resources/gateway_transactions.js	/^function show(req, res){$/;"	r
show	lib/http/controllers/resources/policies.js	/^  show: function(request, response) {$/;"	r
show	lib/http/controllers/resources/ripple_addresses.js	/^  show: show,$/;"	r
show	lib/http/controllers/resources/ripple_addresses.js	/^function show(req, res){$/;"	r
show	lib/http/controllers/resources/ripple_transactions.js	/^  show: show,$/;"	r
show	lib/http/controllers/resources/ripple_transactions.js	/^function show(req, res){ RippleTransaction.find({$/;"	r
show	lib/http/controllers/resources/users.js	/^  show: show,$/;"	r
show	lib/http/controllers/resources/users.js	/^function show(req, res){$/;"	r
show	lib/http/controllers/users/index.js	/^  show: show$/;"	r
show	lib/http/controllers/users/index.js	/^function show(req, res) {$/;"	r
sinon	lib/data/package.json	/^    "sinon": "1.9.0"$/;"	f
sinon	package.json	/^    "sinon": "^1.12.1",$/;"	f
sinon	test/api/create_ripple_payment.js	/^var sinon           = require('sinon');$/;"	r
sinon	test/api/enqueue_outgoing_payment.js	/^var sinon                  = require('sinon');$/;"	r
sinon	test/api/fund_hot_wallet.js	/^var sinon = require('sinon');$/;"	r
sinon	test/api/get_hosted_address.js	/^var sinon = require('sinon');$/;"	r
sinon	test/api/get_liabilities.js	/^var sinon = require('sinon');$/;"	r
sinon	test/api/get_trust_lines.js	/^var sinon = require('sinon');$/;"	r
sinon	test/api/record_incoming_payment.js	/^var sinon = require('sinon');$/;"	r
sinon	test/api/refund_cold_wallet.js	/^var sinon = require('sinon');$/;"	r
sinon	test/api/ripple_quotes.js	/^var sinon              = require('sinon');$/;"	r
sinon	test/api/set_trust_line.js	/^var sinon             = require('sinon');$/;"	r
sjcl	lib/data/package.json	/^    "sjcl": "1.0.0",$/;"	f
slice	scripts/jsawk	/^  function slice(obj,start,end,step){$/;"	f
sortDirection	lib/data/pagination_util.js	/^      sortDirection: 'DESC',$/;"	r
sortDirection	lib/data/pagination_util.js	/^      sortDirection: request.sort_direction && request.sort_direction.toUpperCase(),$/;"	r
sortParams	lib/data/pagination_util.js	/^    sortParams = _.defaults({}, sortParams, defaults);$/;"	r
sortParams	lib/data/pagination_util.js	/^    sortParams = {$/;"	r
sort_direction	test/utils/pagination_util.js	/^      sort_direction: 'asc',$/;"	r
sort_direction	test/utils/pagination_util.js	/^      sort_direction: 'desc'$/;"	r
sort_direction	test/utils/pagination_util.js	/^      sort_direction: 'desc',$/;"	r
sort_field	test/utils/pagination_util.js	/^      sort_field: 'status'$/;"	r
source	lib/api/ripple_quotes.js	/^    source: options.source,$/;"	r
source	lib/api/ripple_quotes.js	/^    source: {$/;"	r
source	lib/http/controllers/api/ripple_quotes_incoming.js	/^    source: {$/;"	r
source	test/api/ripple_quotes.js	/^          source: {$/;"	r
source	test/fixtures/ripple_quotes.js	/^      source: {$/;"	r
sourceAddress	lib/api/create_ripple_payment.js	/^      sourceAddress = address;$/;"	r
sourceAddress	lib/api/create_ripple_payment.js	/^  var sourceAddress, destinationAddress;$/;"	r
sourceAmount	lib/core/incoming_payment.js	/^    var sourceAmount      =  utils.parseSourceBalanceChanges(payment.source_balance_changes);$/;"	r
sourceChange	lib/core/outgoing_payment.js	/^    var sourceChange = utils.parseSourceBalanceChanges(payment.payment.source_balance_changes);$/;"	r
sourceRecord	lib/api/record_incoming_payment.js	/^    sourceRecord: RippleAddresses.findOrCreate({$/;"	r
source_account	lib/api/fund_cold_wallet.js	/^      source_account: 'rHb9CJAWyB4rj91VRWn96DkukG4bwdtyTh',$/;"	r
source_account	lib/api/fund_hot_wallet.js	/^      source_account: config.get('COLD_WALLET'),$/;"	r
source_account	lib/api/issue_currency.js	/^        source_account: config.get('COLD_WALLET'),$/;"	r
source_account	lib/api/refund_cold_wallet.js	/^      source_account: config.get('HOT_WALLET').address,$/;"	r
source_account	lib/api/register_user.js	/^                  source_account: 'rHb9CJAWyB4rj91VRWn96DkukG4bwdtyTh',$/;"	r
source_account	lib/core/incoming_payment.js	/^      source_account       :  payment.source_account,$/;"	r
source_account	test/api/fund_hot_wallet.js	/^      .yields(null, {destination_account: walletsFixture.COLD_WALLET, source_account: walletsFixture.HOT_WALLET.address, result: 'tesSUCCESS'});$/;"	r
source_account	test/api/record_incoming_payment.js	/^      source_account: address,$/;"	r
source_account	test/fixtures/incoming_payments.js	/^    source_account: 'rscJF4TWS2jBe43MvUomTtCcyrbtTRMSNr',$/;"	r
source_account	test/fixtures/ripple_rest_integration.js	/^      source_account: 'rscJF4TWS2jBe43MvUomTtCcyrbtTRMSNr',$/;"	r
source_account	test/fixtures/transactions.js	/^    source_account: 'rscJF4TWS2jBe43MvUomTtCcyrbtTRMSNr',$/;"	r
source_account_id	lib/api/create_external_payment.js	/^    source_account_id: options.source_account_id,$/;"	r
source_account_id	lib/data/models/external_transactions.js	/^  source_account_id: {$/;"	r
source_account_id	test/fixtures/transactions.js	/^    source_account_id: 432,$/;"	r
source_address	test/api/create_external_payment.js	/^        source_address       : 'acct:gateway',$/;"	r
source_address	test/api/create_external_payment.js	/^        source_address       : 'acct:me@stevenzeiler.com',$/;"	r
source_address	test/api/create_gateway_transaction.js	/^            source_address       : 'acct:gateway',$/;"	r
source_address	test/api/create_gateway_transaction.js	/^            source_address       : 'acct:me@stevenzeiler.com',$/;"	r
source_address	test/api/create_gateway_transaction.js	/^            source_address       : 'rfemvFrpCAPc4hUa1v8mPRYdmaCqR1iFpe',$/;"	r
source_address	test/api/create_ripple_payment.js	/^        source_address       : walletsFixture.COLD_WALLET,$/;"	r
source_address_id	lib/data/migrations/20140918033326-create-bridges.js	/^    source_address_id: {$/;"	r
source_address_id	lib/data/models/bridges.js	/^  source_address_id: {$/;"	r
source_amount	lib/api/create_external_payment.js	/^    source_amount: options.source_amount,$/;"	r
source_amount	lib/core/incoming_payment.js	/^      source_amount        :  sourceAmount,$/;"	r
source_amount	lib/data/models/external_transactions.js	/^    source_amount: function () {$/;"	r
source_amount	lib/data/models/external_transactions.js	/^  source_amount: {$/;"	r
source_amount	test/api/create_external_payment.js	/^        source_amount        : 15,$/;"	r
source_amount	test/api/create_gateway_transaction.js	/^            source_amount        : 14$/;"	r
source_amount	test/api/create_ripple_payment.js	/^        source_amount        : 15,$/;"	r
source_amount	test/api/record_incoming_payment.js	/^      source_amount: {$/;"	r
source_amount	test/fixtures/incoming_payments.js	/^    source_amount: { value: '-0.012', currency: 'XRP', issuer: '' },$/;"	r
source_amount	test/fixtures/ripple_rest_integration.js	/^      source_amount: { value: '0.001939', currency: 'XRP', issuer: '' },$/;"	r
source_amount	test/fixtures/transactions.js	/^    source_amount: 4.32,$/;"	r
source_amount	test/fixtures/transactions.js	/^    source_amount: {$/;"	r
source_balance_changes	test/core/outgoing_payment.js	/^    validatedPayment.source_balance_changes = [$/;"	r
source_balance_changes	test/core/utils.js	/^    source_balance_changes = [$/;"	r
source_balance_changes	test/fixtures/ripple_rest_integration.js	/^      source_balance_changes: [$/;"	r
source_currencies	lib/core/outgoing_payment.js	/^    paymentObject.source_currencies = [];$/;"	r
source_currency	lib/api/create_external_payment.js	/^    source_currency: options.source_currency,$/;"	r
source_currency	lib/data/models/external_transactions.js	/^  source_currency: {$/;"	r
source_currency	test/api/create_external_payment.js	/^        source_currency      : 'XAU',$/;"	r
source_currency	test/api/create_gateway_transaction.js	/^            source_currency      : 'BTC',$/;"	r
source_currency	test/api/create_ripple_payment.js	/^        source_currency      : 'XAU'$/;"	r
source_currency	test/api/create_ripple_payment.js	/^        source_currency      : 'XAU',$/;"	r
source_currency	test/fixtures/transactions.js	/^    source_currency: 'JPY',$/;"	r
source_slippage	test/fixtures/incoming_payments.js	/^    source_slippage: '0',$/;"	r
source_slippage	test/fixtures/ripple_rest_integration.js	/^      source_slippage: '0',$/;"	r
source_tag	lib/core/outgoing_payment.js	/^        paymentObject.payment.source_tag = _this.record.from_address_id.toString();$/;"	r
source_tag	test/api/create_ripple_payment.js	/^        source_tag           : 9993222$/;"	r
source_tag	test/api/create_ripple_payment.js	/^        source_tag           : 9993222,$/;"	r
source_tag	test/fixtures/incoming_payments.js	/^    source_tag: '',$/;"	r
source_tag	test/fixtures/ripple_rest_integration.js	/^      source_tag: '',$/;"	r
source_tag	test/fixtures/ripple_rest_integration.js	/^      source_tag: '623',$/;"	r
spawn	lib/processes/process_manager.js	/^var spawn = require('child_process').spawn;$/;"	r
sprintf	scripts/jsawk	/^sprintf() for JavaScript 0.7-beta1$/;"	f
sql	lib/api/get_user_accounts.js	/^var sql = require(__dirname+'\/..\/data\/sequelize.js');$/;"	r
sql	lib/api/register_user.js	/^* @require data, sql, config$/;"	r
sql	lib/api/register_user.js	/^var sql = require(__dirname +'\/..\/data\/sequelize.js');$/;"	r
sql-mq-worker	package.json	/^    "sql-mq-worker": "^1.0.3",$/;"	f
sqlite3	package.json	/^    "sqlite3": "^3.0.2",$/;"	f
src	Gruntfile.js	/^        src: ['.\/index.js', '.\/lib\/api\/*.js'],$/;"	r
src	Gruntfile.js	/^        src: ['test\/models\/**\/*.js']$/;"	r
ssl	processes/server.js	/^var ssl = (gatewayd.config.get('SSL') && (gatewayd.config.get('SSL') !== 'false'));$/;"	r
stackTraceLimit	processes/incoming.js	/^  Error.stackTraceLimit = Infinity;$/;"	r
staging	lib/data/database.json	/^  "staging": {$/;"	f
start	lib/processes/process_manager.js	/^  start: function() {$/;"	r
start	lib/processes/supervisor.js	/^Supervisor.prototype.start = function() {$/;"	r
start	lib/processes/supervisor.js	/^pm2.start      = Promise.promisify(pm2.start);$/;"	r
start	package.json	/^    "start": ".\/bin\/gateway start",$/;"	f
start	processes/incoming.js	/^function start(gatewayd) {$/;"	r
startGateway	lib/api/start_gateway.js	/^function startGateway() {$/;"	r
state	config/policies/invoice_policy.js	/^            state: 'complete'$/;"	r
state	config/policies/invoice_policy.js	/^            state: 'outgoing'$/;"	r
state	lib/api/create_gateway_transaction.js	/^            state: 'invoice',$/;"	r
state	lib/api/create_gateway_transaction.js	/^      input.state      = 'invoice';$/;"	r
state	lib/api/create_gateway_transaction.js	/^      input.state = 'invoice';$/;"	r
state	lib/api/create_gateway_transaction.js	/^      output.state     = 'invoice';$/;"	r
state	lib/api/create_gateway_transaction.js	/^      output.state = 'invoice';$/;"	r
state	lib/api/create_ripple_payment.js	/^    state: options.state,$/;"	r
state	lib/api/enqueue_outgoing_payment.js	/^    state: 'outgoing',$/;"	r
state	lib/api/record_incoming_payment.js	/^        state: 'invoice',$/;"	r
state	lib/api/record_incoming_payment.js	/^      state: incomingPayment.state,$/;"	r
state	lib/api/record_incoming_payment.js	/^    state: incomingPayment.state,$/;"	r
state	lib/api/retry_failed_payment.js	/^        state: 'outgoing'$/;"	r
state	lib/core/deposit_processor.js	/^              state: 'outgoing'$/;"	r
state	lib/core/deposit_processor.js	/^              state: 'outgoing',$/;"	r
state	lib/core/deposit_processor.js	/^            state: 'invoice'$/;"	r
state	lib/core/incoming_payment.js	/^      state                : 'incoming',$/;"	r
state	lib/core/outgoing_payment.js	/^          _this.record.state = failed;$/;"	r
state	lib/core/outgoing_payment.js	/^          _this.record.state = outgoing;$/;"	r
state	lib/core/outgoing_payment.js	/^        _this.record.state = 'failed';$/;"	r
state	lib/core/outgoing_payment.js	/^        _this.record.state = 'succeeded';$/;"	r
state	lib/core/outgoing_payment.js	/^      _this.record.state = 'pending';$/;"	r
state	lib/core/withdrawal_processor.js	/^      state: 'succeeded'$/;"	r
state	lib/data/migrations/20140819202523-create-gateway-transactions.js	/^    state: {$/;"	r
state	lib/data/models/gateway_transactions.js	/^  state: { $/;"	r
state	lib/data/models/ripple_transactions.js	/^  state: {$/;"	r
state	processes/outgoing.js	/^      state: 'outgoing',$/;"	r
state	processes/withdrawals.js	/^          state: 'failed',$/;"	r
state	processes/withdrawals.js	/^    state: 'incoming'$/;"	r
state	test/api/create_external_payment.js	/^        state                : 'invoice',$/;"	r
state	test/api/create_gateway_transaction.js	/^          state    : 'invoice',$/;"	r
state	test/api/create_ripple_payment.js	/^        state                : 'invoice',$/;"	r
state	test/api/list_failed_payments.js	/^        state: 'failed'$/;"	r
state	test/api/list_outgoing_payments.js	/^            state: 'outgoing'$/;"	r
state	test/api/record_incoming_payment.js	/^      state: 'incoming',$/;"	r
state	test/api/retry_failed_payment.js	/^      state: 'failed',$/;"	r
state	test/api/retry_failed_payment.js	/^      state: 'success',$/;"	r
state	test/core/withdrawal_processor.js	/^        state: 'incoming'$/;"	r
state	test/fixtures/incoming_payments.js	/^      state            : 'incoming',$/;"	r
state	test/fixtures/incoming_payments.js	/^    state: 'incoming',$/;"	r
state	test/fixtures/incoming_payments.js	/^    state: 'validated',$/;"	r
state	test/fixtures/outgoing_payments.js	/^      state: 'outgoing',$/;"	r
state	test/fixtures/ripple_rest_integration.js	/^      state: 'validated',$/;"	r
state	test/http/retry_failed_payment.js	/^      state: 'failed'$/;"	r
state	test/models/gateway_transactions.js	/^        state: 'invoice'$/;"	r
state	test/models/gateway_transactions.js	/^      state: 'pending'$/;"	r
state	test/models/ripple_associations.js	/^            state: 'outgoing'$/;"	r
state	test/utils/pagination_util.js	/^        state: 'outgoing',$/;"	r
state	test/utils/pagination_util.js	/^      state: 'outgoing',$/;"	r
status	config/policies/invoice_policy.js	/^            status: 'complete'$/;"	r
status	config/policies/no_policy.js	/^      status: 'failed',$/;"	r
status	lib/api/clear_withdrawal.js	/^        status: 'cleared'$/;"	r
status	lib/api/create_external_payment.js	/^    status: options.state,$/;"	r
status	lib/api/finalize_deposit.js	/^    status: 'processed'$/;"	r
status	lib/api/list_queued_deposits.js	/^    status: 'queued'$/;"	r
status	lib/api/record_deposit.js	/^        status: 'queued',$/;"	r
status	lib/core/withdrawal_processor.js	/^              status: 'queued'$/;"	r
status	lib/core/withdrawal_processor.js	/^              status: 'queued',$/;"	r
status	lib/core/withdrawal_processor.js	/^            status: 'invoice'$/;"	r
status	lib/data/controllers/external_transactions.js	/^      status: 'pending',$/;"	r
status	lib/data/migrations/20131216232955-external-transactions.js	/^    status: { type: 'string' },$/;"	r
status	lib/data/models/external_transactions.js	/^  status: {$/;"	r
status	processes/deposits.js	/^      status: 'queued'$/;"	r
status	processes/policy_engine.js	/^    status: 'incoming'$/;"	r
status_url	test/fixtures/ripple_rest_integration.js	/^      status_url: 'https:\/\/api.ripple.com\/v1\/accounts\/rDmSZbgLbw7qkkgDXMWoiSQX7VZ6KknWcL\/payments\/1'$/;"	r
stop	lib/processes/process_manager.js	/^  stop: function() {$/;"	r
stop	lib/processes/supervisor.js	/^Supervisor.prototype.stop = function() {$/;"	r
stopGateway	lib/api/stop_gateway.js	/^function stopGateway() {$/;"	r
stopOnEntry	.settings/launch.json	/^			"stopOnEntry": true,$/;"	f
str	scripts/jsawk	/^    function str(key, holder) {$/;"	f
str_repeat	scripts/jsawk	/^	function str_repeat(input, multiplier) {$/;"	f
stub	test/api/get_liabilities.js	/^    var stub = sinon.stub(Client.prototype, 'getAccountBalance')$/;"	r
stub	test/api/ripple_quotes.js	/^    var stub = sinon.stub(RippleQuoteService.prototype, 'build').returns(Promise.reject(new Error('Destination amount is not a valid number')));$/;"	r
stub	test/api/ripple_quotes.js	/^    var stub = sinon.stub(RippleQuoteService.prototype, 'build').returns(Promise.reject(new Error('Source address is not a valid ripple address')));$/;"	r
stub	test/api/ripple_quotes.js	/^    var stub = sinon.stub(RippleQuoteService.prototype, 'build').returns(Promise.resolve({}));$/;"	r
subdomain	lib/data/logs.js	/^    subdomain: config.get('LOGGLY').subdomain,$/;"	r
success	lib/http/controllers/api/enqueue_outgoing_payment.js	/^            success: false,$/;"	r
success	lib/http/controllers/api/enqueue_outgoing_payment.js	/^            success: true,$/;"	r
success	lib/http/controllers/api/set_key.js	/^        success: true,$/;"	r
success	lib/http/controllers/resources/bridges.js	/^            success: true$/;"	r
success	lib/http/controllers/resources/bridges.js	/^            success: true,$/;"	r
success	lib/http/controllers/resources/bridges.js	/^          success: false,$/;"	r
success	lib/http/controllers/resources/bridges.js	/^        success: false,$/;"	r
success	lib/http/controllers/resources/bridges.js	/^        success: true,$/;"	r
success	lib/http/controllers/resources/external_accounts.js	/^            success: true$/;"	r
success	lib/http/controllers/resources/external_accounts.js	/^            success: true,$/;"	r
success	lib/http/controllers/resources/external_accounts.js	/^          success: false,$/;"	r
success	lib/http/controllers/resources/external_accounts.js	/^        success: false,$/;"	r
success	lib/http/controllers/resources/external_accounts.js	/^        success: true,$/;"	r
success	lib/http/controllers/resources/external_transactions.js	/^                success: true$/;"	r
success	lib/http/controllers/resources/external_transactions.js	/^                success: true,$/;"	r
success	lib/http/controllers/resources/external_transactions.js	/^            success: false,$/;"	r
success	lib/http/controllers/resources/external_transactions.js	/^          success: false,$/;"	r
success	lib/http/controllers/resources/external_transactions.js	/^          success: true,$/;"	r
success	lib/http/controllers/resources/external_transactions.js	/^        success: false,$/;"	r
success	lib/http/controllers/resources/external_transactions.js	/^        success: true,$/;"	r
success	lib/http/controllers/resources/gateway_transactions.js	/^            success: true$/;"	r
success	lib/http/controllers/resources/gateway_transactions.js	/^            success: true,$/;"	r
success	lib/http/controllers/resources/gateway_transactions.js	/^          success: false,$/;"	r
success	lib/http/controllers/resources/gateway_transactions.js	/^        success: false,$/;"	r
success	lib/http/controllers/resources/gateway_transactions.js	/^        success: true,$/;"	r
success	lib/http/controllers/resources/policies.js	/^              success: false,$/;"	r
success	lib/http/controllers/resources/policies.js	/^              success: true$/;"	r
success	lib/http/controllers/resources/policies.js	/^              success: true,$/;"	r
success	lib/http/controllers/resources/policies.js	/^            success: false,$/;"	r
success	lib/http/controllers/resources/policies.js	/^            success: true,$/;"	r
success	lib/http/controllers/resources/policies.js	/^          success: false,$/;"	r
success	lib/http/controllers/resources/policies.js	/^          success: true,$/;"	r
success	lib/http/controllers/resources/ripple_addresses.js	/^            success: true$/;"	r
success	lib/http/controllers/resources/ripple_addresses.js	/^            success: true,$/;"	r
success	lib/http/controllers/resources/ripple_addresses.js	/^          success: false,$/;"	r
success	lib/http/controllers/resources/ripple_addresses.js	/^        success: false,$/;"	r
success	lib/http/controllers/resources/ripple_addresses.js	/^        success: true,$/;"	r
success	lib/http/controllers/resources/ripple_transactions.js	/^                success: true$/;"	r
success	lib/http/controllers/resources/ripple_transactions.js	/^                success: true,$/;"	r
success	lib/http/controllers/resources/ripple_transactions.js	/^            success: false,$/;"	r
success	lib/http/controllers/resources/ripple_transactions.js	/^          success: false,$/;"	r
success	lib/http/controllers/resources/ripple_transactions.js	/^          success: true,$/;"	r
success	lib/http/controllers/resources/users.js	/^            success: true$/;"	r
success	lib/http/controllers/resources/users.js	/^            success: true,$/;"	r
success	lib/http/controllers/resources/users.js	/^          success: false,$/;"	r
success	lib/http/controllers/resources/users.js	/^        success: false,$/;"	r
success	lib/http/controllers/resources/users.js	/^        success: true,$/;"	r
success	lib/http/response_handler.js	/^        success: true$/;"	r
success	lib/http/response_handler.js	/^    success: false,$/;"	r
success	lib/http/response_handler.js	/^  success: success,$/;"	r
success	lib/http/response_handler.js	/^function success(response, body) {$/;"	r
success	test/api/fund_hot_wallet.js	/^      .yields({error: 'Invalid secret', error_type: 'transaction', success: false}, null);$/;"	r
success	test/fixtures/outgoing_payments.js	/^    success: {$/;"	r
success	test/fixtures/ripple_rest_integration.js	/^        success: false,$/;"	r
success	test/fixtures/ripple_rest_integration.js	/^      success: false,$/;"	r
success	test/fixtures/ripple_rest_integration.js	/^      success: true,$/;"	r
successful_responses	test/fixtures/ripple_rest_integration.js	/^  successful_responses: {$/;"	r
superagent	package.json	/^    "superagent": "^0.18.0",$/;"	f
supertest	package.json	/^    "supertest": "^0.13.0",$/;"	f
supervisor	config/features-available.json	/^  "supervisor": true,$/;"	f
supervisor	lib/cli/start_gateway.js	/^    var supervisor = new DS.Supervisor();$/;"	r
supervisor	test/processes/pm2.js	/^    supervisor = new Supervisor()$/;"	r
sync	lib/data/index.js	/^models.sync = function(callback) {$/;"	r
table	lib/views/text/index.js	/^  var table = new Table({$/;"	r
tag	lib/api/create_ripple_payment.js	/^      tag: options.destination_tag,$/;"	r
tag	lib/api/create_ripple_payment.js	/^      tag: options.source_tag,$/;"	r
tag	lib/api/enqueue_outgoing_payment.js	/^    tag: config.get('HOT_WALLET').id,$/;"	r
tag	lib/api/enqueue_outgoing_payment.js	/^    tag: options.destinationTag,$/;"	r
tag	lib/api/get_hosted_address.js	/^        logger.error('[get_hosted_address.js:getHostedAddress] Failed to create hosted address with tag [%j], ERROR: ', tag, error);$/;"	r
tag	lib/api/get_hosted_address.js	/^      tag: tag,$/;"	r
tag	lib/api/record_incoming_payment.js	/^      tag: incomingPayment.source_tag,$/;"	r
tag	lib/api/register_user.js	/^            tag: account.id$/;"	r
tag	lib/data/controllers/ripple_transactions.js	/^    var query = 'select * from (select address, tag, id as ripple_address_id from ripple_addresses where user_id = ' + userId + ') addresses join ripple_transactions on ripple_transactions.to_address_id = addresses.ripple_address_id or ripple_transactions.from_address_id = addresses.ripple_address_id;';$/;"	r
tag	lib/data/controllers/ripple_transactions.js	/^    var query = 'select * from (select address, tag, id as ripple_address_id from ripple_addresses where user_id = ' + userId + ') addresses join ripple_transactions on ripple_transactions.to_address_id = addresses.ripple_address_id;';$/;"	r
tag	lib/data/controllers/ripple_transactions.js	/^    var query = 'select * from (select address, tag, id as ripple_address_id from ripple_addresses where user_id = '+userId+') addresses join ripple_transactions on ripple_transactions.from_address_id = addresses.ripple_address_id;';$/;"	r
tag	lib/data/migrations/20131219233339-ripple-addresses.js	/^    tag: { type: 'int' },$/;"	r
tag	lib/data/models/ripple_addresses.js	/^  tag: { $/;"	r
tag	test/fixtures/outgoing_payments.js	/^      tag: null,$/;"	r
tecPacthDryPayment	test/core/incoming_payment.js	/^    var tecPacthDryPayment = incomingPaymentFixtures.incoming_payments.valid;$/;"	r
template	lib/host_meta/bridge_payment_link.js	/^    template: 'https:\/\/' + options.gatewayd.config.get('DOMAIN') + '\/v' + version + '\/bridge_payments'$/;"	r
template	lib/host_meta/bridge_payment_status_link.js	/^    template: 'https:\/\/' + options.gatewayd.config.get('DOMAIN') + '\/v' + version + '\/bridge_payments\/{id}'$/;"	r
template	lib/host_meta/bridge_quote_link.js	/^    template: 'https:\/\/' + options.gatewayd.config.get('DOMAIN') + '\/v' + version + '\/{sender}\/bridge_payments\/quotes\/{receiver}\/{amount}'$/;"	r
template	lib/host_meta/link.js	/^  this.template = options.template;$/;"	r
template	lib/host_meta/webfinger_link.js	/^    template: 'https:\/\/' + options.gatewayd.config.get('DOMAIN') + '\/.well-known\/webfinger.json?resource={uri}'$/;"	r
test	Gruntfile.js	/^      test: {$/;"	r
test	lib/data/database.json	/^  "test": {$/;"	f
test	package.json	/^    "test": "NODE_ENV=test_in_memory .\/node_modules\/.bin\/istanbul cover .\/node_modules\/.bin\/_mocha -- --ui tdd --reporter spec --timeout 10000 --slow 500 test\/models\/**\/*.js test\/api\/**\/*.js test\/utils\/**\/*.js lib\/core\/outgoing_payment.js lib\/core\/incoming_payment.js lib\/core\/utils.js",$/;"	f
testUser	test/http/register_user.js	/^    var testUser = { name: 'testUser@ripple.com', password: 'passw0rd', ripple_address: 'rscJF4TWS2jBe43MvUomTtCcyrbtTRMSNr' };$/;"	r
test_in_memory	lib/data/database.json	/^  "test_in_memory": {$/;"	f
that	scripts/jsawk	/^        function that then evaluates the object.$/;"	f
timestamp	test/fixtures/incoming_payments.js	/^    timestamp: '2014-12-05T01:05:40.000Z',$/;"	r
timestamp	test/fixtures/ripple_rest_integration.js	/^      timestamp: '2014-06-30T00:28:46.000Z',$/;"	r
toAccount	lib/api/get_trust_lines.js	/^    toAccount: coldWallet$/;"	r
toAddress	lib/api/create_ripple_payment.js	/^function _recordTransaction(options, toAddress, fromAddress) {$/;"	r
toAddress	lib/api/enqueue_outgoing_payment.js	/^function _recordTransaction(options, toAddress, fromAddress) {$/;"	r
toAddress	test/models/ripple_associations.js	/^        toAddress = address;$/;"	r
toAddress	test/models/ripple_associations.js	/^var toAddress, fromAddress, rippleTransaction;$/;"	r
toArray	lib/processes/process_set.js	/^  toArray: function() {$/;"	r
toIssuer	lib/data/models/ripple_transactions.js	/^      var toIssuer = _.isEmpty(value) ? undefined : value;$/;"	r
toString	lib/processes/process_set.js	/^  toString: function() {$/;"	r
toUser	lib/data/controllers/ripple_transactions.js	/^  api.toUser = function(userId, fn) {$/;"	r
to_address_id	lib/api/create_ripple_payment.js	/^    to_address_id: toAddress.id,$/;"	r
to_address_id	lib/api/enqueue_outgoing_payment.js	/^    to_address_id: toAddress.id,$/;"	r
to_address_id	lib/api/record_incoming_payment.js	/^      to_address_id: result.destinationRecord.id,$/;"	r
to_address_id	lib/cli/db_ripple_tx_seed.js	/^      to_address_id: chance.integer({min: 1, max: 99999}),$/;"	r
to_address_id	lib/core/deposit_processor.js	/^              to_address_id: address.id,$/;"	r
to_address_id	lib/data/controllers/ripple_transactions.js	/^        to_address_id: 'to and from addresses must not be the same',$/;"	r
to_address_id	lib/data/migrations/20131216233400-ripple-transactions.js	/^    to_address_id:     { type: 'int', notNull: true },$/;"	r
to_address_id	lib/data/models/ripple_transactions.js	/^  to_address_id: { $/;"	r
to_address_id	lib/views/text/index.js	/^      payment.to_address_id,$/;"	r
to_address_id	test/api/list_failed_payments.js	/^        to_address_id: 1,$/;"	r
to_address_id	test/api/list_outgoing_payments.js	/^            to_address_id: toAddress.id,$/;"	r
to_address_id	test/api/retry_failed_payment.js	/^      to_address_id: 999,$/;"	r
to_address_id	test/core/withdrawal_processor.js	/^        to_address_id: hostedAddress.id,$/;"	r
to_address_id	test/fixtures/incoming_payments.js	/^      to_address_id    : 1,$/;"	r
to_address_id	test/fixtures/outgoing_payments.js	/^      to_address_id: 1,$/;"	r
to_address_id	test/fixtures/outgoing_payments.js	/^      to_address_id: 820,$/;"	r
to_address_id	test/fixtures/transactions.js	/^    to_address_id: 1,$/;"	r
to_address_id	test/http/retry_failed_payment.js	/^      to_address_id: 1,$/;"	r
to_address_id	test/models/ripple_associations.js	/^            to_address_id: toAddress.id,$/;"	r
to_address_id	test/models/ripple_transactions.js	/^        to_address_id: 1,$/;"	r
to_address_id	test/models/ripple_transactions.js	/^      to_address_id: 1,$/;"	r
to_address_id	test/models/ripple_transactions.js	/^      to_address_id: [ 'Validation isRippleAddress failed: to_issuer' ]$/;"	r
to_address_id	test/models/ripple_transactions.js	/^      to_address_id: [ 'Validation notNull failed: from_address_id' ]$/;"	r
to_address_id	test/models/ripple_transactions.js	/^      to_address_id: [ 'Validation notNull failed: from_amount' ]$/;"	r
to_address_id	test/models/ripple_transactions.js	/^      to_address_id: [ 'Validation notNull failed: from_currency' ]$/;"	r
to_address_id	test/models/ripple_transactions.js	/^      to_address_id: [ 'Validation notNull failed: to_address_id' ]$/;"	r
to_address_id	test/models/ripple_transactions.js	/^      to_address_id: [ 'Validation notNull failed: to_amount' ]$/;"	r
to_address_id	test/models/ripple_transactions.js	/^      to_address_id: [ 'Validation notNull failed: to_currency' ]$/;"	r
to_address_id	test/utils/db_ripple_seed.js	/^      to_address_id: chanceToAddressId,$/;"	r
to_amount	lib/api/create_ripple_payment.js	/^    to_amount: options.destination_amount,$/;"	r
to_amount	lib/api/enqueue_outgoing_payment.js	/^    to_amount: options.amount,$/;"	r
to_amount	lib/api/record_incoming_payment.js	/^      to_amount: incomingPayment.destination_amount.value,$/;"	r
to_amount	lib/api/record_incoming_payment.js	/^    to_amount: incomingPayment.to_amount,$/;"	r
to_amount	lib/cli/db_ripple_tx_seed.js	/^      to_amount: chance.floating({fixed: 2}),$/;"	r
to_amount	lib/core/deposit_processor.js	/^              to_amount: self.deposit.amount * (1 - gateway.config.get('DEPOSIT_FEE')),$/;"	r
to_amount	lib/core/outgoing_payment.js	/^    _this.record.to_amount = destinationChange.value;$/;"	r
to_amount	lib/data/migrations/20131216233400-ripple-transactions.js	/^    to_amount:         { type: 'decimal', notNull: true },$/;"	r
to_amount	lib/data/models/ripple_transactions.js	/^    to_amount: function () {$/;"	r
to_amount	lib/data/models/ripple_transactions.js	/^  to_amount: { $/;"	r
to_amount	lib/views/text/index.js	/^      payment.to_amount,$/;"	r
to_amount	test/api/list_failed_payments.js	/^        to_amount: 5.00,$/;"	r
to_amount	test/api/list_failed_payments.js	/^        to_amount: 6.00,$/;"	r
to_amount	test/api/list_outgoing_payments.js	/^            to_amount: 5.00,$/;"	r
to_amount	test/api/list_outgoing_payments.js	/^            to_amount: 6.00,$/;"	r
to_amount	test/api/retry_failed_payment.js	/^      to_amount: 10000,$/;"	r
to_amount	test/core/withdrawal_processor.js	/^        to_amount: 100,$/;"	r
to_amount	test/fixtures/incoming_payments.js	/^      to_amount        : '0.001',$/;"	r
to_amount	test/fixtures/outgoing_payments.js	/^      to_amount: 0.0019399999999999999,$/;"	r
to_amount	test/fixtures/transactions.js	/^    to_amount: 5,$/;"	r
to_amount	test/http/retry_failed_payment.js	/^      to_amount: 10,$/;"	r
to_amount	test/models/ripple_associations.js	/^            to_amount: 5,$/;"	r
to_amount	test/models/ripple_transactions.js	/^        to_amount: 5,$/;"	r
to_amount	test/models/ripple_transactions.js	/^      to_amount: 5,$/;"	r
to_amount	test/utils/db_ripple_seed.js	/^      to_amount: chanceToAmount,$/;"	r
to_amount	test/utils/pagination_util.js	/^        to_amount: 1.00$/;"	r
to_amount	test/utils/pagination_util.js	/^      to_amount: 1.00$/;"	r
to_currency	lib/api/create_ripple_payment.js	/^    to_currency: options.destination_currency,$/;"	r
to_currency	lib/api/enqueue_outgoing_payment.js	/^    to_currency: options.currency,$/;"	r
to_currency	lib/api/record_incoming_payment.js	/^      to_currency: incomingPayment.destination_amount.currency,$/;"	r
to_currency	lib/api/record_incoming_payment.js	/^    to_currency: incomingPayment.to_currency,$/;"	r
to_currency	lib/cli/db_ripple_tx_seed.js	/^      to_currency: chance.currency().code,$/;"	r
to_currency	lib/core/deposit_processor.js	/^              to_currency: self.deposit.currency,$/;"	r
to_currency	lib/core/outgoing_payment.js	/^    _this.record.to_currency = destinationChange.currency;$/;"	r
to_currency	lib/data/migrations/20131216233400-ripple-transactions.js	/^    to_currency:       { type: 'string', notNull: true },$/;"	r
to_currency	lib/data/models/ripple_transactions.js	/^  to_currency: { $/;"	r
to_currency	lib/views/text/index.js	/^      payment.to_currency,$/;"	r
to_currency	test/api/list_failed_payments.js	/^        to_currency: 'USD',$/;"	r
to_currency	test/api/list_outgoing_payments.js	/^            to_currency: 'USD',$/;"	r
to_currency	test/api/retry_failed_payment.js	/^      to_currency: 'XAG',$/;"	r
to_currency	test/core/withdrawal_processor.js	/^        to_currency: 'XAG',$/;"	r
to_currency	test/fixtures/incoming_payments.js	/^      to_currency      : 'SWD',$/;"	r
to_currency	test/fixtures/outgoing_payments.js	/^      to_currency: 'XRP',$/;"	r
to_currency	test/fixtures/transactions.js	/^    to_currency: 'USD',$/;"	r
to_currency	test/http/retry_failed_payment.js	/^      to_currency: 'XAG',$/;"	r
to_currency	test/models/ripple_associations.js	/^            to_currency: "XAU",$/;"	r
to_currency	test/models/ripple_transactions.js	/^        to_currency: 'USD',$/;"	r
to_currency	test/models/ripple_transactions.js	/^        to_currency: 'XRP',$/;"	r
to_currency	test/models/ripple_transactions.js	/^      to_currency: 'USD',$/;"	r
to_currency	test/utils/db_ripple_seed.js	/^      to_currency: chanceToCurrency,$/;"	r
to_issuer	lib/api/create_ripple_payment.js	/^    to_issuer: options.destination_issuer,$/;"	r
to_issuer	lib/api/enqueue_outgoing_payment.js	/^    to_issuer: options.to_issuer,$/;"	r
to_issuer	lib/api/record_incoming_payment.js	/^      to_issuer: config.get('COLD_WALLET'),$/;"	r
to_issuer	lib/api/record_incoming_payment.js	/^    to_issuer: incomingPayment.to_issuer,$/;"	r
to_issuer	lib/cli/db_ripple_tx_seed.js	/^      to_issuer: 'rHXcECnhu9JwNphxqzRDU76iydhGEftWtU',$/;"	r
to_issuer	lib/core/deposit_processor.js	/^              to_issuer: gateway.config.get('COLD_WALLET'),$/;"	r
to_issuer	lib/core/outgoing_payment.js	/^      to_issuer: _this.record.to_issuer,$/;"	r
to_issuer	lib/data/migrations/20131216233400-ripple-transactions.js	/^    to_issuer:         { type: 'string', notNull: true },$/;"	r
to_issuer	lib/data/models/ripple_transactions.js	/^    to_issuer: function(value) {$/;"	r
to_issuer	lib/data/models/ripple_transactions.js	/^  to_issuer: { $/;"	r
to_issuer	test/api/enqueue_outgoing_payment.js	/^      to_issuer: to_issuer,$/;"	r
to_issuer	test/api/enqueue_outgoing_payment.js	/^    var to_issuer   = 'rQaLovmGTMMTJywQ7KZyVJP6i7rpwtWmTM';$/;"	r
to_issuer	test/api/retry_failed_payment.js	/^      to_issuer: 'rp4u5gEskM8DtBZvonZwbu6dspgVdeAGM6',$/;"	r
to_issuer	test/core/withdrawal_processor.js	/^        to_issuer: gateway.config.get('COLD_WALLET'),$/;"	r
to_issuer	test/fixtures/incoming_payments.js	/^      to_issuer        : 'rMinhWxZz4jeHoJGyddtmwg6dWhyqQKtJz',$/;"	r
to_issuer	test/fixtures/outgoing_payments.js	/^      to_issuer: 'r4EwBWxrx5HxYRyisfGzMto3AT8FZiYdWk',$/;"	r
to_issuer	test/fixtures/transactions.js	/^    to_issuer: 'r4EwBWxrx5HxYRyisfGzMto3AT8FZiYdWk',$/;"	r
to_issuer	test/http/enqueue_outgoing_payment.js	/^        to_issuer: 'r4EwBWxrx5HxYRyisfGzMto3AT8FZiYdWk'$/;"	r
to_issuer	test/http/retry_failed_payment.js	/^      to_issuer: '',$/;"	r
to_issuer	test/models/ripple_associations.js	/^            to_issuer: 'ra9EVPRsiqncEfrRpJudDV34AqxFao8Zv9',$/;"	r
to_issuer	test/models/ripple_transactions.js	/^        to_issuer: 'r4EwBWxrx5HxYRyisfGzMto3AT8FZiYdWk',$/;"	r
to_issuer	test/models/ripple_transactions.js	/^       to_issuer: [ 'Validation notNull of to_issuer' ]$/;"	r
to_issuer	test/models/ripple_transactions.js	/^      to_issuer: '',$/;"	r
to_issuer	test/models/ripple_transactions.js	/^      to_issuer: 'r12345',$/;"	r
to_issuer	test/models/ripple_transactions.js	/^      to_issuer: 'r4EwBWxrx5HxYRyisfGzMto3AT8FZiYdWk',$/;"	r
to_issuer	test/utils/db_ripple_seed.js	/^      to_issuer: chanceToIssuer,$/;"	r
to_record	test/fixtures/incoming_payments.js	/^  to_record: {$/;"	r
transaction	lib/http/response_handler.js	/^  transaction:    'transaction',$/;"	r
transaction	lib/ripple_rest_error_handler.js	/^    transaction: function(error) {$/;"	r
transaction	lib/views/text/index.js	/^    var transaction = transactions[i];$/;"	r
transactionError	lib/http/response_handler.js	/^  transactionError: transactionError,$/;"	r
transactionError	lib/http/response_handler.js	/^function transactionError(response, message, body) {$/;"	r
transactionOptions	lib/api/create_external_payment.js	/^  var transactionOptions = {$/;"	r
transaction_hash	lib/api/record_incoming_payment.js	/^      transaction_hash: incomingPayment.hash,$/;"	r
transaction_hash	lib/api/record_incoming_payment.js	/^    transaction_hash: incomingPayment.hash,$/;"	r
transaction_hash	lib/core/outgoing_payment.js	/^    _this.record.transaction_hash = payment.hash;$/;"	r
transaction_hash	lib/data/controllers/ripple_transactions.js	/^          transaction_hash: opts.transaction_hash,$/;"	r
transaction_hash	lib/data/migrations/20131216233400-ripple-transactions.js	/^    transaction_hash:  { type: 'string', unique: true },$/;"	r
transaction_hash	lib/data/models/ripple_transactions.js	/^  transaction_hash: { $/;"	r
transaction_hash	test/api/record_incoming_payment.js	/^      transaction_hash: '45154213',$/;"	r
transaction_hash	test/core/incoming_payment.js	/^              transaction_hash: incomingPayment.payment.hash$/;"	r
transaction_hash	test/fixtures/incoming_payments.js	/^      transaction_hash : 'B664743F640F0F2E79BC9C9887C6A569844EB91B5D9B4F17E5E9570AB78F8F53',$/;"	r
transaction_not_found	lib/ripple_rest_error_handler.js	/^    transaction_not_found: 'Transaction not found'$/;"	r
transaction_not_found	test/fixtures/ripple_rest_integration.js	/^      transaction_not_found: {$/;"	r
transaction_state	lib/api/record_incoming_payment.js	/^      transaction_state: incomingPayment.transaction_state,$/;"	r
transaction_state	lib/api/record_incoming_payment.js	/^    transaction_state: incomingPayment.transaction_state,$/;"	r
transaction_state	lib/core/incoming_payment.js	/^      transaction_state    :  payment.result,$/;"	r
transaction_state	lib/core/outgoing_payment.js	/^          _this.record.transaction_state = rippleRestResponseHandler.rippled_error_codes.insufficient_balance;$/;"	r
transaction_state	lib/core/outgoing_payment.js	/^          _this.record.transaction_state = rippleRestResponseHandler.rippled_error_codes.no_paths_found;$/;"	r
transaction_state	lib/core/outgoing_payment.js	/^    _this.record.transaction_state = payment.payment.result;$/;"	r
transaction_state	lib/data/controllers/ripple_transactions.js	/^          transaction_state: opts.transaction_state$/;"	r
transaction_state	lib/data/migrations/20131216233400-ripple-transactions.js	/^    transaction_state: { type: 'string' },$/;"	r
transaction_state	lib/data/models/ripple_transactions.js	/^  transaction_state:{ $/;"	r
transaction_state	test/api/record_incoming_payment.js	/^      transaction_state: 'tesSUCCESS',$/;"	r
transaction_state	test/fixtures/incoming_payments.js	/^      transaction_state: 'tesSUCCESS',$/;"	r
transaction_state	test/fixtures/incoming_payments.js	/^    transaction_state: 'tesSUCCESS',$/;"	r
trustLines	lib/views/text/index.js	/^  trustLines: printTrustLinesTable,$/;"	r
type	.settings/launch.json	/^			"type": "node",$/;"	f
type	lib/api/create_external_payment.js	/^    type: options.type$/;"	r
type	lib/api/create_ripple_payment.js	/^      type: options.destination_tag ? 'hosted' : 'cold'$/;"	r
type	lib/api/create_ripple_payment.js	/^      type: options.destination_tag ? 'hosted' : 'independent'$/;"	r
type	lib/api/create_ripple_payment.js	/^      type: options.source_tag ? 'hosted' : 'hot'$/;"	r
type	lib/api/create_ripple_payment.js	/^      type: options.source_tag ? 'hosted' : 'independent'$/;"	r
type	lib/api/enqueue_outgoing_payment.js	/^    type: 'hosted'$/;"	r
type	lib/api/enqueue_outgoing_payment.js	/^    type: options.destinationTag ? 'hosted' : 'independent'$/;"	r
type	lib/api/get_cold_wallet.js	/^    type: 'cold',$/;"	r
type	lib/api/get_hosted_address.js	/^      type: 'hosted',$/;"	r
type	lib/api/get_hot_wallet.js	/^    type: 'hot',$/;"	r
type	lib/api/record_incoming_payment.js	/^      type: incomingPayment.source_tag ? 'hosted' : 'independent'$/;"	r
type	lib/api/register_user.js	/^            type: 'hosted',$/;"	r
type	lib/api/register_user.js	/^        type: 'independent'$/;"	r
type	lib/api/set_hot_wallet.js	/^        type: 'hot',$/;"	r
type	lib/core/deposit_processor.js	/^        type: 'independent'$/;"	r
type	lib/data/migrations/20131219233339-ripple-addresses.js	/^    type: { type: 'string', notNull: true },$/;"	r
type	lib/data/migrations/20140416175350-add-uid-to-all.js	/^      type: 'string',$/;"	r
type	lib/data/migrations/20140418123552-add-data-json-to-all.js	/^      type: 'text'$/;"	r
type	lib/data/migrations/20140418131831-create-kyc-data.js	/^    type: { type: 'string', notNull: true},$/;"	r
type	lib/data/migrations/20140428180703-add-active-boolean-to-users.js	/^    type: 'boolean',$/;"	r
type	lib/data/migrations/20140516211449-add-client-resource-id-to-ripple-transactions.js	/^    type: 'string',$/;"	r
type	lib/data/migrations/20140516211759-add-state-to-ripple-transactions.js	/^    type: 'string',$/;"	r
type	lib/data/migrations/20140522193356-add-external-transaction-id-to-ripple-transactions.js	/^    type: 'integer'$/;"	r
type	lib/data/migrations/20140731062106-create-policies.js	/^      type: 'decimal'$/;"	r
type	lib/data/migrations/20140731062106-create-policies.js	/^      type: 'int',$/;"	r
type	lib/data/migrations/20140731062106-create-policies.js	/^      type: 'string'$/;"	r
type	lib/data/migrations/20140731062106-create-policies.js	/^var type = dbm.dataType;$/;"	r
type	lib/data/migrations/20140802043032-user-id-not-required-external-account.js	/^    type: 'int'$/;"	r
type	lib/data/migrations/20140802043032-user-id-not-required-external-account.js	/^    type: 'int',$/;"	r
type	lib/data/migrations/20140802043032-user-id-not-required-external-account.js	/^var type = dbm.dataType;$/;"	r
type	lib/data/migrations/20140819202523-create-gateway-transactions.js	/^      type: 'datetime',$/;"	r
type	lib/data/migrations/20140819202523-create-gateway-transactions.js	/^      type: 'int',$/;"	r
type	lib/data/migrations/20140819202523-create-gateway-transactions.js	/^      type: 'string'$/;"	r
type	lib/data/migrations/20140819202523-create-gateway-transactions.js	/^var type = dbm.dataType;$/;"	r
type	lib/data/migrations/20140918033326-create-bridges.js	/^      type: 'datetime',$/;"	r
type	lib/data/migrations/20140918033326-create-bridges.js	/^      type: 'int',$/;"	r
type	lib/data/migrations/20140918033326-create-bridges.js	/^      type: 'string', \/\/ [to-ripple, from-ripple]$/;"	r
type	lib/data/migrations/20140918033326-create-bridges.js	/^var type = dbm.dataType;$/;"	r
type	lib/data/migrations/20140930174005-rename-external-accounts-columns.js	/^        type: 'string',$/;"	r
type	lib/data/migrations/20140930174005-rename-external-accounts-columns.js	/^var type = dbm.dataType;$/;"	r
type	lib/data/migrations/20140930223803-name-not-required-external-accounts.js	/^var type = dbm.dataType;$/;"	r
type	lib/data/migrations/20141015171506-create-configs.js	/^      type: 'boolean',$/;"	r
type	lib/data/migrations/20141015171506-create-configs.js	/^      type: 'datetime'$/;"	r
type	lib/data/migrations/20141015171506-create-configs.js	/^      type: 'datetime', notNull: true$/;"	r
type	lib/data/migrations/20141015171506-create-configs.js	/^      type: 'int',$/;"	r
type	lib/data/migrations/20141015171506-create-configs.js	/^      type: 'string',$/;"	r
type	lib/data/migrations/20141015171506-create-configs.js	/^var type = dbm.dataType;$/;"	r
type	lib/data/migrations/20141103190730-add-invoice-id-column-to-ripple-transactions.js	/^    type: 'string'$/;"	r
type	lib/data/migrations/20141103190741-add-memo-column-to-ripple-transactions.js	/^    type: 'text',$/;"	r
type	lib/data/migrations/20141110220308-add-direction-to-ripple-transactions.js	/^    type: 'string'$/;"	r
type	lib/data/migrations/20141110220308-add-direction-to-ripple-transactions.js	/^var type = dbm.dataType;$/;"	r
type	lib/data/migrations/20141111212415-add-invoice-id-to-external-transactions.js	/^    type: 'string'  $/;"	r
type	lib/data/migrations/20141111212415-add-invoice-id-to-external-transactions.js	/^var type = dbm.dataType;$/;"	r
type	lib/data/migrations/20141114205150-remove-issuer-requirement.js	/^      type: 'string',$/;"	r
type	lib/data/migrations/20141114205150-remove-issuer-requirement.js	/^    type: 'string',$/;"	r
type	lib/data/migrations/20141114205150-remove-issuer-requirement.js	/^var type = dbm.dataType;$/;"	r
type	lib/data/migrations/20141117200216-add-to-account-id-from-account-id-to-external-transactions.js	/^    type: 'int'$/;"	r
type	lib/data/migrations/20141117200216-add-to-account-id-from-account-id-to-external-transactions.js	/^var type = dbm.dataType;$/;"	r
type	lib/data/migrations/20141212183505-add-source-and-destination-amounts-to-external-xactions.js	/^      type: 'decimal'$/;"	r
type	lib/data/migrations/20141212183505-add-source-and-destination-amounts-to-external-xactions.js	/^      type: 'string'$/;"	r
type	lib/data/migrations/20141212183505-add-source-and-destination-amounts-to-external-xactions.js	/^var type = dbm.dataType;$/;"	r
type	lib/data/migrations/20141212214904-add-destination-account-id-and-source-account-id-external-xactions.js	/^      type: 'int'$/;"	r
type	lib/data/migrations/20141212214904-add-destination-account-id-and-source-account-id-external-xactions.js	/^var type = dbm.dataType;$/;"	r
type	lib/data/migrations/20141212230605-make-amount-and-currency-optional-external-xfer.js	/^var type = dbm.dataType;$/;"	r
type	lib/data/migrations/20141213010808-create-memos-column-external-xfer.js	/^    type: 'text'$/;"	r
type	lib/data/migrations/20141213010808-create-memos-column-external-xfer.js	/^var type = dbm.dataType;$/;"	r
type	lib/data/migrations/20150102083405-add-direction-and-uid-to-gateway-transactions.js	/^      type: 'string'$/;"	r
type	lib/data/migrations/20150102083405-add-direction-and-uid-to-gateway-transactions.js	/^    type: 'string'$/;"	r
type	lib/data/migrations/20150102083405-add-direction-and-uid-to-gateway-transactions.js	/^var type = dbm.dataType;$/;"	r
type	lib/data/migrations/20150107040036-remove-from-amount-requirement.js	/^var type = dbm.dataType;$/;"	r
type	lib/data/migrations/20150108211416-remove-to--requirement.js	/^var type = dbm.dataType;$/;"	r
type	lib/data/migrations/20150127175005-drop-transaction-hash-constraint.js	/^var type = dbm.dataType;$/;"	r
type	lib/data/models/bridges.js	/^    type: Sequelize.INTEGER$/;"	r
type	lib/data/models/bridges.js	/^    type: Sequelize.INTEGER,$/;"	r
type	lib/data/models/bridges.js	/^    type: Sequelize.STRING,$/;"	r
type	lib/data/models/configs.js	/^    type: Sequelize.BOOLEAN,$/;"	r
type	lib/data/models/configs.js	/^    type: Sequelize.INTEGER,$/;"	r
type	lib/data/models/configs.js	/^    type: Sequelize.STRING,$/;"	r
type	lib/data/models/configs.js	/^    type: Sequelize.TEXT,$/;"	r
type	lib/data/models/external_accounts.js	/^    type: Sequelize.INTEGER$/;"	r
type	lib/data/models/external_accounts.js	/^    type: Sequelize.STRING$/;"	r
type	lib/data/models/external_accounts.js	/^    type: Sequelize.STRING, $/;"	r
type	lib/data/models/external_accounts.js	/^    type: Sequelize.STRING,$/;"	r
type	lib/data/models/external_accounts.js	/^  type: {$/;"	r
type	lib/data/models/external_transactions.js	/^    type: Sequelize.BOOLEAN,$/;"	r
type	lib/data/models/external_transactions.js	/^    type: Sequelize.DECIMAL$/;"	r
type	lib/data/models/external_transactions.js	/^    type: Sequelize.INTEGER$/;"	r
type	lib/data/models/external_transactions.js	/^    type: Sequelize.INTEGER,$/;"	r
type	lib/data/models/external_transactions.js	/^    type: Sequelize.STRING$/;"	r
type	lib/data/models/external_transactions.js	/^    type: Sequelize.STRING,$/;"	r
type	lib/data/models/external_transactions.js	/^    type: Sequelize.TEXT$/;"	r
type	lib/data/models/gateway_transactions.js	/^    type: Sequelize.INTEGER,$/;"	r
type	lib/data/models/gateway_transactions.js	/^    type: Sequelize.STRING,$/;"	r
type	lib/data/models/kyc_data.js	/^		type: Sequelize.INTEGER, $/;"	r
type	lib/data/models/kyc_data.js	/^    type: Sequelize.INTEGER$/;"	r
type	lib/data/models/kyc_data.js	/^    type: Sequelize.STRING$/;"	r
type	lib/data/models/kyc_data.js	/^  type: {$/;"	r
type	lib/data/models/policies.js	/^    type: Sequelize.DECIMAL$/;"	r
type	lib/data/models/policies.js	/^    type: Sequelize.INTEGER,$/;"	r
type	lib/data/models/policies.js	/^    type: Sequelize.STRING$/;"	r
type	lib/data/models/ripple_addresses.js	/^		type: Sequelize.INTEGER, $/;"	r
type	lib/data/models/ripple_addresses.js	/^    type: Sequelize.BOOLEAN, $/;"	r
type	lib/data/models/ripple_addresses.js	/^    type: Sequelize.INTEGER,$/;"	r
type	lib/data/models/ripple_addresses.js	/^    type: Sequelize.STRING,$/;"	r
type	lib/data/models/ripple_addresses.js	/^  type: { $/;"	r
type	lib/data/models/ripple_transactions.js	/^    type: Sequelize.DECIMAL,$/;"	r
type	lib/data/models/ripple_transactions.js	/^    type: Sequelize.INTEGER, $/;"	r
type	lib/data/models/ripple_transactions.js	/^    type: Sequelize.INTEGER,$/;"	r
type	lib/data/models/ripple_transactions.js	/^    type: Sequelize.STRING,$/;"	r
type	lib/data/models/ripple_transactions.js	/^    type: Sequelize.TEXT,$/;"	r
type	lib/data/models/users.js	/^		type: Sequelize.INTEGER,$/;"	r
type	lib/data/models/users.js	/^    type: Sequelize.BOOLEAN,$/;"	r
type	lib/data/models/users.js	/^    type: Sequelize.STRING,$/;"	r
type	lib/views/text/index.js	/^      address.type,$/;"	r
type	package.json	/^    "type": "git",$/;"	f
type	test/api/create_external_payment.js	/^        type                 : 'acct'$/;"	r
type	test/api/list_outgoing_payments.js	/^        type: 'hot'$/;"	r
type	test/api/list_outgoing_payments.js	/^      type: 'cold'$/;"	r
type	test/api/record_deposit.js	/^      type: 'independent'$/;"	r
type	test/fixtures/models.js	/^    type: 'bitcoin'$/;"	r
type	test/fixtures/outgoing_payments.js	/^      type: 'independent',$/;"	r
type	test/models/ripple_addresses.js	/^      type: 'independent',$/;"	r
type	test/models/ripple_associations.js	/^          type: 'independent',$/;"	r
type	test/models/ripple_associations.js	/^        type: 'independent',$/;"	r
uid	lib/data/migrations/20140418131831-create-kyc-data.js	/^    uid: { type: 'string'},$/;"	r
uid	lib/data/models/external_accounts.js	/^  uid: {$/;"	r
uid	lib/data/models/external_transactions.js	/^  uid: {$/;"	r
uid	lib/data/models/gateway_transactions.js	/^        attributes.uid = uuid.v4();$/;"	r
uid	lib/data/models/gateway_transactions.js	/^  uid: {$/;"	r
uid	lib/data/models/kyc_data.js	/^  uid: {$/;"	r
uid	lib/data/models/ripple_addresses.js	/^  uid: {$/;"	r
uid	lib/data/models/ripple_transactions.js	/^  uid: {$/;"	r
uid	lib/data/models/users.js	/^  uid: {$/;"	r
uid	test/fixtures/outgoing_payments.js	/^      uid: null,$/;"	r
undefined	test/api/configure_gatewayd.js	/^      const invalidObjects = [null, undefined, {}, ''];$/;"	r
underscore-node	package.json	/^    "underscore-node": "0.1.2",$/;"	f
unique	lib/data/migrations/20131216233400-ripple-transactions.js	/^    transaction_hash:  { type: 'string', unique: true },$/;"	r
unique	lib/data/migrations/20131217004626-gateway-accounts.js	/^    user_id: { type: 'string', unique: true, notNull: true },$/;"	r
unique	lib/data/migrations/20140416175350-add-uid-to-all.js	/^      unique: true$/;"	r
unique	lib/data/migrations/20140930174005-rename-external-accounts-columns.js	/^        unique: true$/;"	r
unique	lib/data/migrations/20141015171506-create-configs.js	/^      unique: false$/;"	r
unique	lib/data/migrations/20141015171506-create-configs.js	/^      unique: true$/;"	r
unique	lib/data/models/configs.js	/^    unique: false$/;"	r
unique	lib/data/models/configs.js	/^    unique: true$/;"	r
unique	lib/data/models/external_accounts.js	/^    unique: true$/;"	r
unique	lib/data/models/external_transactions.js	/^    unique: true$/;"	r
unique	lib/data/models/ripple_addresses.js	/^    unique: true,$/;"	r
unique	lib/data/models/ripple_transactions.js	/^    unique: true$/;"	r
unique	lib/data/models/users.js	/^		unique: true,$/;"	r
unique	lib/data/models/users.js	/^    unique: true$/;"	r
unique	lib/data/models/users.js	/^  name: { type: Sequelize.STRING, unique: true },$/;"	r
up	lib/data/migrations/20131216193924-users.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20131216232955-external-transactions.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20131216233400-ripple-transactions.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20131217004626-gateway-accounts.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20131219233339-ripple-addresses.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20140119011932-external-accounts.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20140221022445-add-unique-dual-index.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20140416175350-add-uid-to-all.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20140418123552-add-data-json-to-all.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20140418131831-create-kyc-data.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20140428180703-add-active-boolean-to-users.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20140516211449-add-client-resource-id-to-ripple-transactions.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20140516211759-add-state-to-ripple-transactions.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20140522193356-add-external-transaction-id-to-ripple-transactions.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20140731062106-create-policies.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20140802043032-user-id-not-required-external-account.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20140819202523-create-gateway-transactions.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20140918033326-create-bridges.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20140930174005-rename-external-accounts-columns.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20140930223803-name-not-required-external-accounts.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20141015171506-create-configs.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20141103190730-add-invoice-id-column-to-ripple-transactions.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20141103190741-add-memo-column-to-ripple-transactions.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20141110220308-add-direction-to-ripple-transactions.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20141111212415-add-invoice-id-to-external-transactions.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20141114205150-remove-issuer-requirement.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20141117200216-add-to-account-id-from-account-id-to-external-transactions.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20141212183505-add-source-and-destination-amounts-to-external-xactions.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20141212214904-add-destination-account-id-and-source-account-id-external-xactions.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20141212230605-make-amount-and-currency-optional-external-xfer.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20141213010808-create-memos-column-external-xfer.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20150102083405-add-direction-and-uid-to-gateway-transactions.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20150107040036-remove-from-amount-requirement.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20150108211416-remove-to--requirement.js	/^exports.up = function(db, callback) {$/;"	r
up	lib/data/migrations/20150127175005-drop-transaction-hash-constraint.js	/^exports.up = function(db, callback) {$/;"	r
update	lib/data/controllers/external_accounts.js	/^  api.update = function(opts, fn){$/;"	r
update	lib/data/controllers/external_transactions.js	/^  api.update = function(opts, fn){$/;"	r
update	lib/data/controllers/ripple_addresses.js	/^  api.update = function(opts, fn){$/;"	r
update	lib/data/controllers/ripple_transactions.js	/^  api.update = function(opts, fn){$/;"	r
update	lib/data/controllers/users.js	/^        var update = function(updateOpts) {$/;"	r
update	lib/data/controllers/users.js	/^  api.update = function(selectOpts, updateOpts, fn) {$/;"	r
update	lib/http/controllers/resources/bridges.js	/^  update: update,$/;"	r
update	lib/http/controllers/resources/bridges.js	/^function update(request, response) {$/;"	r
update	lib/http/controllers/resources/external_accounts.js	/^  update: update,$/;"	r
update	lib/http/controllers/resources/external_accounts.js	/^function update(request, response) {$/;"	r
update	lib/http/controllers/resources/external_transactions.js	/^  update: update,$/;"	r
update	lib/http/controllers/resources/external_transactions.js	/^function update(request, response) {$/;"	r
update	lib/http/controllers/resources/gateway_transactions.js	/^  update: update,$/;"	r
update	lib/http/controllers/resources/gateway_transactions.js	/^function update(request, response) {$/;"	r
update	lib/http/controllers/resources/policies.js	/^  update: function(request, response) {$/;"	r
update	lib/http/controllers/resources/ripple_addresses.js	/^  update: update,$/;"	r
update	lib/http/controllers/resources/ripple_addresses.js	/^function update(request, response) {$/;"	r
update	lib/http/controllers/resources/ripple_transactions.js	/^  update: update,$/;"	r
update	lib/http/controllers/resources/ripple_transactions.js	/^function update(request, response) {$/;"	r
update	lib/http/controllers/resources/users.js	/^  update: update,$/;"	r
update	lib/http/controllers/resources/users.js	/^function update(request, response) {$/;"	r
updateOpts	lib/data/controllers/users.js	/^  api.update = function(selectOpts, updateOpts, fn) {$/;"	r
updatedAt	lib/data/migrations/20131216193924-users.js	/^    updatedAt: { type: 'datetime' },$/;"	r
updatedAt	lib/data/migrations/20131216232955-external-transactions.js	/^    updatedAt: { type: 'datetime' }$/;"	r
updatedAt	lib/data/migrations/20131216233400-ripple-transactions.js	/^    updatedAt:         { type: 'datetime' }$/;"	r
updatedAt	lib/data/migrations/20131217004626-gateway-accounts.js	/^    updatedAt: { type: 'datetime' }$/;"	r
updatedAt	lib/data/migrations/20131219233339-ripple-addresses.js	/^    updatedAt: { type: 'datetime' }$/;"	r
updatedAt	lib/data/migrations/20140119011932-external-accounts.js	/^    updatedAt: { type: 'datetime', notNull: true},$/;"	r
updatedAt	lib/data/migrations/20140418131831-create-kyc-data.js	/^    updatedAt: { type: 'datetime', notNull: true},$/;"	r
updatedAt	lib/data/migrations/20140731062106-create-policies.js	/^    updatedAt: { type: 'datetime', notNull: true},$/;"	r
updatedAt	lib/data/migrations/20140819202523-create-gateway-transactions.js	/^    updatedAt: {$/;"	r
updatedAt	lib/data/migrations/20140918033326-create-bridges.js	/^    updatedAt: {$/;"	r
updatedAt	lib/data/migrations/20141015171506-create-configs.js	/^    updatedAt: {$/;"	r
updatedAt	test/fixtures/incoming_payments.js	/^      updatedAt        : 'Fri Dec 12 2014 17:44:31 GMT-0800 (PST)',$/;"	r
updatedAt	test/utils/pagination_util.js	/^        updatedAt: {$/;"	r
url	lib/http/controllers/api/set_ripple_rest_url.js	/^  var url = req.body.url;$/;"	r
url	package.json	/^    "url": "https:\/\/github.com\/ripple\/gatewayd.git"$/;"	f
usage	scripts/jsawk	/^        usage();$/;"	f
user	lib/api/get_user_accounts.js	/^      var user = resp[i];$/;"	r
user	lib/data/database.json	/^    "user": "",$/;"	f
user	lib/data/database.json	/^    "user": "gatewayd_user",$/;"	f
user	lib/http/controllers/public/login_user.js	/^      var user = {$/;"	r
user	lib/http/controllers/resources/users.js	/^            user: user$/;"	r
user	lib/http/controllers/resources/users.js	/^        user: user$/;"	r
user	lib/views/text/index.js	/^    var user = users[i];$/;"	r
user	test/core/deposit_processor.js	/^      user = registeredUser;$/;"	r
user	test/core/deposit_processor.js	/^var user;$/;"	r
user	test/core/withdrawal_processor.js	/^      user = registeredUser;$/;"	r
user	test/core/withdrawal_processor.js	/^var user;$/;"	r
userBasic	lib/http/passport_auth.js	/^  var userBasic = new BasicStrategy($/;"	r
userBasic	lib/http/passport_auth.js	/^module.exports.userBasic = (function(name){$/;"	r
userCreatedId	test/http/crud/users.js	/^        userCreatedId = response.body.user.id;$/;"	r
userCreatedId	test/http/crud/users.js	/^var userCreatedId;$/;"	r
userCtrl	lib/http/routers/user_router.js	/^var userCtrl = require(__dirname+'\/..\/controllers\/users\/');$/;"	r
userId	config/policies/user_policy.js	/^      var userId = externalAccount.user_id;$/;"	r
userIsAuthorized	lib/http/controllers/users/index.js	/^function userIsAuthorized(req){$/;"	r
userModel	lib/data/controllers/users.js	/^var userModel = require('..\/models\/users');$/;"	r
userOpts	lib/api/register_user.js	/^  var userOpts = {$/;"	r
userRouter	lib/app.js	/^var userRouter = require(__dirname+'\/http\/routers\/user_router.js');$/;"	r
user_id	lib/api/register_user.js	/^            user_id: user.id,$/;"	r
user_id	lib/api/register_user.js	/^        data.externalAccounts.create({ name: 'default', user_id: user.id, address:addressOpts.address, type:addressOpts.type }, function(err, account){$/;"	r
user_id	lib/api/register_user.js	/^        user_id: user.id,$/;"	r
user_id	lib/cli/add_external_account.js	/^  gateway.data.externalAccounts.create({ name: name, user_id: userId }, function(err, account){$/;"	r
user_id	lib/core/deposit_processor.js	/^        user_id: account.user_id,$/;"	r
user_id	lib/data/controllers/external_accounts.js	/^            user_id: error.detail $/;"	r
user_id	lib/data/migrations/20131217004626-gateway-accounts.js	/^    user_id: { type: 'string', unique: true, notNull: true },$/;"	r
user_id	lib/data/migrations/20131219233339-ripple-addresses.js	/^    user_id: { type: 'int' },$/;"	r
user_id	lib/data/migrations/20140119011932-external-accounts.js	/^    user_id: { type: 'int', notNull: true},$/;"	r
user_id	lib/data/migrations/20140418131831-create-kyc-data.js	/^    user_id: { type: 'int', notNull: true},$/;"	r
user_id	lib/data/models/external_accounts.js	/^  user_id: { $/;"	r
user_id	lib/data/models/kyc_data.js	/^  user_id: {$/;"	r
user_id	lib/data/models/ripple_addresses.js	/^  user_id: { $/;"	r
user_id	lib/views/text/index.js	/^      account.user_id,$/;"	r
user_id	lib/views/text/index.js	/^      address.user_id,$/;"	r
user_id	test/fixtures/outgoing_payments.js	/^      user_id: null,$/;"	r
users	lib/api/get_user_accounts.js	/^    var users = [];$/;"	r
users	lib/data/index.js	/^var users                 = require('.\/controllers\/users');$/;"	r
users	lib/http/controllers/resources/users.js	/^        users: user$/;"	r
users	lib/http/controllers/resources/users.js	/^        users: users$/;"	r
users	lib/views/text/index.js	/^  users: printUsersTable,$/;"	r
util	lib/processes/process_manager.js	/^var util = require('util');$/;"	r
util	test/api/enqueue_outgoing_payment.js	/^var util                   = require('util');$/;"	r
utils	lib/core/incoming_payment.js	/^var utils               = require(__dirname+'\/utils');$/;"	r
utils	lib/core/outgoing_payment.js	/^var utils           = require(__dirname+'\/utils');$/;"	r
uuid	lib/api/fund_cold_wallet.js	/^var uuid              = require('node-uuid');$/;"	r
uuid	lib/api/fund_hot_wallet.js	/^var uuid              = require('node-uuid');$/;"	r
uuid	lib/api/issue_currency.js	/^var uuid              = require('node-uuid');$/;"	r
uuid	lib/api/refund_cold_wallet.js	/^var uuid              = require('node-uuid');$/;"	r
uuid	lib/api/register_user.js	/^var uuid              = require('node-uuid');$/;"	r
uuid	lib/data/models/gateway_transactions.js	/^var uuid      = require('node-uuid');$/;"	r
valid	test/fixtures/incoming_payments.js	/^  valid: { source_account: 'rscJF4TWS2jBe43MvUomTtCcyrbtTRMSNr',$/;"	r
valid	test/fixtures/liabilities.js	/^  valid: {$/;"	r
valid	test/fixtures/models.js	/^  valid: {$/;"	r
valid	test/fixtures/outgoing_payments.js	/^    valid: {$/;"	r
valid	test/fixtures/ripple_quotes.js	/^  valid: {$/;"	r
validExternalAccount	test/models/external_accounts.js	/^var validExternalAccount = fixtures.externalAccounts.valid;$/;"	r
valid_xrp_payment	test/fixtures/transactions.js	/^  valid_xrp_payment: {$/;"	r
validate	lib/data/models/bridges.js	/^    validate: {$/;"	r
validate	lib/data/models/configs.js	/^    validate: {$/;"	r
validate	lib/data/models/external_accounts.js	/^    validate: {$/;"	r
validate	lib/data/models/external_transactions.js	/^    validate: { notNull: true }$/;"	r
validate	lib/data/models/external_transactions.js	/^    validate: {$/;"	r
validate	lib/data/models/gateway_transactions.js	/^    validate: {$/;"	r
validate	lib/data/models/policies.js	/^    validate: {$/;"	r
validate	lib/data/models/ripple_addresses.js	/^    validate: { $/;"	r
validate	lib/data/models/ripple_addresses.js	/^    validate: {$/;"	r
validate	lib/data/models/ripple_transactions.js	/^    validate: {$/;"	r
validated	test/fixtures/incoming_payments.js	/^    validated: true$/;"	r
validatedPayment	test/core/outgoing_payment.js	/^    var validatedPayment = fixturesRippleRestIntegration.successful_responses.validated_payment;$/;"	r
validated_payment	test/fixtures/ripple_rest_integration.js	/^    validated_payment: {$/;"	r
validator	index.js	/^exports.validator = require(__dirname+'\/lib\/validator.js');$/;"	r
validator	lib/api/create_external_payment.js	/^var validator             = require(__dirname+'\/..\/validator.js');$/;"	r
validator	lib/api/create_ripple_payment.js	/^var validator = require(__dirname+'\/..\/validator.js');$/;"	r
validator	lib/api/enqueue_outgoing_payment.js	/^var validator = require(__dirname+'\/..\/validator.js');$/;"	r
validator	lib/api/register_user.js	/^var validator = require(__dirname+'\/..\/validator.js');$/;"	r
validator	lib/data/models/external_transactions.js	/^var validator = require(__dirname+'\/..\/..\/validator');$/;"	r
validator	lib/data/models/ripple_transactions.js	/^var validator   = require(__dirname+'\/..\/..\/validator');$/;"	r
validator	lib/validator.js	/^var validator = require('validator');$/;"	r
validator	package.json	/^    "validator": "^3.11.0",$/;"	f
value	lib/api/fund_cold_wallet.js	/^        value: payment.amount.toString(),$/;"	r
value	lib/api/fund_hot_wallet.js	/^        value: payment.amount.toString(),$/;"	r
value	lib/api/get_liabilities.js	/^          value: val.toString(),$/;"	r
value	lib/api/issue_currency.js	/^          value: amount.toString(),$/;"	r
value	lib/api/refund_cold_wallet.js	/^        value: options.amount.toString(),$/;"	r
value	lib/api/register_user.js	/^                    value: '60',$/;"	r
value	lib/core/utils.js	/^      value: _.reduce(nonXrpChanges, function(memo, change) {$/;"	r
value	lib/core/utils.js	/^    value: _.reduce(changes, function(memo, change) {$/;"	r
value	lib/data/migrations/20141015171506-create-configs.js	/^    value: {$/;"	r
value	lib/data/models/configs.js	/^      return this.findOrCreate({ key: key, value: value })$/;"	r
value	lib/data/models/configs.js	/^  value: {$/;"	r
value	lib/views/text/index.js	/^      balance.value,$/;"	r
value	test/api/record_incoming_payment.js	/^        value: 5,$/;"	r
value	test/api/record_incoming_payment.js	/^        value: 6,$/;"	r
value	test/fixtures/incoming_payments.js	/^      value: '0.001' },$/;"	r
value	test/fixtures/incoming_payments.js	/^      value: '0.00101' },$/;"	r
value	test/fixtures/incoming_payments.js	/^      value: '0.01' },$/;"	r
value	test/fixtures/incoming_payments.js	/^      value: '0.0101' },$/;"	r
value	test/fixtures/transactions.js	/^      value: '0.0019399999999999999',$/;"	r
value	test/fixtures/transactions.js	/^      value: '0.002',$/;"	r
verbose	Gruntfile.js	/^        verbose: true,$/;"	r
verified	lib/http/controllers/public/login_user.js	/^      var verified = gateway.data.users.verifyPassword(password, user.salt, user.password_hash);$/;"	r
verified	lib/http/passport_auth.js	/^            var verified = gateway.data.users.verifyPassword(password, user.salt, user.password_hash);$/;"	r
verifyAdmin	lib/http/passport_auth.js	/^function verifyAdmin(username, password){$/;"	r
verifyPassword	lib/data/controllers/users.js	/^  api.verifyPassword = function(password, salt, passwordHash) {$/;"	r
verifyPassword	lib/data/utils.js	/^  verifyPassword: verifyPassword,$/;"	r
verifyPassword	lib/data/utils.js	/^function verifyPassword (password, salt, passwordHash) {$/;"	r
version	.settings/launch.json	/^	"version": "0.1.0",$/;"	f
version	lib/data/package.json	/^  "version": "1.8.2",$/;"	f
version	lib/host_meta/bridge_payment_link.js	/^  this.properties.version = options.gatewayd.config.get('VERSION');$/;"	r
version	lib/host_meta/bridge_payment_link.js	/^  var version = options.gatewayd.config.get('VERSION') || '1';$/;"	r
version	lib/host_meta/bridge_payment_status_link.js	/^  this.properties.version = options.gatewayd.config.get('VERSION');$/;"	r
version	lib/host_meta/bridge_payment_status_link.js	/^  var version = options.gatewayd.config.get('VERSION') || '1';$/;"	r
version	lib/host_meta/bridge_quote_link.js	/^  this.properties.version = options.gatewayd.config.get('VERSION');$/;"	r
version	lib/host_meta/bridge_quote_link.js	/^  var version = options.gatewayd.config.get('VERSION') || '1';$/;"	r
version	package.json	/^  "version": "3.35.2",$/;"	f
walk	scripts/jsawk	/^            function walk(holder, key) {$/;"	f
walk	scripts/jsawk	/^    function walk(obj){$/;"	f
wallet	lib/api/generate_wallet.js	/^  var wallet = walletGenerator.generate();$/;"	r
walletGenerator	lib/api/generate_wallet.js	/^  var walletGenerator = new WalletGenerator();$/;"	r
walletsFixture	test/api/create_ripple_payment.js	/^var walletsFixture  = require(__dirname+'\/..\/fixtures\/wallets.js');$/;"	r
walletsFixture	test/api/ripple_quotes.js	/^var walletsFixture     = require(__dirname + '\/..\/fixtures\/wallets.js');$/;"	r
walletsFixture	test/fixtures/ripple_quotes.js	/^var walletsFixture = require (__dirname + '\/wallets.js');$/;"	r
webfingerLink	lib/host_meta/host_meta.js	/^  this.webfingerLink = new WebfingerLink(options);$/;"	r
where	lib/api/list_cleared.js	/^    where: { status: 'cleared' }$/;"	r
where	lib/api/list_outgoing_payments.js	/^    where: { state: 'outgoing' },$/;"	r
where	lib/api/list_queued_withdrawals.js	/^    where: 'deposit = false and status = \\'notified\\' OR status = \\'queued\\''$/;"	r
where	lib/api/record_incoming_payment.js	/^      where: {$/;"	r
where	lib/api/retry_failed_payment.js	/^      where: { id: rippleTransactionId }$/;"	r
where	lib/core/deposit_processor.js	/^          where: {$/;"	r
where	lib/core/withdrawal_processor.js	/^          where: {$/;"	r
where	lib/core/withdrawal_processor.js	/^      where: { id: rippleTransaction.to_address_id }$/;"	r
where	lib/core/withdrawal_processor.js	/^      where: {$/;"	r
where	lib/data/pagination_util.js	/^      query.where = where;$/;"	r
where	lib/data/pagination_util.js	/^      where = {updatedAt: {}};$/;"	r
where	lib/http/controllers/resources/external_transactions.js	/^    where  : { id: request.params.id},$/;"	r
where	lib/http/controllers/resources/external_transactions.js	/^    where: { id: req.params.id },$/;"	r
where	lib/http/controllers/resources/policies.js	/^      where: {$/;"	r
where	lib/http/controllers/resources/ripple_transactions.js	/^    where: { id: request.params.id },$/;"	r
where	lib/http/controllers/resources/ripple_transactions.js	/^  where: { id: req.params.id },$/;"	r
where	test/api/record_incoming_payment.js	/^        where: {id: rippleTransaction.from_address_id}$/;"	r
where	test/api/record_incoming_payment.js	/^        where: {id: rippleTransaction.to_address_id}$/;"	r
where	test/core/incoming_payment.js	/^            where: {$/;"	r
where	test/utils/pagination_util.js	/^      where: {$/;"	r
whitelist	lib/api/configure_gatewayd.js	/^  this.whitelist = {$/;"	r
winston	lib/data/logs.js	/^var winston   = require('winston');$/;"	r
winston	package.json	/^    "winston": "^0.7.3",$/;"	f
winston-loggly	package.json	/^    "winston-loggly": "^1.0.1",$/;"	f
winston-raygun	package.json	/^    "winston-raygun": "0.0.6"$/;"	f
withdraw_address	lib/api/get_user_accounts.js	/^      user.withdraw_address = config.get('COLD_WALLET') + '?dt=' + user.external_account_id;$/;"	r
withdrawal	lib/http/controllers/api/clear_withdrawal.js	/^        withdrawal: withdrawal$/;"	r
withdrawalProcessor	processes/withdrawals.js	/^    var withdrawalProcessor = new WithdrawalProcessor(incomingPayment);$/;"	r
withdrawalProcessor	test/core/withdrawal_processor.js	/^        withdrawalProcessor = new WithdrawalProcessor(incomingTransaction);$/;"	r
wizardPlugin	Gatewaydfile.js	/^  var wizardPlugin = new WizardPlugin({$/;"	r
worker	processes/outgoing.js	/^function worker(gatewayd) {$/;"	r
worker	processes/policy_engine.js	/^var worker = new SqlMqWorker({$/;"	r
worker	processes/withdrawals.js	/^var worker = new SqlMqWorker({$/;"	r
